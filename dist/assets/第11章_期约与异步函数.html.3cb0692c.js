import{_ as n,o as s,c as a,d as t}from"./app.1a4fb0df.js";const p={},o=t(`<p>\u672C\u7AE0\u5185\u5BB9\uFF1A\u5F02\u6B65\u7F16\u7A0B\u3001\u671F\u7EA6\u3001\u5F02\u6B65\u51FD\u6570</p><p>ECMAScript 6 \u53CA\u4E4B\u540E\u7684\u51E0\u4E2A\u7248\u672C\u9010\u6B65\u52A0\u5927\u4E86\u5BF9\u5F02\u6B65\u7F16\u7A0B\u673A\u5236\u7684\u652F\u6301\uFF0C\u63D0\u4F9B\u4E86\u4EE4\u4EBA\u773C\u524D\u4E00\u4EAE\u7684\u65B0\u7279\u6027\u3002ECMAScript 6 \u65B0\u589E\u4E86\u6B63\u5F0F\u7684 Promise\uFF08\u671F\u7EA6\uFF09\u5F15\u7528\u7C7B\u578B\uFF0C\u652F\u6301\u4F18\u96C5\u5730\u5B9A\u4E49\u548C\u7EC4\u7EC7\u5F02\u6B65\u903B\u8F91\u3002\u63A5\u4E0B\u6765\u51E0\u4E2A\u7248\u672C\u589E\u52A0\u4E86\u4F7F\u7528 async \u548C await \u5173\u952E\u5B57\u5B9A\u4E49\u5F02\u6B65\u51FD\u6570\u7684\u673A\u5236\u3002</p><div class="custom-container tip"><p class="custom-container-title">\u6CE8\u610F</p><p>\u672C\u7AE0\u793A\u4F8B\u5C06\u5927\u91CF\u4F7F\u7528\u5F02\u6B65\u65E5\u5FD7\u8F93\u51FA\u7684\u65B9\u5F0F setTimeout(console.log, 0, ... params)\uFF0C\u65E8\u5728\u6F14\u793A\u6267\u884C\u987A\u5E8F\u53CA\u5176\u4ED6\u5F02\u6B65\u884C\u4E3A\u3002\u5F02\u6B65\u8F93\u51FA\u7684\u5185\u5BB9\u770B\u8D77\u6765\u867D\u7136\u50CF\u662F\u540C\u6B65\u8F93\u51FA\u7684\uFF0C\u4F46\u5B9E\u9645\u4E0A\u662F\u5F02\u6B65\u6253\u5370\u7684\u3002\u8FD9\u6837\u53EF\u4EE5\u8BA9\u671F\u7EA6\u7B49\u8FD4\u56DE\u7684\u503C\u8FBE\u5230\u5176\u6700\u7EC8\u72B6\u6001\u3002\u6B64\u5916\uFF0C\u6D4F\u89C8\u5668\u63A7\u5236\u53F0\u7684\u8F93\u51FA\u7ECF\u5E38\u80FD\u6253\u5370\u51FA JavaScript \u8FD0\u884C\u4E2D\u65E0\u6CD5\u83B7\u53D6\u7684\u5BF9\u8C61\u4FE1\u606F\uFF08\u6BD4\u5982\u671F\u7EA6\u7684\u72B6\u6001\uFF09\u3002\u8FD9\u4E2A\u7279\u6027\u5728\u793A\u4F8B\u4E2D\u5E7F\u6CDB\u4F7F\u7528\uFF0C\u4EE5\u4FBF\u8F85\u52A9\u8BFB\u8005\u7406\u76F8\u5173\u6982\u5FF5\u3002</p></div><h2 id="_11-1-\u5F02\u6B65\u7F16\u7A0B" tabindex="-1"><a class="header-anchor" href="#_11-1-\u5F02\u6B65\u7F16\u7A0B" aria-hidden="true">#</a> 11.1 \u5F02\u6B65\u7F16\u7A0B</h2><p>\u540C\u6B65\u884C\u4E3A\u548C\u5F02\u6B65\u884C\u4E3A\u7684\u5BF9\u7ACB\u7EDF\u4E00\u662F\u8BA1\u7B97\u673A\u79D1\u5B66\u7684\u4E00\u4E2A\u57FA\u672C\u6982\u5FF5\u3002\u7279\u522B\u662F\u5728 JavaScript \u8FD9\u79CD\u5355\u7EBF\u7A0B\u4E8B\u4EF6\u5FAA\u73AF\u6A21\u578B\u4E2D\uFF0C\u540C\u6B65\u64CD\u4F5C\u4E0E\u5F02\u6B65\u64CD\u4F5C\u66F4\u662F\u4EE3\u7801\u6240\u8981\u4F9D\u8D56\u7684\u6838\u5FC3\u673A\u5236\u3002\u5F02\u6B65\u884C\u4E3A\u662F\u4E3A\u4E86\u4F18\u5316\u56E0\u8BA1\u7B97\u91CF\u5927\u800C\u65F6\u95F4\u957F\u7684\u64CD\u4F5C\u3002\u5982\u679C\u5728\u7B49\u5F85\u5176\u4ED6\u64CD\u4F5C\u5B8C\u6210\u7684\u540C\u65F6\uFF0C\u5373\u4F7F\u8FD0\u884C\u5176\u4ED6\u6307\u4EE4\uFF0C\u7CFB\u7EDF\u4E5F\u80FD\u4FDD\u6301\u7A33\u5B9A\uFF0C\u90A3\u4E48\u8FD9\u6837\u505A\u5C31\u662F\u52A1\u5B9E\u7684\u3002</p><p>\u91CD\u8981\u7684\u662F\uFF0C\u5F02\u6B65\u64CD\u4F5C\u5E76\u4E0D\u4E00\u5B9A\u8BA1\u7B97\u91CF\u5927\u6216\u8981\u7B49\u5F88\u957F\u65F6\u95F4\u3002\u53EA\u8981\u4F60\u4E0D\u60F3\u4E3A\u7B49\u5F85\u67D0\u4E2A\u5F02\u6B65\u64CD\u4F5C\u800C\u963B\u585E\u7EBF\u7A0B\u6267\u884C\uFF0C\u90A3\u4E48\u4EFB\u4F55\u65F6\u5019\u90FD\u53EF\u4EE5\u4F7F\u7528\u3002</p><h3 id="_11-1-1-\u540C\u6B65\u4E0E\u5F02\u6B65" tabindex="-1"><a class="header-anchor" href="#_11-1-1-\u540C\u6B65\u4E0E\u5F02\u6B65" aria-hidden="true">#</a> 11.1.1 \u540C\u6B65\u4E0E\u5F02\u6B65</h3><p>\u540C\u6B65\u884C\u4E3A\u5BF9\u5E94\u5185\u5B58\u4E2D\u987A\u5E8F\u6267\u884C\u7684\u5904\u7406\u5668\u6307\u4EE4\u3002\u6BCF\u6761\u6307\u4EE4\u90FD\u4F1A\u4E25\u683C\u6309\u7167\u5B83\u4EEC\u51FA\u73B0\u7684\u987A\u5E8F\u6765\u6267\u884C\uFF0C\u800C\u6BCF\u6761\u6307\u4EE4\u6267\u884C\u540E\u4E5F\u80FD\u7ACB\u5373\u83B7\u5F97\u5B58\u50A8\u5728\u7CFB\u7EDF\u672C\u5730\uFF08\u5982\u5BC4\u5B58\u5668\u6216\u7CFB\u7EDF\u5185\u5B58\uFF09\u7684\u4FE1\u606F\u3002\u8FD9\u6837\u7684\u6267\u884C\u6D41\u7A0B\u5BB9\u6613\u5206\u6790\u7A0B\u5E8F\u5728\u6267\u884C\u5230\u4EE3\u7801\u4EFB\u610F\u4F4D\u7F6E\u65F6\u7684\u72B6\u6001\uFF08\u6BD4\u5982\u53D8\u91CF\u7684\u503C\uFF09\u3002</p><p>\u540C\u6B65\u64CD\u4F5C\u7684\u4F8B\u5B50\u53EF\u4EE5\u662F\u6267\u884C\u4E00\u6B21\u7B80\u5355\u7684\u6570\u5B66\u8BA1\u7B97\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
x <span class="token operator">=</span> x <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u7A0B\u5E8F\u6267\u884C\u7684\u6BCF\u4E00\u6B65\uFF0C\u90FD\u53EF\u4EE5\u63A8\u65AD\u51FA\u7A0B\u5E8F\u7684\u72B6\u6001\u3002\u8FD9\u662F\u56E0\u4E3A\u540E\u9762\u7684\u6307\u4EE4\u603B\u662F\u5728\u524D\u9762\u7684\u6307\u4EE4\u5B8C\u6210\u540E\u624D\u4F1A\u6267\u884C\u3002\u7B49\u5230\u6700\u540E\u4E00\u6761\u6307\u5B9A\u6267\u884C\u5B8C\u6BD5\uFF0C\u5B58\u50A8\u5728 x \u7684\u503C\u5C31\u7ACB\u5373\u53EF\u4EE5\u4F7F\u7528\u3002</p><p>\u8FD9\u4E24\u884C JavaScript \u4EE3\u7801\u5BF9\u5E94\u7684\u4F4E\u7EA7\u6307\u4EE4\uFF08\u4ECE JavaScript \u5230 x86\uFF09\u5E76\u4E0D\u96BE\u60F3\u8C61\u3002\u9996\u5148\uFF0C\u64CD\u4F5C\u7CFB\u7EDF\u4F1A\u5728\u6808\u5185\u5B58\u4E0A\u5206\u914D\u4E00\u4E2A\u5B58\u50A8\u6D6E\u70B9\u6570\u503C\u7684\u7A7A\u95F4\uFF0C\u7136\u540E\u9488\u5BF9\u8FD9\u4E2A\u503C\u505A\u4E00\u6B21\u6570\u5B66\u8BA1\u7B97\uFF0C\u518D\u628A\u8BA1\u7B97\u7ED3\u679C\u5199\u56DE\u4E4B\u524D\u5206\u914D\u7684\u5185\u5B58\u4E2D\u3002\u6240\u6709\u8FD9\u4E9B\u6307\u4EE4\u90FD\u662F\u5728\u5355\u4E2A\u7EBF\u7A0B\u4E2D\u6309\u987A\u5E8F\u6267\u884C\u7684\u3002\u5728\u4F4E\u7EA7\u6307\u4EE4\u7684\u5C42\u9762\uFF0C\u6709\u5145\u8DB3\u7684\u5DE5\u5177\u53EF\u4EE5\u786E\u5B9A\u7CFB\u7EDF\u72B6\u6001\u3002</p><p>\u76F8\u5BF9\u5730\uFF0C\u5F02\u6B65\u884C\u4E3A\u7C7B\u4F3C\u4E8E\u7CFB\u7EDF\u4E2D\u65AD\uFF0C\u5373\u5F53\u524D\u8FDB\u7A0B\u5916\u90E8\u7684\u5B9E\u4F53\u53EF\u4EE5\u89E6\u53D1\u4EE3\u7801\u6267\u884C\u3002\u5F02\u6B65\u64CD\u4F5C\u7ECF\u5E38\u662F\u5FC5\u8981\u7684\uFF0C\u56E0\u4E3A\u5F3A\u5236\u8FDB\u7A0B\u7B49\u5F85\u4E00\u4E2A\u957F\u65F6\u95F4\u7684\u64CD\u4F5C\u901A\u5E38\u662F\u4E0D\u53EF\u884C\u7684\uFF08\u540C\u6B65\u64CD\u4F5C\u5219\u5FC5\u987B\u8981\u7B49\uFF09\u3002\u5982\u679C\u4EE3\u7801\u8981\u8BBF\u95EE\u4E00\u4E9B\u9AD8\u5EF6\u8FDF\u7684\u8D44\u6E90\uFF0C\u6BD4\u5982\u5411\u8FDC\u7A0B\u670D\u52A1\u5668\u53D1\u9001\u8BF7\u6C42\u5E76\u7B49\u5F85\u54CD\u5E94\uFF0C\u90A3\u4E48\u5C31\u4F1A\u51FA\u73B0\u957F\u65F6\u95F4\u7684\u7B49\u5F85\u3002</p><p>\u5F02\u6B65\u64CD\u4F5C\u7684\u4F8B\u5B50\u53EF\u4EE5\u662F\u5728\u5B9A\u65F6\u56DE\u8C03\u4E2D\u6267\u884C\u4E00\u6B21\u7B80\u5355\u7684\u6570\u5B66\u8BA1\u7B97\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>x <span class="token operator">=</span> x <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u6BB5\u7A0B\u5E8F\u6700\u7EC8\u4E0E\u540C\u6B65\u4EE3\u7801\u6267\u884C\u7684\u4EFB\u52A1\u4E00\u6837\uFF0C\u90FD\u662F\u628A\u4E24\u4E2A\u6570\u52A0\u5728\u4E00\u8D77\uFF0C\u4F46\u8FD9\u4E00\u6B21\u6267\u884C\u7EBF\u7A0B\u4E0D\u77E5\u9053 x \u503C\u4F55\u65F6\u4F1A\u6539\u53D8\uFF0C\u56E0\u4E3A\u8FD9\u53D6\u51B3\u4E8E\u56DE\u8C03\u4F55\u65F6\u4ECE\u6D88\u606F\u961F\u5217\u51FA\u5217\u5E76\u6267\u884C\u3002</p><p>\u5F02\u6B65\u4EE3\u7801\u4E0D\u5BB9\u6613\u63A8\u65AD\u3002\u867D\u7136\u8FD9\u4E2A\u4F8B\u5B50\u5BF9\u5E94\u7684\u4F4E\u7EA7\u4EE3\u7801\u6700\u7EC8\u8DDF\u524D\u9762\u7684\u4F8B\u5B50\u6CA1\u4EC0\u4E48\u533A\u522B\uFF0C\u4F46\u7B2C\u4E8C\u4E2A\u6307\u4EE4\u5757\uFF08\u52A0\u64CD\u4F5C\u53CA\u8D4B\u503C\u64CD\u4F5C\uFF09\u662F\u7531\u7CFB\u7EDF\u8BA1\u65F6\u5668\u89E6\u53D1\u7684\uFF0C\u8FD9\u4F1A\u751F\u6210\u4E00\u4E2A\u5165\u961F\u6267\u884C\u7684\u4E2D\u65AD\u3002\u5230\u5E95\u4EC0\u4E48\u65F6\u5019\u4F1A\u89E6\u53D1\u8FD9\u4E2A\u4E2D\u65AD\uFF0C\u8FD9\u5BF9 JavaScript \u8FD0\u884C\u65F6\u6765\u8BF4\u662F\u4E00\u4E2A\u9ED1\u76D2\uFF0C\u56E0\u6B64\u5B9E\u9645\u4E0A\u65E0\u6CD5\u9884\u77E5\uFF08\u5C3D\u7BA1\u53EF\u4EE5\u4FDD\u8BC1\u8FD9\u53D1\u751F\u5728\u5F53\u524D\u7EBF\u7A0B\u7684\u540C\u6B65\u4EE3\u7801\u6267\u884C\u4E4B\u540E\uFF0C\u5426\u5219\u56DE\u8C03\u90FD\u6CA1\u6709\u673A\u4F1A\u51FA\u5217\u88AB\u6267\u884C\uFF09\u3002\u65E0\u8BBA\u5982\u4F55\uFF0C\u5728\u6392\u5B9A\u56DE\u8C03\u4EE5\u540E\u57FA\u672C\u6CA1\u529E\u6CD5\u77E5\u9053\u7CFB\u7EDF\u72B6\u6001\u4F55\u65F6\u53D8\u5316\u3002</p><p>\u4E3A\u4E86\u8BA9\u540E\u7EED\u4EE3\u7801\u80FD\u591F\u4F7F\u7528 x\uFF0C\u5F02\u6B65\u6267\u884C\u7684\u51FD\u6570\u9700\u8981\u5728\u66F4\u65B0 x \u7684\u503C\u4EE5\u540E\u901A\u77E5\u5176\u4ED6\u4EE3\u7801\u3002\u5982\u679C\u7A0B\u5E8F\u4E0D\u9700\u8981\u8FD9\u4E2A\u503C\uFF0C\u90A3\u4E48\u5C31\u53EA\u7BA1\u7EE7\u7EED\u6267\u884C\uFF0C\u4E0D\u5FC5\u7B49\u5F85\u8FD9\u4E2A\u7ED3\u679C\u4E86\u3002</p><p>\u8BBE\u8BA1\u4E00\u4E2A\u80FD\u591F\u77E5\u9053 x \u4EC0\u4E48\u65F6\u5019\u53EF\u4EE5\u8BFB\u53D6\u7684\u7CFB\u7EDF\u662F\u975E\u5E38\u96BE\u7684\u3002JavaScript \u5728\u5B9E\u73B0\u8FD9\u6837\u4E00\u4E2A\u7CFB\u7EDF\u7684\u8FC7\u7A0B\u4E2D\u4E5F\u7ECF\u5386\u4E86\u51E0\u6B21\u8FED\u4EE3\u3002</p><h3 id="_11-1-2-\u4EE5\u5F80\u7684\u5F02\u6B65\u7F16\u7A0B\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#_11-1-2-\u4EE5\u5F80\u7684\u5F02\u6B65\u7F16\u7A0B\u6A21\u5F0F" aria-hidden="true">#</a> 11.1.2 \u4EE5\u5F80\u7684\u5F02\u6B65\u7F16\u7A0B\u6A21\u5F0F</h3><p>\u5F02\u6B65\u884C\u4E3A\u662F JavaScript \u7684\u57FA\u7840\uFF0C\u4F46\u4EE5\u524D\u7684\u5B9E\u73B0\u4E0D\u7406\u60F3\u3002\u5728\u65E9\u671F\u7684 JavaScript \u4E2D\uFF0C\u53EA\u652F\u6301\u5B9A\u4E49\u56DE\u8C03\u51FD\u6570\u6765\u8868\u660E\u5F02\u6B65\u64CD\u4F5C\u5B8C\u6210\u3002\u4E32\u8054\u591A\u4E2A\u5F02\u6B65\u64CD\u4F5C\u662F\u4E00\u4E2A\u5E38\u89C1\u7684\u95EE\u9898\uFF0C\u901A\u5E38\u9700\u8981\u6DF1\u5EA6\u5D4C\u5957\u7684\u56DE\u8C03\u51FD\u6570\uFF08\u4FD7\u79F0\u201C\u56DE\u8C03\u5730\u72F1\u201D\uFF09\u6765\u89E3\u51B3\u3002</p><p>\u5047\u8BBE\u6709\u4EE5\u4E0B\u5F02\u6B65\u51FD\u6570\uFF0C\u4F7F\u7528\u4E86 setTimeout \u5728\u4E00\u79D2\u949F\u4E4B\u540E\u6267\u884C\u67D0\u4E9B\u64CD\u4F5C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">double</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> value <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">double</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 6\uFF08\u5927\u7EA6 1000 \u6BEB\u79D2\u4E4B\u540E\uFF09</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u7684\u4EE3\u7801\u6CA1\u4EC0\u4E48\u795E\u79D8\u7684\uFF0C\u4F46\u5173\u952E\u662F\u7406\u89E3\u4E3A\u4EC0\u4E48\u8BF4\u5B83\u662F\u4E00\u4E2A\u5F02\u6B65\u51FD\u6570\u3002setTimeout \u53EF\u4EE5\u5B9A\u4E49\u4E00\u4E2A\u5728\u6307\u5B9A\u65F6\u95F4\u4E4B\u540E\u4F1A\u88AB\u8C03\u5EA6\u6267\u884C\u7684\u56DE\u8C03\u51FD\u6570\u3002\u5BF9\u8FD9\u4E2A\u4F8B\u5B50\u800C\u8A00\uFF0C1000 \u6BEB\u79D2\u4E4B\u540E\uFF0CJavaScript \u8FD0\u884C\u65F6\u4F1A\u628A\u56DE\u8C03\u51FD\u6570\u63A8\u5230\u81EA\u5DF1\u7684\u6D88\u606F\u961F\u5217\u4E0A\u53BB\u7B49\u5F85\u6267\u884C\u3002\u63A8\u5230\u961F\u5217\u4E4B\u540E\uFF0C\u56DE\u8C03\u4EC0\u4E48\u65F6\u5019\u51FA\u5217\u88AB\u6267\u884C\u5BF9 JavaScript \u4EE3\u7801\u5C31\u5B8C\u5168\u4E0D\u53EF\u89C1\u4E86\u3002\u8FD8\u6709\u4E00\u70B9\uFF0Cdouble()\u51FD\u6570\u5728 setTimeout \u6210\u529F\u8C03\u5EA6\u5F02\u6B65\u64CD\u4F5C\u4E4B\u540E\u4F1A\u7ACB\u5373\u9000\u51FA\u3002</p><p><strong>1. \u5F02\u6B65\u8FD4\u56DE\u503C</strong><br> \u5047\u8BBE setTimeout \u64CD\u4F5C\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u6709\u7528\u7684\u503C\u3002\u6709\u4EC0\u4E48\u597D\u529E\u6CD5\u628A\u8FD9\u4E2A\u503C\u4F20\u7ED9\u9700\u8981\u5B83\u7684\u5730\u65B9\uFF1F\u5E7F\u6CDB\u63A5\u53D7\u7684\u4E00\u4E2A\u7B56\u7565\u662F\u7ED9\u5F02\u6B65\u64CD\u4F5C\u63D0\u4F9B\u4E00\u4E2A\u56DE\u8C03\uFF0C\u8FD9\u4E2A\u56DE\u8C03\u4E2D\u5305\u542B\u8981\u4F7F\u7528\u5F02\u6B65\u8FD4\u56DE\u503C\u7684\u4EE3\u7801\uFF08\u4F5C\u4E3A\u56DE\u8C03\u7684\u53C2\u6570\uFF09\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">double</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">callback</span><span class="token punctuation">(</span>value <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">double</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">I was given: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>x<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// I was given: 6\uFF08\u5927\u7EA6 1000 \u6BEB\u79D2\u4E4B\u540E\uFF09</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u7684 setTimeout \u8C03\u7528\u544A\u8BC9 JavaScript \u8FD0\u884C\u65F6\u5728 1000 \u6BEB\u79D2\u4E4B\u540E\u628A\u4E00\u4E2A\u51FD\u6570\u63A8\u5230\u6D88\u606F\u961F\u5217\u4E0A\u3002\u8FD9\u4E2A\u51FD\u6570\u4F1A\u7531\u8FD0\u884C\u65F6\u8D1F\u8D23\u5F02\u6B65\u8C03\u5EA6\u6267\u884C\u3002\u800C\u4F4D\u4E8E\u51FD\u6570\u95ED\u5305\u4E2D\u7684\u56DE\u8C03\u53CA\u5176\u53C2\u6570\u5728\u5F02\u6B65\u6267\u884C\u65F6\u4ECD\u7136\u662F\u53EF\u7528\u7684\u3002</p><p><strong>2. \u5931\u8D25\u5904\u7406</strong><br> \u5F02\u6B65\u64CD\u4F5C\u7684\u5931\u8D25\u5904\u7406\u5728\u56DE\u8C03\u6A21\u578B\u4E2D\u4E5F\u8981\u8003\u8651\uFF0C\u56E0\u6B64\u81EA\u7136\u5C31\u51FA\u73B0\u4E86\u6210\u529F\u56DE\u8C03\u548C\u5931\u8D25\u56DE\u8C03\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">double</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> success<span class="token punctuation">,</span> failure</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> value <span class="token operator">!==</span> <span class="token string">&quot;number&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token string">&quot;Must provide number as first argument&quot;</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token function">success</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">failure</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token function-variable function">successCallback</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Success: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>x<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">failureCallback</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Failure: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>e<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">double</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> successCallback<span class="token punctuation">,</span> failureCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">double</span><span class="token punctuation">(</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span> successCallback<span class="token punctuation">,</span> failureCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Success: 6\uFF08\u5927\u7EA6 1000 \u6BEB\u79D2\u4E4B\u540E\uFF09</span>
<span class="token comment">// Failure: Must provide number as first argument\uFF08\u5927\u7EA6 1000 \u6BEB\u79D2\u4E4B\u540E\uFF09</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u79CD\u6A21\u5F0F\u5DF2\u7ECF\u4E0D\u53EF\u53D6\u4E86\uFF0C\u56E0\u4E3A\u5FC5\u987B\u5728\u521D\u59CB\u5316\u5F02\u6B65\u64CD\u4F5C\u65F6\u5B9A\u4E49\u56DE\u8C03\u3002\u5F02\u6B65\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u53EA\u5728\u77ED\u65F6\u95F4\u5185\u5B58\u5728\uFF0C\u53EA\u6709\u9884\u5907\u597D\u5C06\u8FD9\u4E2A\u77ED\u65F6\u95F4\u5185\u5B58\u5728\u7684\u503C\u4F5C\u4E3A\u53C2\u6570\u7684\u56DE\u8C03\u624D\u80FD\u63A5\u6536\u5230\u5B83\u3002</p><p><strong>3. \u5D4C\u5957\u5F02\u6B65\u56DE\u8C03</strong><br> \u5982\u679C\u5F02\u6B65\u8FD4\u503C\u53C8\u4F9D\u8D56\u53E6\u4E00\u4E2A\u5F02\u6B65\u8FD4\u56DE\u503C\uFF0C\u90A3\u4E48\u56DE\u8C03\u7684\u60C5\u51B5\u8FD8\u4F1A\u8FDB\u4E00\u6B65\u53D8\u590D\u6742\u3002\u5728\u5B9E\u9645\u7684\u4EE3\u7801\u4E2D\uFF0C\u8FD9\u5C31\u8981\u6C42\u5D4C\u5957\u56DE\u8C03\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">double</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> success<span class="token punctuation">,</span> failure</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> value <span class="token operator">!==</span> <span class="token string">&quot;number&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token string">&quot;Must provide number as first argument&quot;</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token function">success</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">failure</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token function-variable function">successCallback</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">double</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">y</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Success: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>y<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token function-variable function">failureCallback</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Failure: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>e<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">double</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> successCallback<span class="token punctuation">,</span> failureCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Success: 12\uFF08\u5927\u7EA6 1000 \u6BEB\u79D2\u4E4B\u540E\uFF09</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_11-2-\u671F\u7EA6" tabindex="-1"><a class="header-anchor" href="#_11-2-\u671F\u7EA6" aria-hidden="true">#</a> 11.2 \u671F\u7EA6</h2><p>\u671F\u7EA6\u662F\u5BF9\u5C1A\u4E0D\u5B58\u5728\u7ED3\u679C\u7684\u4E00\u4E2A\u66FF\u8EAB\u3002\u671F\u7EA6\uFF08promise\uFF09\u8FD9\u4E2A\u540D\u5B57\u6700\u65E9\u662F\u7531 Daniel Friedman \u548C David Wise \u5728\u4ED6\u4EEC\u4E8E 1976 \u5E74\u53D1\u8868\u7684\u8BBA\u6587\u201CThe Impact of Applicative Programming on Multiprocessing\u201D\u4E2D\u63D0\u51FA\u6765\u7684\u3002\u4F46\u76F4\u5230\u5341\u51E0\u5E74\u4EE5\u540E\uFF0CBarbara Liskov \u548C Liuba Shrira \u5728 1988 \u5E74\u53D1\u8868\u4E86\u8BBA\u6587\u201CPromises: Linguistic Support for Efficient Asynchronous Procedure Calls in Distributed Systems\u201D\uFF0C\u8FD9\u4E2A\u6982\u5FF5\u624D\u771F\u6B63\u786E\u7ACB\u4E0B\u6765\u3002\u540C\u4E00\u65F6\u671F\u7684\u8BA1\u7B97\u673A\u79D1\u5B66\u5BB6\u8FD8\u4F7F\u7528\u4E86\u201C\u7EC8\u5C40\u201D\uFF08eventual\uFF09\u3001\u201C\u671F\u8BB8\u201D\uFF08future\uFF09\u3001\u201C\u5EF6\u8FDF\u201D\uFF08delay\uFF09\u548C\u201C\u8FDF\u4ED8\u201D\uFF08deferred\uFF09\u7B49\u672F\u8BED\u6307\u4EE3\u540C\u6837\u7684\u6982\u5FF5\u3002\u6240\u6709\u8FD9\u4E9B\u6982\u5FF5\u63CF\u8FF0\u7684\u90FD\u662F\u4E00\u79CD\u5F02\u6B65\u7A0B\u5E8F\u6267\u884C\u7684\u673A\u5236\u3002</p><h3 id="_11-2-1-promises-a-\u89C4\u8303" tabindex="-1"><a class="header-anchor" href="#_11-2-1-promises-a-\u89C4\u8303" aria-hidden="true">#</a> 11.2.1 Promises/A+\u89C4\u8303</h3><p>\u65E9\u671F\u7684\u671F\u7EA6\u673A\u5236\u5728 jQuery \u548C Dojo \u4E2D\u662F\u4EE5 Deferred API \u7684\u5F62\u5F0F\u51FA\u73B0\u7684\u3002\u5230\u4E86 2010 \u5E74\uFF0CCommonJS \u9879\u76EE\u5B9E\u73B0\u7684 Promises/A \u89C4\u8303\u65E5\u76CA\u6D41\u884C\u8D77\u6765\u3002Q \u548C Bluebird \u7B49\u7B2C\u4E09\u65B9 JavaScript \u671F\u7EA6\u5E93\u4E5F\u8D8A\u6765\u8D8A\u5F97\u5230\u793E\u533A\u8BA4\u53EF\uFF0C\u867D\u7136\u8FD9\u4E9B\u5E93\u7684\u5B9E\u73B0\u591A\u5C11\u90FD\u6709\u4E9B\u4E0D\u540C\u3002\u4E3A\u5F25\u5408\u73B0\u6709\u5B9E\u73B0\u4E4B\u95F4\u7684\u5DEE\u5F02\uFF0C2012 \u5E74 Promises/A+\u7EC4\u7EC7\u5206\u53C9\uFF08fork\uFF09 \u4E86 CommonJS \u7684 Promises/A \u5EFA\u8BAE\uFF0C\u5E76\u4EE5\u76F8\u540C\u7684\u540D\u5B57\u5236\u5B9A\u4E86 Promises/A+\u89C4\u8303\u3002\u8FD9\u4E2A\u89C4\u8303\u6700\u7EC8\u6210\u4E3A\u4E86 ECMAScript 6 \u89C4\u8303\u5B9E\u73B0\u7684\u8303\u672C\u3002</p><p>ECMAScript 6 \u589E\u52A0\u4E86\u5BF9 Promises/A+\u89C4\u8303\u7684\u5B8C\u5584\u652F\u6301\uFF0C\u5373 Promise \u7C7B\u578B\u3002\u4E00\u7ECF\u63A8\u51FA\uFF0CPromise \u5C31\u5927\u53D7\u6B22\u8FCE\uFF0C\u6210\u4E3A\u4E86\u4E3B\u5BFC\u6027\u7684\u5F02\u6B65\u7F16\u7A0B\u673A\u5236\u3002\u6240\u6709\u73B0\u4EE3\u6D4F\u89C8\u5668\u90FD\u652F\u6301 ES6 \u671F\u7EA6\uFF0C\u5F88\u591A\u5176\u4ED6\u6D4F\u89C8\u5668 API\uFF08\u5982 fetch()\u548C Battery Status API\uFF09\u4E5F\u4EE5\u671F\u7EA6\u4E3A\u57FA\u7840\u3002</p><h3 id="_11-2-2-\u671F\u7EA6\u57FA\u7840" tabindex="-1"><a class="header-anchor" href="#_11-2-2-\u671F\u7EA6\u57FA\u7840" aria-hidden="true">#</a> 11.2.2 \u671F\u7EA6\u57FA\u7840</h3><p>ECMAScript 6 \u65B0\u589E\u7684\u5F15\u7528\u7C7B\u578B Promise\uFF0C\u53EF\u4EE5\u901A\u8FC7 new \u64CD\u4F5C\u7B26\u6765\u5B9E\u4F8B\u5316\u3002\u521B\u5EFA\u65B0\u671F\u7EA6\u65F6\u9700\u8981\u4F20\u5165\u6267\u884C\u5668\uFF08executor\uFF09\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570\uFF08\u540E\u9762\u9A6C\u4E0A\u4F1A\u4ECB\u7ECD\uFF09\uFF0C\u4E0B\u9762\u7684\u4F8B\u5B50\u4F7F\u7528\u4E86\u4E00\u4E2A\u7A7A\u51FD\u6570\u5BF9\u8C61\u6765\u5E94\u4ED8\u4E00\u4E0B\u89E3\u91CA\u5668\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;pending&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E4B\u6240\u4EE5\u8BF4\u662F\u5E94\u4ED8\u89E3\u91CA\u5668\uFF0C\u662F\u56E0\u4E3A\u5982\u679C\u4E0D\u63D0\u4F9B\u6267\u884C\u5668\u51FD\u6570\uFF0C\u5C31\u4F1A\u629B\u51FA SyntaxError\u3002</p><p><strong>1. \u671F\u7EA6\u72B6\u6001\u673A</strong><br> \u5728\u628A\u4E00\u4E2A\u671F\u7EA6\u5B9E\u4F8B\u4F20\u7ED9 console.log()\u65F6\uFF0C\u63A7\u5236\u53F0\u8F93\u51FA\uFF08\u53EF\u80FD\u56E0\u6D4F\u89C8\u5668\u4E0D\u540C\u800C\u7565\u6709\u5DEE\u5F02\uFF09\u8868\u660E\u8BE5\u5B9E\u4F8B\u5904\u4E8E\u5F85\u5B9A\uFF08pending\uFF09\u72B6\u6001\u3002\u5982\u524D\u6240\u8FF0\uFF0C\u671F\u7EA6\u662F\u4E00\u4E2A\u6709\u72B6\u6001\u7684\u5BF9\u8C61\uFF0C\u53EF\u80FD\u5904\u4E8E\u5982\u4E0B 3 \u79CD\u72B6\u6001\u4E4B\u4E00\uFF1A</p><ul><li>\u5F85\u5B9A\uFF08pending\uFF09</li><li>\u5151\u73B0\uFF08fulfilled\uFF0C\u6709\u65F6\u5019\u4E5F\u79F0\u4E3A\u201C\u89E3\u51B3\u201D\uFF0Cresolved\uFF09</li><li>\u62D2\u7EDD\uFF08rejected\uFF09</li></ul><p>\u5F85\u5B9A\uFF08pending\uFF09\u662F\u671F\u7EA6\u7684\u6700\u521D\u59CB\u72B6\u6001\u3002\u5728\u5F85\u5B9A\u72B6\u6001\u4E0B\uFF0C\u671F\u7EA6\u53EF\u4EE5\u843D\u5B9A\uFF08settled\uFF09\u4E3A\u4EE3\u8868\u6210\u529F\u7684\u5151\u73B0\uFF08fulfilled\uFF09\u72B6\u6001\uFF0C\u6216\u8005\u4EE3\u8868\u5931\u8D25\u7684\u62D2\u7EDD\uFF08rejected\uFF09\u72B6\u6001\u3002\u65E0\u8BBA\u843D\u5B9A\u4E3A\u54EA\u79CD\u72B6\u6001\u90FD\u662F\u4E0D\u53EF\u9006\u7684\u3002\u53EA\u8981\u4ECE\u5F85\u5B9A\u8F6C\u6362\u4E3A\u5151\u73B0\u6216\u62D2\u7EDD\uFF0C\u671F\u7EA6\u7684\u72B6\u6001\u5C31\u4E0D\u518D\u6539\u53D8\u3002\u800C\u4E14\uFF0C\u4E5F\u4E0D\u80FD\u4FDD\u8BC1\u671F\u7EA6\u5FC5\u7136\u4F1A\u8131\u79BB\u5F85\u5B9A\u72B6\u6001\u3002\u56E0\u6B64\uFF0C\u7EC4\u7EC7\u5408\u7406\u7684\u4EE3\u7801\u65E0\u8BBA\u671F\u7EA6\u89E3\u51B3\uFF08resolve\uFF09\u8FD8\u662F\u62D2\u7EDD\uFF08reject\uFF09\uFF0C\u751A\u81F3\u6C38\u8FDC\u5904\u4E8E\u5F85\u5B9A\uFF08pending\uFF09\u72B6\u6001\uFF0C\u90FD\u5E94\u8BE5\u5177\u6709\u6070\u5F53\u7684\u884C\u4E3A\u3002</p><p>\u91CD\u8981\u7684\u662F\uFF0C\u671F\u7EA6\u7684\u72B6\u6001\u662F\u79C1\u6709\u7684\uFF0C\u4E0D\u80FD\u76F4\u63A5\u901A\u8FC7 JavaScript \u68C0\u6D4B\u5230\u3002\u8FD9\u4E3B\u8981\u662F\u4E3A\u4E86\u907F\u514D\u6839\u636E\u8BFB\u53D6\u5230\u7684\u671F\u7EA6\u72B6\u6001\uFF0C\u4EE5\u540C\u6B65\u65B9\u5F0F\u5904\u7406\u671F\u7EA6\u5BF9\u8C61\u3002\u53E6\u5916\uFF0C\u671F\u7EA6\u7684\u72B6\u6001\u4E5F\u4E0D\u80FD\u88AB\u5916\u90E8 JavaScript \u4EE3\u7801\u4FEE\u6539\u3002\u8FD9\u4E0E\u4E0D\u80FD\u8BFB\u53D6\u8BE5\u72B6\u6001\u7684\u539F\u56E0\u662F\u4E00\u6837\u7684\uFF1A\u671F\u7EA6\u6545\u610F\u5C06\u5F02\u6B65\u884C\u4E3A\u5C01\u88C5\u8D77\u6765\uFF0C\u4ECE\u800C\u9694\u79BB\u5916\u90E8\u7684\u540C\u6B65\u4EE3\u7801\u3002</p><p><strong>2. \u89E3\u51B3\u503C\u3001\u62D2\u7EDD\u7406\u7531\u53CA\u671F\u7EA6\u7528\u4F8B</strong><br> \u671F\u7EA6\u4E3B\u8981\u6709\u4E24\u5927\u7528\u9014\u3002\u9996\u5148\u662F\u62BD\u8C61\u5730\u8868\u793A\u4E00\u4E2A\u5F02\u6B65\u64CD\u4F5C\u3002\u671F\u7EA6\u7684\u72B6\u6001\u4EE3\u8868\u671F\u7EA6\u662F\u5426\u5B8C\u6210\u3002\u201C\u5F85\u5B9A\u201D\u8868\u793A\u5C1A\u672A\u5F00\u59CB\u6216\u8005\u6B63\u5728\u6267\u884C\u4E2D\u3002\u201C\u5151\u73B0\u201D\u8868\u793A\u5DF2\u7ECF\u6210\u529F\u5B8C\u6210\uFF0C\u800C\u201C\u62D2\u7EDD\u201D\u5219\u8868\u793A\u6CA1\u6709\u6210\u529F\u5B8C\u6210\u3002</p><p>\u67D0\u4E9B\u60C5\u51B5\u4E0B\uFF0C\u8FD9\u4E2A\u72B6\u6001\u673A\u5C31\u662F\u671F\u7EA6\u53EF\u4EE5\u63D0\u4F9B\u7684\u6700\u6709\u7528\u7684\u4FE1\u606F\u3002\u77E5\u9053\u4E00\u6BB5\u5F02\u6B65\u4EE3\u7801\u5DF2\u7ECF\u5B8C\u6210\uFF0C\u5BF9\u4E8E\u5176\u4ED6\u4EE3\u7801\u800C\u8A00\u5DF2\u7ECF\u8DB3\u591F\u4E86\u3002\u6BD4\u5982\uFF0C\u5047\u8BBE\u671F\u7EA6\u8981\u5411\u670D\u52A1\u5668\u53D1\u9001\u4E00\u4E2A HTTP \u8BF7\u6C42\u3002\u8BF7\u6C42\u8FD4\u56DE <code>200~299</code> \u8303\u56F4\u5185\u7684\u72B6\u6001\u7801\u5C31\u8DB3\u4EE5\u8BA9\u671F\u7EA6\u7684\u72B6\u6001\u53D8\u4E3A\u201C\u5151\u73B0\u201D\u3002\u7C7B\u4F3C\u5730\uFF0C\u5982\u679C\u8BF7\u6C42\u8FD4\u56DE\u7684\u72B6\u6001\u7801\u4E0D\u5728 <code>200~299</code> \u8FD9\u4E2A\u8303\u56F4\u5185\uFF0C\u90A3\u4E48\u5C31\u4F1A\u628A\u671F\u7EA6\u72B6\u6001\u5207\u6362\u4E3A\u201C\u62D2\u7EDD\u201D\u3002</p><p>\u5728\u53E6\u5916\u4E00\u4E9B\u60C5\u51B5\u4E0B\uFF0C\u671F\u7EA6\u5C01\u88C5\u7684\u5F02\u6B65\u64CD\u4F5C\u4F1A\u5B9E\u9645\u751F\u6210\u67D0\u4E2A\u503C\uFF0C\u800C\u7A0B\u5E8F\u671F\u5F85\u671F\u7EA6\u72B6\u6001\u6539\u53D8\u65F6\u53EF\u4EE5\u8BBF\u95EE\u8FD9\u4E2A\u503C\u3002\u76F8\u5E94\u5730\uFF0C\u5982\u679C\u671F\u7EA6\u88AB\u62D2\u7EDD\uFF0C\u7A0B\u5E8F\u5C31\u4F1A\u671F\u5F85\u671F\u7EA6\u72B6\u6001\u6539\u53D8\u65F6\u53EF\u4EE5\u62FF\u5230\u62D2\u7EDD\u7684\u7406\u7531\u3002\u6BD4\u5982\uFF0C\u5047\u8BBE\u671F\u7EA6\u5411\u670D\u52A1\u5668\u53D1\u9001\u4E00\u4E2A HTTP \u8BF7\u6C42\u5E76\u9884\u5B9A\u4F1A\u8FD4\u56DE\u4E00\u4E2A JSON\u3002\u5982\u679C\u8BF7\u6C42\u8FD4\u56DE\u8303\u56F4\u5728 <code>200~299</code> \u7684\u72B6\u6001\u7801\uFF0C\u5219\u8DB3\u4EE5\u8BA9\u671F\u7EA6\u7684\u72B6\u6001\u53D8\u4E3A\u5151\u73B0\u3002\u6B64\u65F6\u671F\u7EA6\u5185\u90E8\u5C31\u53EF\u4EE5\u6536\u5230\u4E00\u4E2A JSON \u5B57\u7B26\u4E32\u3002\u7C7B\u4F3C\u5730\uFF0C\u5982\u679C\u8BF7\u6C42\u8FD4\u56DE\u7684\u72B6\u6001\u7801\u4E0D\u5728 <code>200~299</code> \u8FD9\u4E2A\u8303\u56F4\u5185\uFF0C\u90A3\u4E48\u5C31\u4F1A\u628A\u671F\u7EA6\u72B6\u6001\u5207\u6362\u4E3A\u62D2\u7EDD\u3002\u6B64\u65F6\u62D2\u7EDD\u7684\u7406\u7531\u53EF\u80FD\u662F\u4E00\u4E2A Error \u5BF9\u8C61\uFF0C\u5305\u542B\u7740 HTTP \u72B6\u6001\u7801\u53CA\u76F8\u5173\u9519\u8BEF\u6D88\u606F\u3002</p><p>\u4E3A\u4E86\u652F\u6301\u8FD9\u4E24\u79CD\u7528\u4F8B\uFF0C\u6BCF\u4E2A\u671F\u7EA6\u53EA\u8981\u72B6\u6001\u5207\u6362\u4E3A\u5151\u73B0\uFF0C\u5C31\u4F1A\u6709\u4E00\u4E2A\u79C1\u6709\u7684\u5185\u90E8\u503C\uFF08value\uFF09\u3002\u7C7B\u4F3C\u5730\uFF0C\u6BCF\u4E2A\u671F\u7EA6\u53EA\u8981\u72B6\u6001\u5207\u6362\u4E3A\u62D2\u7EDD\uFF0C\u5C31\u4F1A\u6709\u4E00\u4E2A\u79C1\u6709\u7684\u5185\u90E8\u7406\u7531\uFF08reason\uFF09\u3002\u65E0\u8BBA\u662F\u503C\u8FD8\u662F\u7406\u7531\uFF0C\u90FD\u662F\u5305\u542B\u539F\u59CB\u503C\u6216\u5BF9\u8C61\u7684\u4E0D\u53EF\u4FEE\u6539\u7684\u5F15\u7528\u3002\u4E8C\u8005\u90FD\u662F\u53EF\u9009\u7684\uFF0C\u800C\u4E14\u9ED8\u8BA4\u503C\u4E3A undefined\u3002\u5728\u671F\u7EA6\u5230\u8FBE\u67D0\u4E2A\u843D\u5B9A\u72B6\u6001\u65F6\u6267\u884C\u7684\u5F02\u6B65\u4EE3\u7801\u59CB\u7EC8\u4F1A\u6536\u5230\u8FD9\u4E2A\u503C\u6216\u7406\u7531\u3002</p><p><strong>3. \u901A\u8FC7\u6267\u884C\u51FD\u6570\u63A7\u5236\u671F\u7EA6\u72B6\u6001</strong><br> \u7531\u4E8E\u671F\u7EA6\u7684\u72B6\u6001\u662F\u79C1\u6709\u7684\uFF0C\u6240\u4EE5\u53EA\u80FD\u5728\u5185\u90E8\u8FDB\u884C\u64CD\u4F5C\u3002\u5185\u90E8\u64CD\u4F5C\u5728\u671F\u7EA6\u7684\u6267\u884C\u5668\u51FD\u6570\u4E2D\u5B8C\u6210\u3002\u6267\u884C\u5668\u51FD\u6570\u4E3B\u8981\u6709\u4E24\u9879\u804C\u8D23\uFF1A\u521D\u59CB\u5316\u671F\u7EA6\u7684\u5F02\u6B65\u884C\u4E3A\u548C\u63A7\u5236\u72B6\u6001\u7684\u6700\u7EC8\u8F6C\u6362\u3002\u5176\u4E2D\uFF0C\u63A7\u5236\u671F\u7EA6\u72B6\u6001\u7684\u8F6C\u6362\u662F\u901A\u8FC7\u8C03\u7528\u5B83\u7684\u4E24\u4E2A\u51FD\u6570\u53C2\u6570\u5B9E\u73B0\u7684\u3002\u8FD9\u4E24\u4E2A\u51FD\u6570\u53C2\u6570\u901A\u5E38\u90FD\u547D\u540D\u4E3A resolve()\u548C reject()\u3002\u8C03\u7528 resolve()\u4F1A\u628A\u72B6\u6001\u5207\u6362\u4E3A\u5151\u73B0\uFF0C\u8C03\u7528 reject()\u4F1A\u628A\u72B6\u6001\u5207\u6362\u4E3A\u62D2\u7EDD\u3002\u53E6\u5916\uFF0C\u8C03\u7528 reject()\u4E5F\u4F1A\u629B\u51FA\u9519\u8BEF\uFF08\u540E\u9762\u4F1A\u8BA8\u8BBA\u8FD9\u4E2A\u9519\u8BEF\uFF09\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;resolved&gt;</span>
<span class="token keyword">let</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;rejected&gt;</span>
<span class="token comment">// Uncaught error (in promise)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u524D\u9762\u7684\u4F8B\u5B50\u4E2D\uFF0C\u5E76\u6CA1\u6709\u4EC0\u4E48\u5F02\u6B65\u64CD\u4F5C\uFF0C\u56E0\u4E3A\u5728\u521D\u59CB\u5316\u671F\u7EA6\u65F6\uFF0C\u6267\u884C\u5668\u51FD\u6570\u5DF2\u7ECF\u6539\u53D8\u4E86\u6BCF\u4E2A\u671F\u7EA6\u7684\u72B6\u6001\u3002\u8FD9\u91CC\u7684\u5173\u952E\u5728\u4E8E\uFF0C\u6267\u884C\u5668\u51FD\u6570\u662F\u540C\u6B65\u6267\u884C\u7684\u3002\u8FD9\u662F\u56E0\u4E3A\u6267\u884C\u5668\u51FD\u6570\u662F\u671F\u7EA6\u7684\u521D\u59CB\u5316\u7A0B\u5E8F\u3002\u901A\u8FC7\u4E0B\u9762\u7684\u4F8B\u5B50\u53EF\u4EE5\u770B\u51FA\u4E0A\u9762\u4EE3\u7801\u7684\u6267\u884C\u987A\u5E8F\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;executor&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;promise initialized&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// executor</span>
<span class="token comment">// promise initialized</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6DFB\u52A0 setTimeout \u53EF\u4EE5\u63A8\u8FDF\u5207\u6362\u72B6\u6001\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u5728 console.log \u6253\u5370\u671F\u7EA6\u5B9E\u4F8B\u7684\u65F6\u5019\uFF0C\u8FD8\u4E0D\u4F1A\u6267\u884C\u8D85\u65F6\u56DE\u8C03\uFF08\u5373 resolve()\uFF09</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;pending&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u65E0\u8BBA resolve()\u548C reject()\u4E2D\u7684\u54EA\u4E2A\u88AB\u8C03\u7528\uFF0C\u72B6\u6001\u8F6C\u6362\u90FD\u4E0D\u53EF\u64A4\u9500\u4E86\u3002\u4E8E\u662F\u7EE7\u7EED\u4FEE\u6539\u72B6\u6001\u4F1A\u9759\u9ED8\u5931\u8D25\uFF0C\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6CA1\u6709\u6548\u679C</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;resolved&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E3A\u907F\u514D\u671F\u7EA6\u5361\u5728\u5F85\u5B9A\u72B6\u6001\uFF0C\u53EF\u4EE5\u6DFB\u52A0\u4E00\u4E2A\u5B9A\u65F6\u9000\u51FA\u529F\u80FD\u3002\u6BD4\u5982\uFF0C\u53EF\u4EE5\u901A\u8FC7 setTimeout \u8BBE\u7F6E\u4E00\u4E2A 10 \u79D2\u949F\u540E\u65E0\u8BBA\u5982\u4F55\u90FD\u4F1A\u62D2\u7EDD\u671F\u7EA6\u7684\u56DE\u8C03\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span>reject<span class="token punctuation">,</span> <span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 10 \u79D2\u540E\u8C03\u7528 reject()</span>
  <span class="token comment">// \u6267\u884C\u51FD\u6570\u7684\u903B\u8F91</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;pending&gt;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">11000</span><span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 11 \u79D2\u540E\u518D\u68C0\u67E5\u72B6\u6001</span>
<span class="token comment">// (After 10 seconds) Uncaught error</span>
<span class="token comment">// (After 11 seconds) Promise &lt;rejected&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56E0\u4E3A\u671F\u7EA6\u7684\u72B6\u6001\u53EA\u80FD\u6539\u53D8\u4E00\u6B21\uFF0C\u6240\u4EE5\u8FD9\u91CC\u7684\u8D85\u65F6\u62D2\u7EDD\u903B\u8F91\u4E2D\u53EF\u4EE5\u653E\u5FC3\u5730\u8BBE\u7F6E\u8BA9\u671F\u7EA6\u5904\u4E8E\u5F85\u5B9A\u72B6\u6001\u7684\u6700\u957F\u65F6\u95F4\u3002\u5982\u679C\u6267\u884C\u5668\u4E2D\u7684\u4EE3\u7801\u5728\u8D85\u65F6\u4E4B\u524D\u5DF2\u7ECF\u89E3\u51B3\u6216\u62D2\u7EDD\uFF0C\u90A3\u4E48\u8D85\u65F6\u56DE\u8C03\u518D\u5C1D\u8BD5\u62D2\u7EDD\u4E5F\u4F1A\u9759\u9ED8\u5931\u8D25\u3002</p><p><strong>4. Promise.resolve()</strong><br> \u671F\u7EA6\u5E76\u975E\u4E00\u5F00\u59CB\u5C31\u5FC5\u987B\u5904\u4E8E\u5F85\u5B9A\u72B6\u6001\uFF0C\u7136\u540E\u901A\u8FC7\u6267\u884C\u5668\u51FD\u6570\u624D\u80FD\u8F6C\u6362\u4E3A\u843D\u5B9A\u72B6\u6001\u3002\u901A\u8FC7\u8C03\u7528 Promise.resolve()\u9759\u6001\u65B9\u6CD5\uFF0C\u53EF\u4EE5\u5B9E\u4F8B\u5316\u4E00\u4E2A\u89E3\u51B3\u7684\u671F\u7EA6\u3002\u4E0B\u9762\u4E24\u4E2A\u671F\u7EA6\u5B9E\u4F8B\u5B9E\u9645\u4E0A\u662F\u4E00\u6837\u7684\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> p2 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u89E3\u51B3\u7684\u671F\u7EA6\u7684\u503C\u5BF9\u5E94\u7740\u4F20\u7ED9 Promise.resolve()\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u3002\u4F7F\u7528\u8FD9\u4E2A\u9759\u6001\u65B9\u6CD5\uFF0C\u5B9E\u9645\u4E0A\u53EF\u4EE5\u628A\u4EFB\u4F55\u503C\u90FD\u8F6C\u6362\u4E3A\u4E00\u4E2A\u671F\u7EA6\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Promise &lt;resolved&gt;: undefined</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Promise &lt;resolved&gt;: 3</span>
<span class="token comment">// \u591A\u4F59\u7684\u53C2\u6570\u4F1A\u5FFD\u7565</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Promise &lt;resolved&gt;: 4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u8FD9\u4E2A\u9759\u6001\u65B9\u6CD5\u800C\u8A00\uFF0C\u5982\u679C\u4F20\u5165\u7684\u53C2\u6570\u672C\u8EAB\u662F\u4E00\u4E2A\u671F\u7EA6\uFF0C\u90A3\u5B83\u7684\u884C\u4E3A\u5C31\u7C7B\u4F3C\u4E8E\u4E00\u4E2A\u7A7A\u5305\u88C5\u3002\u56E0\u6B64\uFF0C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\u53EF\u4EE5\u8BF4\u662F\u4E00\u4E2A\u5E42\u7B49\u65B9\u6CD5\uFF0C\u5982\u4E0B\u6240\u793A\uFF1A
<span class="token keyword">let</span> p <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p <span class="token operator">===</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// true</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p <span class="token operator">===</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u5E42\u7B49\u6027\u4F1A\u4FDD\u7559\u4F20\u5165\u671F\u7EA6\u7684\u72B6\u6001\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;pending&gt;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;pending&gt;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p <span class="token operator">===</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\uFF0C\u8FD9\u4E2A\u9759\u6001\u65B9\u6CD5\u80FD\u591F\u5305\u88C5\u4EFB\u4F55\u975E\u671F\u7EA6\u503C\uFF0C\u5305\u62EC\u9519\u8BEF\u5BF9\u8C61\uFF0C\u5E76\u5C06\u5176\u8F6C\u6362\u4E3A\u89E3\u51B3\u7684\u671F\u7EA6\u3002\u56E0\u6B64\uFF0C\u4E5F\u53EF\u80FD\u5BFC\u81F4\u4E0D\u7B26\u5408\u9884\u671F\u7684\u884C\u4E3A\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> p <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Promise &lt;resolved&gt;: Error: foo</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>5. Promise.reject()</strong><br> \u4E0E Promise.resolve()\u7C7B\u4F3C\uFF0CPromise.reject()\u4F1A\u5B9E\u4F8B\u5316\u4E00\u4E2A\u62D2\u7EDD\u7684\u671F\u7EA6\u5E76\u629B\u51FA\u4E00\u4E2A\u5F02\u6B65\u9519\u8BEF\uFF08\u8FD9\u4E2A\u9519\u8BEF\u4E0D\u80FD\u901A\u8FC7 try/catch \u6355\u83B7\uFF0C\u800C\u53EA\u80FD\u901A\u8FC7\u62D2\u7EDD\u5904\u7406\u7A0B\u5E8F\u6355\u83B7\uFF09\u3002\u4E0B\u9762\u7684\u4E24\u4E2A\u671F\u7EA6\u5B9E\u4F8B\u5B9E\u9645\u4E0A\u662F\u4E00\u6837\u7684\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> p2 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u62D2\u7EDD\u7684\u671F\u7EA6\u7684\u7406\u7531\u5C31\u662F\u4F20\u7ED9 Promise.reject()\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u3002\u8FD9\u4E2A\u53C2\u6570\u4E5F\u4F1A\u4F20\u7ED9\u540E\u7EED\u7684\u62D2\u7EDD\u5904\u7406\u7A0B\u5E8F\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> p <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;rejected&gt;: 3</span>
p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5173\u952E\u5728\u4E8E\uFF0CPromise.reject()\u5E76\u6CA1\u6709\u7167\u642C Promise.resolve()\u7684\u5E42\u7B49\u903B\u8F91\u3002\u5982\u679C\u7ED9\u5B83\u4F20\u4E00\u4E2A\u671F\u7EA6\u5BF9\u8C61\uFF0C\u5219\u8FD9\u4E2A\u671F\u7EA6\u4F1A\u6210\u4E3A\u5B83\u8FD4\u56DE\u7684\u62D2\u7EDD\u671F\u7EA6\u7684\u7406\u7531\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Promise &lt;rejected&gt;: Promise &lt;resolved&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>6. \u540C\u6B65/\u5F02\u6B65\u6267\u884C\u7684\u4E8C\u5143\u6027</strong><br> Promise \u7684\u8BBE\u8BA1\u5F88\u5927\u7A0B\u5EA6\u4E0A\u4F1A\u5BFC\u81F4\u4E00\u79CD\u5B8C\u5168\u4E0D\u540C\u4E8E JavaScript \u7684\u8BA1\u7B97\u6A21\u5F0F\u3002\u4E0B\u9762\u7684\u4F8B\u5B50\u5B8C\u7F8E\u5730\u5C55\u793A\u4E86\u8FD9\u4E00\u70B9\uFF0C\u5176\u4E2D\u5305\u542B\u4E86\u4E24\u79CD\u6A21\u5F0F\u4E0B\u629B\u51FA\u9519\u8BEF\u7684\u60C5\u5F62\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Error: foo</span>
<span class="token punctuation">}</span>
<span class="token keyword">try</span> <span class="token punctuation">{</span>
  Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;bar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// Uncaught (in promise) Error: bar</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7B2C\u4E00\u4E2A <code>try/catch</code> \u629B\u51FA\u5E76\u6355\u83B7\u4E86\u9519\u8BEF\uFF0C\u7B2C\u4E8C\u4E2A <code>try/catch</code> \u629B\u51FA\u9519\u8BEF\u5374\u6CA1\u6709\u6355\u83B7\u5230\u3002\u4E4D\u4E00\u770B\u8FD9\u53EF\u80FD\u6709\u70B9\u8FDD\u53CD\u76F4\u89C9\uFF0C\u56E0\u4E3A\u4EE3\u7801\u4E2D\u786E\u5B9E\u662F\u540C\u6B65\u521B\u5EFA\u4E86\u4E00\u4E2A\u62D2\u7EDD\u7684\u671F\u7EA6\u5B9E\u4F8B\uFF0C\u800C\u8FD9\u4E2A\u5B9E\u4F8B\u4E5F\u629B\u51FA\u4E86\u5305\u542B\u62D2\u7EDD\u7406\u7531\u7684\u9519\u8BEF\u3002\u8FD9\u91CC\u7684\u540C\u6B65\u4EE3\u7801\u4E4B\u6240\u4EE5\u6CA1\u6709\u6355\u83B7\u671F\u7EA6\u629B\u51FA\u7684\u9519\u8BEF\uFF0C\u662F\u56E0\u4E3A\u5B83\u6CA1\u6709\u901A\u8FC7\u5F02\u6B65\u6A21\u5F0F\u6355\u83B7\u9519\u8BEF\u3002\u4ECE\u8FD9\u91CC\u5C31\u53EF\u4EE5\u770B\u51FA\u671F\u7EA6\u771F\u6B63\u7684\u5F02\u6B65\u7279\u6027\uFF1A\u5B83\u4EEC\u662F\u540C\u6B65\u5BF9\u8C61\uFF08\u5728\u540C\u6B65\u6267\u884C\u6A21\u5F0F\u4E2D\u4F7F\u7528\uFF09\uFF0C\u4F46\u4E5F\u662F\u5F02\u6B65\u6267\u884C\u6A21\u5F0F\u7684\u5A92\u4ECB\u3002</p><p>\u5728\u524D\u9762\u7684\u4F8B\u5B50\u4E2D\uFF0C\u62D2\u7EDD\u671F\u7EA6\u7684\u9519\u8BEF\u5E76\u6CA1\u6709\u629B\u5230\u6267\u884C\u540C\u6B65\u4EE3\u7801\u7684\u7EBF\u7A0B\u91CC\uFF0C\u800C\u662F\u901A\u8FC7\u6D4F\u89C8\u5668\u5F02\u6B65\u6D88\u606F\u961F\u5217\u6765\u5904\u7406\u7684\u3002\u56E0\u6B64\uFF0Ctry/catch \u5757\u5E76\u4E0D\u80FD\u6355\u83B7\u8BE5\u9519\u8BEF\u3002\u4EE3\u7801\u4E00\u65E6\u5F00\u59CB\u4EE5\u5F02\u6B65\u6A21\u5F0F\u6267\u884C\uFF0C\u5219\u552F\u4E00\u4E0E\u4E4B\u4EA4\u4E92\u7684\u65B9\u5F0F\u5C31\u662F\u4F7F\u7528\u5F02\u6B65\u7ED3\u6784\u2014\u2014\u66F4\u5177\u4F53\u5730\u8BF4\uFF0C\u5C31\u662F\u671F\u7EA6\u7684\u65B9\u6CD5\u3002</p><h3 id="_11-2-3-\u671F\u7EA6\u7684\u5B9E\u4F8B\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_11-2-3-\u671F\u7EA6\u7684\u5B9E\u4F8B\u65B9\u6CD5" aria-hidden="true">#</a> 11.2.3 \u671F\u7EA6\u7684\u5B9E\u4F8B\u65B9\u6CD5</h3><p>\u671F\u7EA6\u5B9E\u4F8B\u7684\u65B9\u6CD5\u662F\u8FDE\u63A5\u5916\u90E8\u540C\u6B65\u4EE3\u7801\u4E0E\u5185\u90E8\u5F02\u6B65\u4EE3\u7801\u4E4B\u95F4\u7684\u6865\u6881\u3002\u8FD9\u4E9B\u65B9\u6CD5\u53EF\u4EE5\u8BBF\u95EE\u5F02\u6B65\u64CD\u4F5C\u8FD4\u56DE\u7684\u6570\u636E\uFF0C\u5904\u7406\u671F\u7EA6\u6210\u529F\u548C\u5931\u8D25\u7684\u7ED3\u679C\uFF0C\u8FDE\u7EED\u5BF9\u671F\u7EA6\u6C42\u503C\uFF0C\u6216\u8005\u6DFB\u52A0\u53EA\u6709\u671F\u7EA6\u8FDB\u5165\u7EC8\u6B62\u72B6\u6001\u65F6\u624D\u4F1A\u6267\u884C\u7684\u4EE3\u7801\u3002 <strong>1. \u5B9E\u73B0 Thenable \u63A5\u53E3</strong><br> \u5728 ECMAScript \u66B4\u9732\u7684\u5F02\u6B65\u7ED3\u6784\u4E2D\uFF0C\u4EFB\u4F55\u5BF9\u8C61\u90FD\u6709\u4E00\u4E2A then()\u65B9\u6CD5\u3002\u8FD9\u4E2A\u65B9\u6CD5\u88AB\u8BA4\u4E3A\u5B9E\u73B0\u4E86 Thenable \u63A5\u53E3\u3002\u4E0B\u9762\u7684\u4F8B\u5B50\u5C55\u793A\u4E86\u5B9E\u73B0\u8FD9\u4E00\u63A5\u53E3\u7684\u6700\u7B80\u5355\u7684\u7C7B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">MyThenable</span> <span class="token punctuation">{</span>
  <span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ECMAScript \u7684 Promise \u7C7B\u578B\u5B9E\u73B0\u4E86 Thenable \u63A5\u53E3\u3002\u8FD9\u4E2A\u7B80\u5316\u7684\u63A5\u53E3\u8DDF TypeScript \u6216\u5176\u4ED6\u5305\u4E2D\u7684\u63A5\u53E3\u6216\u7C7B\u578B\u5B9A\u4E49\u4E0D\u540C\uFF0C\u5B83\u4EEC\u90FD\u8BBE\u5B9A\u4E86 Thenable \u63A5\u53E3\u66F4\u5177\u4F53\u7684\u5F62\u5F0F\u3002</p><div class="custom-container tip"><p class="custom-container-title">\u6CE8\u610F</p><p>\u672C\u7AE0\u540E\u9762\u518D\u4ECB\u7ECD\u5F02\u6B65\u51FD\u6570\u65F6\u8FD8\u4F1A\u518D\u8C08\u5230 Thenable \u63A5\u53E3\u7684\u7528\u9014\u548C\u76EE\u7684\u3002</p></div><p><strong>2. Promise.prototype.then()</strong><br> Promise.prototype.then()\u662F\u4E3A\u671F\u7EA6\u5B9E\u4F8B\u6DFB\u52A0\u5904\u7406\u7A0B\u5E8F\u7684\u4E3B\u8981\u65B9\u6CD5\u3002\u8FD9\u4E2A then()\u65B9\u6CD5\u63A5\u6536\u6700\u591A\u4E24\u4E2A\u53C2\u6570\uFF1AonResolved \u5904\u7406\u7A0B\u5E8F\u548C onRejected \u5904\u7406\u7A0B\u5E8F\u3002\u8FD9\u4E24\u4E2A\u53C2\u6570\u90FD\u662F\u53EF\u9009\u7684\uFF0C\u5982\u679C\u63D0\u4F9B\u7684\u8BDD\uFF0C\u5219\u4F1A\u5728\u671F\u7EA6\u5206\u522B\u8FDB\u5165\u201C\u5151\u73B0\u201D\u548C\u201C\u62D2\u7EDD\u201D\u72B6\u6001\u65F6\u6267\u884C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">onResolved</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> id<span class="token punctuation">,</span> <span class="token string">&quot;resolved&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">onRejected</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> id<span class="token punctuation">,</span> <span class="token string">&quot;rejected&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>reject<span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
p1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">onResolved</span><span class="token punctuation">(</span><span class="token string">&quot;p1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">onRejected</span><span class="token punctuation">(</span><span class="token string">&quot;p1&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
p2<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">onResolved</span><span class="token punctuation">(</span><span class="token string">&quot;p2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">onRejected</span><span class="token punctuation">(</span><span class="token string">&quot;p2&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//\uFF083 \u79D2\u540E\uFF09</span>
<span class="token comment">// p1 resolved</span>
<span class="token comment">// p2 rejected</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56E0\u4E3A\u671F\u7EA6\u53EA\u80FD\u8F6C\u6362\u4E3A\u6700\u7EC8\u72B6\u6001\u4E00\u6B21\uFF0C\u6240\u4EE5\u8FD9\u4E24\u4E2A\u64CD\u4F5C\u4E00\u5B9A\u662F\u4E92\u65A5\u7684\u3002</p><p>\u5982\u524D\u6240\u8FF0\uFF0C\u4E24\u4E2A\u5904\u7406\u7A0B\u5E8F\u53C2\u6570\u90FD\u662F\u53EF\u9009\u7684\u3002\u800C\u4E14\uFF0C\u4F20\u7ED9 then()\u7684\u4EFB\u4F55\u975E\u51FD\u6570\u7C7B\u578B\u7684\u53C2\u6570\u90FD\u4F1A\u88AB\u9759\u9ED8\u5FFD\u7565\u3002\u5982\u679C\u60F3\u53EA\u63D0\u4F9B onRejected \u53C2\u6570\uFF0C\u90A3\u5C31\u8981\u5728 onResolved \u53C2\u6570\u7684\u4F4D\u7F6E\u4E0A\u4F20\u5165 undefined\u3002\u8FD9\u6837\u6709\u52A9\u4E8E\u907F\u514D\u5728\u5185\u5B58\u4E2D\u521B\u5EFA\u591A\u4F59\u7684\u5BF9\u8C61\uFF0C\u5BF9\u671F\u5F85\u51FD\u6570\u53C2\u6570\u7684\u7C7B\u578B\u7CFB\u7EDF\u4E5F\u662F\u4E00\u4E2A\u4EA4\u4EE3\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">onResolved</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> id<span class="token punctuation">,</span> <span class="token string">&#39;resolved&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">onRejected</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> id<span class="token punctuation">,</span> <span class="token string">&#39;rejected&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>reject<span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u975E\u51FD\u6570\u5904\u7406\u7A0B\u5E8F\u4F1A\u88AB\u9759\u9ED8\u5FFD\u7565\uFF0C\u4E0D\u63A8\u8350</span>
p1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token string">&#39;gobbeltygook&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u4E0D\u4F20 onResolved \u5904\u7406\u7A0B\u5E8F\u7684\u89C4\u8303\u5199\u6CD5</span>
p2<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">onRejected</span><span class="token punctuation">(</span><span class="token string">&#39;p2&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// p2 rejected\uFF083 \u79D2\u540E\uFF09</span>
<span class="token class-name">Promise</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684\u671F\u7EA6\u5B9E\u4F8B\uFF1A
<span class="token keyword">let</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> p2 <span class="token operator">=</span> p1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;pending&gt;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;pending&gt;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p1 <span class="token operator">===</span> p2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u65B0\u671F\u7EA6\u5B9E\u4F8B\u57FA\u4E8E onResovled \u5904\u7406\u7A0B\u5E8F\u7684\u8FD4\u56DE\u503C\u6784\u5EFA\u3002\u6362\u53E5\u8BDD\u8BF4\uFF0C\u8BE5\u5904\u7406\u7A0B\u5E8F\u7684\u8FD4\u56DE\u503C\u4F1A\u901A\u8FC7 Promise.resolve()\u5305\u88C5\u6765\u751F\u6210\u65B0\u671F\u7EA6\u3002\u5982\u679C\u6CA1\u6709\u63D0\u4F9B\u8FD9\u4E2A\u5904\u7406\u7A0B\u5E8F\uFF0C\u5219 Promise.resolve()\u5C31\u4F1A\u5305\u88C5\u4E0A\u4E00\u4E2A\u671F\u7EA6\u89E3\u51B3\u4E4B\u540E\u7684\u503C\u3002\u5982\u679C\u6CA1\u6709\u663E\u5F0F\u7684\u8FD4\u56DE\u8BED\u53E5\uFF0C\u5219 Promise.resolve()\u4F1A\u5305\u88C5\u9ED8\u8BA4\u7684\u8FD4\u56DE\u503C undefined\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> p1 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u82E5\u8C03\u7528 then()\u65F6\u4E0D\u4F20\u5904\u7406\u7A0B\u5E8F\uFF0C\u5219\u539F\u6837\u5411\u540E\u4F20</span>
<span class="token keyword">let</span> p2 <span class="token operator">=</span> p1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;resolved&gt;: foo</span>
<span class="token comment">// \u8FD9\u4E9B\u90FD\u4E00\u6837</span>
<span class="token keyword">let</span> p3 <span class="token operator">=</span> p1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> p4 <span class="token operator">=</span> p1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> p5 <span class="token operator">=</span> p1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p3<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;resolved&gt;: undefined</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p4<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;resolved&gt;: undefined</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p5<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;resolved&gt;: undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u6709\u663E\u5F0F\u7684\u8FD4\u56DE\u503C\uFF0C\u5219 Promise.resolve()\u4F1A\u5305\u88C5\u8FD9\u4E2A\u503C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// ...</span>
<span class="token comment">// \u8FD9\u4E9B\u90FD\u4E00\u6837</span>
<span class="token keyword">let</span> p6 <span class="token operator">=</span> p1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> p7 <span class="token operator">=</span> p1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;bar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p6<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;resolved&gt;: bar</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p7<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;resolved&gt;: bar</span>
<span class="token comment">// Promise.resolve()\u4FDD\u7559\u8FD4\u56DE\u7684\u671F\u7EA6</span>
<span class="token keyword">let</span> p8 <span class="token operator">=</span> p1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> p9 <span class="token operator">=</span> p1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Uncaught (in promise): undefined</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p8<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;pending&gt;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p9<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;rejected&gt;: undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u629B\u51FA\u5F02\u5E38\u4F1A\u8FD4\u56DE\u62D2\u7EDD\u7684\u671F\u7EA6\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// ...</span>
<span class="token keyword">let</span> p10 <span class="token operator">=</span> p1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> <span class="token keyword">throw</span> <span class="token string">&#39;baz&#39;</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Uncaught (in promise) baz</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p10<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;rejected&gt; baz</span>
\u6CE8\u610F\uFF0C\u8FD4\u56DE\u9519\u8BEF\u503C\u4E0D\u4F1A\u89E6\u53D1\u4E0A\u9762\u7684\u62D2\u7EDD\u884C\u4E3A\uFF0C\u800C\u4F1A\u628A\u9519\u8BEF\u5BF9\u8C61\u5305\u88C5\u5728\u4E00\u4E2A\u89E3\u51B3\u7684\u671F\u7EA6\u4E2D\uFF1A
<span class="token operator">...</span>
<span class="token keyword">let</span> p11 <span class="token operator">=</span> p1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&#39;qux&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p11<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;resolved&gt;: Error: qux</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>onRejected \u5904\u7406\u7A0B\u5E8F\u4E5F\u4E0E\u4E4B\u7C7B\u4F3C\uFF1AonRejected \u5904\u7406\u7A0B\u5E8F\u8FD4\u56DE\u7684\u503C\u4E5F\u4F1A\u88AB Promise.resolve()\u5305\u88C5\u3002\u4E4D\u4E00\u770B\u8FD9\u53EF\u80FD\u6709\u70B9\u8FDD\u53CD\u76F4\u89C9\uFF0C\u4F46\u662F\u60F3\u4E00\u60F3\uFF0ConRejected \u5904\u7406\u7A0B\u5E8F\u7684\u4EFB\u52A1\u4E0D\u5C31\u662F\u6355\u83B7\u5F02\u6B65\u9519\u8BEF\u5417\uFF1F\u56E0\u6B64\uFF0C\u62D2\u7EDD\u5904\u7406\u7A0B\u5E8F\u5728\u6355\u83B7\u9519\u8BEF\u540E\u4E0D\u629B\u51FA\u5F02\u5E38\u662F\u7B26\u5408\u671F\u7EA6\u7684\u884C\u4E3A\uFF0C\u5E94\u8BE5\u8FD4\u56DE\u4E00\u4E2A\u89E3\u51B3\u671F\u7EA6\u3002</p><p>\u4E0B\u9762\u7684\u4EE3\u7801\u7247\u6BB5\u5C55\u793A\u4E86\u7528 Promise.reject()\u66FF\u4EE3\u4E4B\u524D\u4F8B\u5B50\u4E2D\u7684 Promise.resolve()\u4E4B\u540E\u7684\u7ED3\u679C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> p1 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u8C03\u7528 then()\u65F6\u4E0D\u4F20\u5904\u7406\u7A0B\u5E8F\u5219\u539F\u6837\u5411\u540E\u4F20</span>
<span class="token keyword">let</span> p2 <span class="token operator">=</span> p1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Uncaught (in promise) foo</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;rejected&gt;: foo</span>
<span class="token comment">// \u8FD9\u4E9B\u90FD\u4E00\u6837</span>
<span class="token keyword">let</span> p3 <span class="token operator">=</span> p1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> p4 <span class="token operator">=</span> p1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> p5 <span class="token operator">=</span> p1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p3<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;resolved&gt;: undefined</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p4<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;resolved&gt;: undefined</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p5<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;resolved&gt;: undefined</span>
<span class="token comment">// \u8FD9\u4E9B\u90FD\u4E00\u6837</span>
<span class="token keyword">let</span> p6 <span class="token operator">=</span> p1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> p7 <span class="token operator">=</span> p1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;bar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p6<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;resolved&gt;: bar</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p7<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;resolved&gt;: bar</span>
<span class="token comment">// Promise.resolve()\u4FDD\u7559\u8FD4\u56DE\u7684\u671F\u7EA6</span>
<span class="token keyword">let</span> p8 <span class="token operator">=</span> p1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> p9 <span class="token operator">=</span> p1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Uncaught (in promise): undefined</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p8<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;pending&gt;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p9<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;rejected&gt;: undefined</span>
<span class="token keyword">let</span> p10 <span class="token operator">=</span> p1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">throw</span> <span class="token string">&quot;baz&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Uncaught (in promise) baz</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p10<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;rejected&gt;: baz</span>
<span class="token keyword">let</span> p11 <span class="token operator">=</span> p1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;qux&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p11<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;resolved&gt;: Error: qux</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>3. Promise.prototype.catch()</strong><br> Promise.prototype.catch()\u65B9\u6CD5\u7528\u4E8E\u7ED9\u671F\u7EA6\u6DFB\u52A0\u62D2\u7EDD\u5904\u7406\u7A0B\u5E8F\u3002\u8FD9\u4E2A\u65B9\u6CD5\u53EA\u63A5\u6536\u4E00\u4E2A\u53C2\u6570\uFF1AonRejected \u5904\u7406\u7A0B\u5E8F\u3002\u4E8B\u5B9E\u4E0A\uFF0C\u8FD9\u4E2A\u65B9\u6CD5\u5C31\u662F\u4E00\u4E2A\u8BED\u6CD5\u7CD6\uFF0C\u8C03\u7528\u5B83\u5C31\u76F8\u5F53\u4E8E\u8C03\u7528 Promise.prototype.then(null, onRejected)\u3002</p><p>\u4E0B\u9762\u7684\u4EE3\u7801\u5C55\u793A\u4E86\u8FD9\u4E24\u79CD\u540C\u6837\u7684\u60C5\u51B5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> p <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> <span class="token function-variable function">onRejected</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;rejected&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// \u8FD9\u4E24\u79CD\u6DFB\u52A0\u62D2\u7EDD\u5904\u7406\u7A0B\u5E8F\u7684\u65B9\u5F0F\u662F\u4E00\u6837\u7684\uFF1A</span>
p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> onRejected<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// rejected</span>
p<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>onRejected<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// rejected</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Promise.prototype.catch()\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684\u671F\u7EA6\u5B9E\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> p2 <span class="token operator">=</span> p1<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;pending&gt;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;pending&gt;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p1 <span class="token operator">===</span> p2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u8FD4\u56DE\u65B0\u671F\u7EA6\u5B9E\u4F8B\u65B9\u9762\uFF0CPromise.prototype.catch()\u7684\u884C\u4E3A\u4E0E Promise.prototype.then()\u7684 onRejected \u5904\u7406\u7A0B\u5E8F\u662F\u4E00\u6837\u7684\u3002</p><p><strong>4. Promise.prototype.finally()</strong><br> Promise.prototype.finally()\u65B9\u6CD5\u7528\u4E8E\u7ED9\u671F\u7EA6\u6DFB\u52A0 onFinally \u5904\u7406\u7A0B\u5E8F\uFF0C\u8FD9\u4E2A\u5904\u7406\u7A0B\u5E8F\u5728\u671F\u7EA6\u8F6C\u6362\u4E3A\u89E3\u51B3\u6216\u62D2\u7EDD\u72B6\u6001\u65F6\u90FD\u4F1A\u6267\u884C\u3002\u8FD9\u4E2A\u65B9\u6CD5\u53EF\u4EE5\u907F\u514D onResolved \u548C onRejected \u5904\u7406\u7A0B\u5E8F\u4E2D\u51FA\u73B0\u5197\u4F59\u4EE3\u7801\u3002\u4F46 onFinally \u5904\u7406\u7A0B\u5E8F\u6CA1\u6709\u529E\u6CD5\u77E5\u9053\u671F\u7EA6\u7684\u72B6\u6001\u662F\u89E3\u51B3\u8FD8\u662F\u62D2\u7EDD\uFF0C\u6240\u4EE5\u8FD9\u4E2A\u65B9\u6CD5\u4E3B\u8981\u7528\u4E8E\u6DFB\u52A0\u6E05\u7406\u4EE3\u7801\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> p1 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> p2 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> <span class="token function-variable function">onFinally</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&#39;Finally!&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
p1<span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span>onFinally<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Finally</span>
p2<span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span>onFinally<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Finally</span>
<span class="token class-name">Promise</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684\u671F\u7EA6\u5B9E\u4F8B\uFF1A
<span class="token keyword">let</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> p2 <span class="token operator">=</span> p1<span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;pending&gt;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;pending&gt;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p1 <span class="token operator">===</span> p2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u65B0\u671F\u7EA6\u5B9E\u4F8B\u4E0D\u540C\u4E8E then()\u6216 catch()\u65B9\u5F0F\u8FD4\u56DE\u7684\u5B9E\u4F8B\u3002\u56E0\u4E3A onFinally \u88AB\u8BBE\u8BA1\u4E3A\u4E00\u4E2A\u72B6\u6001\u65E0\u5173\u7684\u65B9\u6CD5\uFF0C\u6240\u4EE5\u5728\u5927\u591A\u6570\u60C5\u51B5\u4E0B\u5B83\u5C06\u8868\u73B0\u4E3A\u7236\u671F\u7EA6\u7684\u4F20\u9012\u3002\u5BF9\u4E8E\u5DF2\u89E3\u51B3\u72B6\u6001\u548C\u88AB\u62D2\u7EDD\u72B6\u6001\u90FD\u662F\u5982\u6B64\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> p1 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u8FD9\u91CC\u90FD\u4F1A\u539F\u6837\u540E\u4F20</span>
<span class="token keyword">let</span> p2 <span class="token operator">=</span> p1<span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> p3 <span class="token operator">=</span> p1<span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> p4 <span class="token operator">=</span> p1<span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> p5 <span class="token operator">=</span> p1<span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> p6 <span class="token operator">=</span> p1<span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> p7 <span class="token operator">=</span> p1<span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;bar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> p8 <span class="token operator">=</span> p1<span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;qux&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;resolved&gt;: foo</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p3<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;resolved&gt;: foo</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p4<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;resolved&gt;: foo</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p5<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;resolved&gt;: foo</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p6<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;resolved&gt;: foo</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p7<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;resolved&gt;: foo</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p8<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;resolved&gt;: foo</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u8FD4\u56DE\u7684\u662F\u4E00\u4E2A\u5F85\u5B9A\u7684\u671F\u7EA6\uFF0C\u6216\u8005 onFinally \u5904\u7406\u7A0B\u5E8F\u629B\u51FA\u4E86\u9519\u8BEF\uFF08\u663E\u5F0F\u629B\u51FA\u6216\u8FD4\u56DE\u4E86\u4E00\u4E2A\u62D2\u7EDD\u671F\u7EA6\uFF09\uFF0C\u5219\u4F1A\u8FD4\u56DE\u76F8\u5E94\u7684\u671F\u7EA6\uFF08\u5F85\u5B9A\u6216\u62D2\u7EDD\uFF09\uFF0C\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// ...</span>
<span class="token comment">// Promise.resolve()\u4FDD\u7559\u8FD4\u56DE\u7684\u671F\u7EA6</span>
<span class="token keyword">let</span> p9 <span class="token operator">=</span> p1<span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> p10 <span class="token operator">=</span> p1<span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Uncaught (in promise): undefined</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p9<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;pending&gt;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p10<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;rejected&gt;: undefined</span>
<span class="token keyword">let</span> p11 <span class="token operator">=</span> p1<span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">throw</span> <span class="token string">&quot;baz&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Uncaught (in promise) baz</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p11<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;rejected&gt;: baz</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD4\u56DE\u5F85\u5B9A\u671F\u7EA6\u7684\u60C5\u5F62\u5E76\u4E0D\u5E38\u89C1\uFF0C\u8FD9\u662F\u56E0\u4E3A\u53EA\u8981\u671F\u7EA6\u4E00\u89E3\u51B3\uFF0C\u65B0\u671F\u7EA6\u4ECD\u7136\u4F1A\u539F\u6837\u540E\u4F20\u521D\u59CB\u7684\u671F\u7EA6\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> p1 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u5FFD\u7565\u89E3\u51B3\u7684\u503C</span>
<span class="token keyword">let</span> p2 <span class="token operator">=</span> p1<span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;bar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;pending&gt;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p2<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 200 \u6BEB\u79D2\u540E\uFF1A</span>
<span class="token comment">// Promise &lt;resolved&gt;: foo</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>5. \u975E\u91CD\u5165\u671F\u7EA6\u65B9\u6CD5</strong><br> \u5F53\u671F\u7EA6\u8FDB\u5165\u843D\u5B9A\u72B6\u6001\u65F6\uFF0C\u4E0E\u8BE5\u72B6\u6001\u76F8\u5173\u7684\u5904\u7406\u7A0B\u5E8F\u4EC5\u4EC5\u4F1A\u88AB\u6392\u671F\uFF0C\u800C\u975E\u7ACB\u5373\u6267\u884C\u3002\u8DDF\u5728\u6DFB\u52A0\u8FD9\u4E2A\u5904\u7406\u7A0B\u5E8F\u7684\u4EE3\u7801\u4E4B\u540E\u7684\u540C\u6B65\u4EE3\u7801\u4E00\u5B9A\u4F1A\u5728\u5904\u7406\u7A0B\u5E8F\u4E4B\u524D\u5148\u6267\u884C\u3002\u5373\u4F7F\u671F\u7EA6\u4E00\u5F00\u59CB\u5C31\u662F\u4E0E\u9644\u52A0\u5904\u7406\u7A0B\u5E8F\u5173\u8054\u7684\u72B6\u6001\uFF0C\u6267\u884C\u987A\u5E8F\u4E5F\u662F\u8FD9\u6837\u7684\u3002\u8FD9\u4E2A\u7279\u6027\u7531 JavaScript \u8FD0\u884C\u65F6\u4FDD\u8BC1\uFF0C\u88AB\u79F0\u4E3A\u201C\u975E\u91CD\u5165\u201D\uFF08non-reentrancy\uFF09\u7279\u6027\u3002\u4E0B\u9762\u7684\u4F8B\u5B50\u6F14\u793A\u4E86\u8FD9\u4E2A\u7279\u6027\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u521B\u5EFA\u89E3\u51B3\u7684\u671F\u7EA6</span>
<span class="token keyword">let</span> p <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u6DFB\u52A0\u89E3\u51B3\u5904\u7406\u7A0B\u5E8F</span>
<span class="token comment">// \u76F4\u89C9\u4E0A\uFF0C\u8FD9\u4E2A\u5904\u7406\u7A0B\u5E8F\u4F1A\u7B49\u671F\u7EA6\u4E00\u89E3\u51B3\u5C31\u6267\u884C</span>
p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;onResolved handler&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u540C\u6B65\u8F93\u51FA\uFF0C\u8BC1\u660E then()\u5DF2\u7ECF\u8FD4\u56DE</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;then() returns&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u5B9E\u9645\u7684\u8F93\u51FA\uFF1A</span>
<span class="token comment">// then() returns</span>
<span class="token comment">// onResolved handler</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u8FD9\u4E2A\u4F8B\u5B50\u4E2D\uFF0C\u5728\u4E00\u4E2A\u89E3\u51B3\u671F\u7EA6\u4E0A\u8C03\u7528 then()\u4F1A\u628A onResolved \u5904\u7406\u7A0B\u5E8F\u63A8\u8FDB\u6D88\u606F\u961F\u5217\u3002\u4F46\u8FD9\u4E2A\u5904\u7406\u7A0B\u5E8F\u5728\u5F53\u524D\u7EBF\u7A0B\u4E0A\u7684\u540C\u6B65\u4EE3\u7801\u6267\u884C\u5B8C\u6210\u524D\u4E0D\u4F1A\u6267\u884C\u3002\u56E0\u6B64\uFF0C\u8DDF\u5728 then()\u540E\u9762\u7684\u540C\u6B65\u4EE3\u7801\u4E00\u5B9A\u5148\u4E8E\u5904\u7406\u7A0B\u5E8F\u6267\u884C\u3002</p><p>\u5148\u6DFB\u52A0\u5904\u7406\u7A0B\u5E8F\u540E\u89E3\u51B3\u671F\u7EA6\u4E5F\u662F\u4E00\u6837\u7684\u3002\u5982\u679C\u6DFB\u52A0\u5904\u7406\u7A0B\u5E8F\u540E\uFF0C\u540C\u6B65\u4EE3\u7801\u624D\u6539\u53D8\u671F\u7EA6\u72B6\u6001\uFF0C\u90A3\u4E48\u5904\u7406\u7A0B\u5E8F\u4ECD\u7136\u4F1A\u57FA\u4E8E\u8BE5\u72B6\u6001\u53D8\u5316\u8868\u73B0\u51FA\u975E\u91CD\u5165\u7279\u6027\u3002\u4E0B\u9762\u7684\u4F8B\u5B50\u5C55\u793A\u4E86\u5373\u4F7F\u5148\u6DFB\u52A0\u4E86 onResolved \u5904\u7406\u5E8F\uFF0C\u518D\u540C\u6B65\u8C03\u7528 resolve()\uFF0C\u5904\u7406\u7A0B\u5E8F\u4E5F\u4E0D\u4F1A\u8FDB\u5165\u540C\u6B65\u7EBF\u7A0B\u6267\u884C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> synchronousResolve<span class="token punctuation">;</span>
<span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u671F\u7EA6\u5E76\u5C06\u89E3\u51B3\u51FD\u6570\u4FDD\u5B58\u5728\u4E00\u4E2A\u5C40\u90E8\u53D8\u91CF\u4E2D</span>
<span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">synchronousResolve</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;1: invoking resolve()&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;2: resolve() returns&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;4: then() handler executes&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">synchronousResolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;3: synchronousResolve() returns&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u5B9E\u9645\u7684\u8F93\u51FA\uFF1A</span>
<span class="token comment">// 1: invoking resolve()</span>
<span class="token comment">// 2: resolve() returns</span>
<span class="token comment">// 3: synchronousResolve() returns</span>
<span class="token comment">// 4: then() handler executes</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u8FD9\u4E2A\u4F8B\u5B50\u4E2D\uFF0C\u5373\u4F7F\u671F\u7EA6\u72B6\u6001\u53D8\u5316\u53D1\u751F\u5728\u6DFB\u52A0\u5904\u7406\u7A0B\u5E8F\u4E4B\u540E\uFF0C\u5904\u7406\u7A0B\u5E8F\u4E5F\u4F1A\u7B49\u5230\u8FD0\u884C\u7684\u6D88\u606F\u961F\u5217\u8BA9\u5B83\u51FA\u5217\u65F6\u624D\u4F1A\u6267\u884C\u3002</p><p>\u975E\u91CD\u5165\u9002\u7528\u4E8E onResolved/onRejected \u5904\u7406\u7A0B\u5E8F\u3001catch()\u5904\u7406\u7A0B\u5E8F\u548C finally()\u5904\u7406\u7A0B\u5E8F\u3002\u4E0B\u9762\u7684\u4F8B\u5B50\u6F14\u793A\u4E86\u8FD9\u4E9B\u5904\u7406\u7A0B\u5E8F\u90FD\u53EA\u80FD\u5F02\u6B65\u6267\u884C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> p1 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
p1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;p1.then() onResolved&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;p1.then() returns&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> p2 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
p2<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;p2.then() onRejected&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;p2.then() returns&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> p3 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
p3<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;p3.catch() onRejected&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;p3.catch() returns&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> p4 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
p4<span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;p4.finally() onFinally&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;p4.finally() returns&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// p1.then() returns</span>
<span class="token comment">// p2.then() returns</span>
<span class="token comment">// p3.catch() returns</span>
<span class="token comment">// p4.finally() returns</span>
<span class="token comment">// p1.then() onResolved</span>
<span class="token comment">// p2.then() onRejected</span>
<span class="token comment">// p3.catch() onRejected</span>
<span class="token comment">// p4.finally() onFinally</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>6. \u90BB\u8FD1\u5904\u7406\u7A0B\u5E8F\u7684\u6267\u884C\u987A\u5E8F</strong><br> \u5982\u679C\u7ED9\u671F\u7EA6\u6DFB\u52A0\u4E86\u591A\u4E2A\u5904\u7406\u7A0B\u5E8F\uFF0C\u5F53\u671F\u7EA6\u72B6\u6001\u53D8\u5316\u65F6\uFF0C\u76F8\u5173\u5904\u7406\u7A0B\u5E8F\u4F1A\u6309\u7167\u6DFB\u52A0\u5B83\u4EEC\u7684\u987A\u5E8F\u4F9D\u6B21\u6267\u884C\u3002\u65E0\u8BBA\u662F then()\u3001catch()\u8FD8\u662F finally()\u6DFB\u52A0\u7684\u5904\u7406\u7A0B\u5E8F\u90FD\u662F\u5982\u6B64\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> p1 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> p2 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
p1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
p1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 1</span>
<span class="token comment">// 2</span>
p2<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
p2<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 3</span>
<span class="token comment">// 4</span>
p2<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
p2<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 5</span>
<span class="token comment">// 6</span>
p1<span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
p1<span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 7</span>
<span class="token comment">// 8</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>7. \u4F20\u9012\u89E3\u51B3\u503C\u548C\u62D2\u7EDD\u7406\u7531</strong><br> \u5230\u4E86\u843D\u5B9A\u72B6\u6001\u540E\uFF0C\u671F\u7EA6\u4F1A\u63D0\u4F9B\u5176\u89E3\u51B3\u503C\uFF08\u5982\u679C\u5151\u73B0\uFF09\u6216\u5176\u62D2\u7EDD\u7406\u7531\uFF08\u5982\u679C\u62D2\u7EDD\uFF09\u7ED9\u76F8\u5173\u72B6\u6001\u7684\u5904\u7406\u7A0B\u5E8F\u3002\u62FF\u5230\u8FD4\u56DE\u503C\u540E\uFF0C\u5C31\u53EF\u4EE5\u8FDB\u4E00\u6B65\u5BF9\u8FD9\u4E2A\u503C\u8FDB\u884C\u64CD\u4F5C\u3002\u6BD4\u5982\uFF0C\u7B2C\u4E00\u6B21\u7F51\u7EDC\u8BF7\u6C42\u8FD4\u56DE\u7684 JSON \u662F\u53D1\u9001\u7B2C\u4E8C\u6B21\u8BF7\u6C42\u5FC5\u9700\u7684\u6570\u636E\uFF0C\u90A3\u4E48\u7B2C\u4E00\u6B21\u8BF7\u6C42\u8FD4\u56DE\u7684\u503C\u5C31\u5E94\u8BE5\u4F20\u7ED9 onResolved \u5904\u7406\u7A0B\u5E8F\u7EE7\u7EED\u5904\u7406\u3002\u5F53\u7136\uFF0C\u5931\u8D25\u7684\u7F51\u7EDC\u8BF7\u6C42\u4E5F\u5E94\u8BE5\u628A HTTP \u72B6\u6001\u7801\u4F20\u7ED9 onRejected \u5904\u7406\u7A0B\u5E8F\u3002</p><p>\u5728\u6267\u884C\u51FD\u6570\u4E2D\uFF0C\u89E3\u51B3\u7684\u503C\u548C\u62D2\u7EDD\u7684\u7406\u7531\u662F\u5206\u522B\u4F5C\u4E3A resolve()\u548C reject()\u7684\u7B2C\u4E00\u4E2A\u53C2\u6570\u5F80\u540E\u4F20\u7684\u3002\u7136\u540E\uFF0C\u8FD9\u4E9B\u503C\u53C8\u4F1A\u4F20\u7ED9\u5B83\u4EEC\u5404\u81EA\u7684\u5904\u7406\u7A0B\u5E8F\uFF0C\u4F5C\u4E3A onResolved \u6216 onRejected \u5904\u7406\u7A0B\u5E8F\u7684\u552F\u4E00\u53C2\u6570\u3002\u4E0B\u9762\u7684\u4F8B\u5B50\u5C55\u793A\u4E86\u4E0A\u8FF0\u4F20\u9012\u8FC7\u7A0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
p1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// foo</span>
<span class="token keyword">let</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&quot;bar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
p2<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// bar</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Promise.resolve()\u548C Promise.reject()\u5728\u88AB\u8C03\u7528\u65F6\u5C31\u4F1A\u63A5\u6536\u89E3\u51B3\u503C\u548C\u62D2\u7EDD\u7406\u7531\u3002\u540C\u6837\u5730\uFF0C\u5B83\u4EEC\u8FD4\u56DE\u7684\u671F\u7EA6\u4E5F\u4F1A\u50CF\u6267\u884C\u5668\u4E00\u6837\u628A\u8FD9\u4E9B\u503C\u4F20\u7ED9 onResolved \u6216 onRejected \u5904\u7406\u7A0B\u5E8F\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> p1 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
p1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// foo</span>
<span class="token keyword">let</span> p2 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&quot;bar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
p2<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// bar</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>8. \u62D2\u7EDD\u671F\u7EA6\u4E0E\u62D2\u7EDD\u9519\u8BEF\u5904\u7406</strong><br> \u62D2\u7EDD\u671F\u7EA6\u7C7B\u4F3C\u4E8E throw()\u8868\u8FBE\u5F0F\uFF0C\u56E0\u4E3A\u5B83\u4EEC\u90FD\u4EE3\u8868\u4E00\u79CD\u7A0B\u5E8F\u72B6\u6001\uFF0C\u5373\u9700\u8981\u4E2D\u65AD\u6216\u8005\u7279\u6B8A\u5904\u7406\u3002\u5728\u671F\u7EA6\u7684\u6267\u884C\u51FD\u6570\u6216\u5904\u7406\u7A0B\u5E8F\u4E2D\u629B\u51FA\u9519\u8BEF\u4F1A\u5BFC\u81F4\u62D2\u7EDD\uFF0C\u5BF9\u5E94\u7684\u9519\u8BEF\u5BF9\u8C61\u4F1A\u6210\u4E3A\u62D2\u7EDD\u7684\u7406\u7531\u3002\u56E0\u6B64\u4EE5\u4E0B\u8FD9\u4E9B\u671F\u7EA6\u90FD\u4F1A\u4EE5\u4E00\u4E2A\u9519\u8BEF\u5BF9\u8C61\u4E3A\u7531\u88AB\u62D2\u7EDD\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">throw</span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> p3 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">throw</span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> p4 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;rejected&gt;: Error: foo</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;rejected&gt;: Error: foo</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p3<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;rejected&gt;: Error: foo</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p4<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;rejected&gt;: Error: foo</span>
<span class="token comment">// \u4E5F\u4F1A\u629B\u51FA 4 \u4E2A\u672A\u6355\u83B7\u9519\u8BEF</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u671F\u7EA6\u53EF\u4EE5\u4EE5\u4EFB\u4F55\u7406\u7531\u62D2\u7EDD\uFF0C\u5305\u62EC undefined\uFF0C\u4F46\u6700\u597D\u7EDF\u4E00\u4F7F\u7528\u9519\u8BEF\u5BF9\u8C61\u3002\u8FD9\u6837\u505A\u4E3B\u8981\u662F\u56E0\u4E3A\u521B\u5EFA\u9519\u8BEF\u5BF9\u8C61\u53EF\u4EE5\u8BA9\u6D4F\u89C8\u5668\u6355\u83B7\u9519\u8BEF\u5BF9\u8C61\u4E2D\u7684\u6808\u8FFD\u8E2A\u4FE1\u606F\uFF0C\u800C\u8FD9\u4E9B\u4FE1\u606F\u5BF9\u8C03\u8BD5\u662F\u975E\u5E38\u5173\u952E\u7684\u3002\u4F8B\u5982\uFF0C\u524D\u9762\u4F8B\u5B50\u4E2D\u629B\u51FA\u7684 4 \u4E2A\u9519\u8BEF\u7684\u6808\u8FFD\u8E2A\u4FE1\u606F\u5982\u4E0B\uFF1A</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>Uncaught <span class="token punctuation">(</span>in promise<span class="token punctuation">)</span> Error: foo
 at Promise <span class="token punctuation">(</span>test.html:5<span class="token punctuation">)</span>
 at new Promise <span class="token punctuation">(</span><span class="token operator">&lt;</span>anonymous<span class="token operator">&gt;</span><span class="token punctuation">)</span>
 at test.html:5
Uncaught <span class="token punctuation">(</span>in promise<span class="token punctuation">)</span> Error: foo
 at Promise <span class="token punctuation">(</span>test.html:6<span class="token punctuation">)</span>
 at new Promise <span class="token punctuation">(</span><span class="token operator">&lt;</span>anonymous<span class="token operator">&gt;</span><span class="token punctuation">)</span>
 at test.html:6
Uncaught <span class="token punctuation">(</span>in promise<span class="token punctuation">)</span> Error: foo
 at test.html:8
Uncaught <span class="token punctuation">(</span>in promise<span class="token punctuation">)</span> Error: foo
 at Promise.resolve.then <span class="token punctuation">(</span>test.html:7<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6240\u6709\u9519\u8BEF\u90FD\u662F\u5F02\u6B65\u629B\u51FA\u4E14\u672A\u5904\u7406\u7684\uFF0C\u901A\u8FC7\u9519\u8BEF\u5BF9\u8C61\u6355\u83B7\u7684\u6808\u8FFD\u8E2A\u4FE1\u606F\u5C55\u793A\u4E86\u9519\u8BEF\u53D1\u751F\u7684\u8DEF\u5F84\u3002\u6CE8\u610F\u9519\u8BEF\u7684\u987A\u5E8F\uFF1APromise.resolve().then()\u7684\u9519\u8BEF\u6700\u540E\u624D\u51FA\u73B0\uFF0C\u8FD9\u662F\u56E0\u4E3A\u5B83\u9700\u8981\u5728\u8FD0\u884C\u65F6\u6D88\u606F\u961F\u5217\u4E2D\u6DFB\u52A0\u5904\u7406\u7A0B\u5E8F\uFF1B\u4E5F\u5C31\u662F\u8BF4\uFF0C\u5728\u6700\u7EC8\u629B\u51FA\u672A\u6355\u83B7\u9519\u8BEF\u4E4B\u524D\u5B83\u8FD8\u4F1A\u521B\u5EFA\u53E6\u4E00\u4E2A\u671F\u7EA6\u3002</p><p>\u8FD9\u4E2A\u4F8B\u5B50\u540C\u6837\u63ED\u793A\u4E86\u5F02\u6B65\u9519\u8BEF\u6709\u610F\u601D\u7684\u526F\u4F5C\u7528\u3002\u6B63\u5E38\u60C5\u51B5\u4E0B\uFF0C\u5728\u901A\u8FC7 throw()\u5173\u952E\u5B57\u629B\u51FA\u9519\u8BEF\u65F6\uFF0CJavaScript \u8FD0\u884C\u65F6\u7684\u9519\u8BEF\u5904\u7406\u673A\u5236\u4F1A\u505C\u6B62\u6267\u884C\u629B\u51FA\u9519\u8BEF\u4E4B\u540E\u7684\u4EFB\u4F55\u6307\u4EE4\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">throw</span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;bar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8FD9\u4E00\u884C\u4E0D\u4F1A\u6267\u884C</span>
<span class="token comment">// Uncaught Error: foo</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F46\u662F\uFF0C\u5728\u671F\u7EA6\u4E2D\u629B\u51FA\u9519\u8BEF\u65F6\uFF0C\u56E0\u4E3A\u9519\u8BEF\u5B9E\u9645\u4E0A\u662F\u4ECE\u6D88\u606F\u961F\u5217\u4E2D\u5F02\u6B65\u629B\u51FA\u7684\uFF0C\u6240\u4EE5\u5E76\u4E0D\u4F1A\u963B\u6B62\u8FD0\u884C\u65F6\u7EE7\u7EED\u6267\u884C\u540C\u6B65\u6307\u4EE4\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;bar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// bar</span>
<span class="token comment">// Uncaught (in promise) Error: foo</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u672C\u7AE0\u524D\u9762\u7684 Promise.reject()\u793A\u4F8B\u6240\u793A\uFF0C\u5F02\u6B65\u9519\u8BEF\u53EA\u80FD\u901A\u8FC7\u5F02\u6B65\u7684 onRejected \u5904\u7406\u7A0B\u5E8F\u6355\u83B7\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u6B63\u786E</span>
Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u4E0D\u6B63\u786E</span>
<span class="token keyword">try</span> <span class="token punctuation">{</span>
  Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E0D\u5305\u62EC\u6355\u83B7\u6267\u884C\u51FD\u6570\u4E2D\u7684\u9519\u8BEF\uFF0C\u5728\u89E3\u51B3\u6216\u62D2\u7EDD\u671F\u7EA6\u4E4B\u524D\uFF0C\u4ECD\u7136\u53EF\u4EE5\u4F7F\u7528 try/catch \u5728\u6267\u884C\u51FD\u6570\u4E2D\u6355\u83B7\u9519\u8BEF\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;bar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;resolved&gt;: bar</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>then()\u548C catch()\u7684 onRejected \u5904\u7406\u7A0B\u5E8F\u5728\u8BED\u4E49\u4E0A\u76F8\u5F53\u4E8E try/catch\u3002\u51FA\u53D1\u70B9\u90FD\u662F\u6355\u83B7\u9519\u8BEF\u4E4B\u540E\u5C06\u5176\u9694\u79BB\uFF0C\u540C\u65F6\u4E0D\u5F71\u54CD\u6B63\u5E38\u903B\u8F91\u6267\u884C\u3002\u4E3A\u6B64\uFF0ConRejected \u5904\u7406\u7A0B\u5E8F\u7684\u4EFB\u52A1\u5E94\u8BE5\u662F\u5728\u6355\u83B7\u5F02\u6B65\u9519\u8BEF\u4E4B\u540E\u8FD4\u56DE\u4E00\u4E2A\u89E3\u51B3\u7684\u671F\u7EA6\u3002\u4E0B\u9762\u7684\u4F8B\u5B50\u4E2D\u5BF9\u6BD4\u4E86\u540C\u6B65\u9519\u8BEF\u5904\u7406\u4E0E\u5F02\u6B65\u9519\u8BEF\u5904\u7406\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;begin synchronous execution&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token keyword">throw</span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;caught error&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;continue synchronous execution&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// begin synchronous execution</span>
<span class="token comment">// caught error Error: foo</span>
<span class="token comment">// continue synchronous execution</span>
<span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;begin asynchronous execution&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">reject</span><span class="token punctuation">(</span><span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&quot;bar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;caught error&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;continue asynchronous execution&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// begin asynchronous execution</span>
<span class="token comment">// caught error Error: bar</span>
<span class="token comment">// continue asynchronous execution</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_11-2-4-\u671F\u7EA6\u8FDE\u9501\u4E0E\u671F\u7EA6\u5408\u6210" tabindex="-1"><a class="header-anchor" href="#_11-2-4-\u671F\u7EA6\u8FDE\u9501\u4E0E\u671F\u7EA6\u5408\u6210" aria-hidden="true">#</a> 11.2.4 \u671F\u7EA6\u8FDE\u9501\u4E0E\u671F\u7EA6\u5408\u6210</h3><p>\u591A\u4E2A\u671F\u7EA6\u7EC4\u5408\u5728\u4E00\u8D77\u53EF\u4EE5\u6784\u6210\u5F3A\u5927\u7684\u4EE3\u7801\u903B\u8F91\u3002\u8FD9\u79CD\u7EC4\u5408\u53EF\u4EE5\u901A\u8FC7\u4E24\u79CD\u65B9\u5F0F\u5B9E\u73B0\uFF1A\u671F\u7EA6\u8FDE\u9501\u4E0E\u671F\u7EA6\u5408\u6210\u3002\u524D\u8005\u5C31\u662F\u4E00\u4E2A\u671F\u7EA6\u63A5\u4E00\u4E2A\u671F\u7EA6\u5730\u62FC\u63A5\uFF0C\u540E\u8005\u5219\u662F\u5C06\u591A\u4E2A\u671F\u7EA6\u7EC4\u5408\u4E3A\u4E00\u4E2A\u671F\u7EA6\u3002</p><p><strong>1. \u671F\u7EA6\u8FDE\u9501</strong><br> \u628A\u671F\u7EA6\u9010\u4E2A\u5730\u4E32\u8054\u8D77\u6765\u662F\u4E00\u79CD\u975E\u5E38\u6709\u7528\u7684\u7F16\u7A0B\u6A21\u5F0F\u3002\u4E4B\u6240\u4EE5\u53EF\u4EE5\u8FD9\u6837\u505A\uFF0C\u662F\u56E0\u4E3A\u6BCF\u4E2A\u671F\u7EA6\u5B9E\u4F8B\u7684\u65B9\u6CD5\uFF08then()\u3001catch()\u548C finally()\uFF09\u90FD\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684\u671F\u7EA6\u5BF9\u8C61\uFF0C\u800C\u8FD9\u4E2A\u65B0\u671F\u7EA6\u53C8\u6709\u81EA\u5DF1\u7684\u5B9E\u4F8B\u65B9\u6CD5\u3002\u8FD9\u6837\u8FDE\u7F00\u65B9\u6CD5\u8C03\u7528\u5C31\u53EF\u4EE5\u6784\u6210\u6240\u8C13\u7684\u201C\u671F\u7EA6\u8FDE\u9501\u201D\u3002\u6BD4\u5982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;first&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;second&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;third&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;fourth&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// first</span>
<span class="token comment">// second</span>
<span class="token comment">// third</span>
<span class="token comment">// fourth</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u5B9E\u73B0\u6700\u7EC8\u6267\u884C\u4E86\u4E00\u8FDE\u4E32\u540C\u6B65\u4EFB\u52A1\u3002\u6B63\u56E0\u4E3A\u5982\u6B64\uFF0C\u8FD9\u79CD\u65B9\u5F0F\u6267\u884C\u7684\u4EFB\u52A1\u6CA1\u6709\u90A3\u4E48\u6709\u7528\uFF0C\u6BD5\u7ADF\u5206\u522B\u4F7F\u7528 4 \u4E2A\u540C\u6B65\u51FD\u6570\u4E5F\u53EF\u4EE5\u505A\u5230\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;first&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;second&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;third&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;fourth&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8981\u771F\u6B63\u6267\u884C\u5F02\u6B65\u4EFB\u52A1\uFF0C\u53EF\u4EE5\u6539\u5199\u524D\u9762\u7684\u4F8B\u5B50\uFF0C\u8BA9\u6BCF\u4E2A\u6267\u884C\u5668\u90FD\u8FD4\u56DE\u4E00\u4E2A\u671F\u7EA6\u5B9E\u4F8B\u3002\u8FD9\u6837\u5C31\u53EF\u4EE5\u8BA9\u6BCF\u4E2A\u540E\u7EED\u671F\u7EA6\u90FD\u7B49\u5F85\u4E4B\u524D\u7684\u671F\u7EA6\uFF0C\u4E5F\u5C31\u662F\u4E32\u884C\u5316\u5F02\u6B65\u4EFB\u52A1\u3002\u6BD4\u5982\uFF0C\u53EF\u4EE5\u50CF\u4E0B\u9762\u8FD9\u6837\u8BA9\u6BCF\u4E2A\u671F\u7EA6\u5728\u4E00\u5B9A\u65F6\u95F4\u540E\u89E3\u51B3\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;p1 executor&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
p1<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;p2 executor&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
      <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;p3 executor&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
      <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;p4 executor&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// p1 executor\uFF081 \u79D2\u540E\uFF09</span>
<span class="token comment">// p2 executor\uFF082 \u79D2\u540E\uFF09</span>
<span class="token comment">// p3 executor\uFF083 \u79D2\u540E\uFF09</span>
<span class="token comment">// p4 executor\uFF084 \u79D2\u540E\uFF09</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u628A\u751F\u6210\u671F\u7EA6\u7684\u4EE3\u7801\u63D0\u53D6\u5230\u4E00\u4E2A\u5DE5\u5382\u51FD\u6570\u4E2D\uFF0C\u5C31\u53EF\u4EE5\u5199\u6210\u8FD9\u6837\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">delayedResolve</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">delayedResolve</span><span class="token punctuation">(</span><span class="token string">&quot;p1 executor&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">delayedResolve</span><span class="token punctuation">(</span><span class="token string">&quot;p2 executor&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">delayedResolve</span><span class="token punctuation">(</span><span class="token string">&quot;p3 executor&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">delayedResolve</span><span class="token punctuation">(</span><span class="token string">&quot;p4 executor&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// p1 executor\uFF081 \u79D2\u540E\uFF09</span>
<span class="token comment">// p2 executor\uFF082 \u79D2\u540E\uFF09</span>
<span class="token comment">// p3 executor\uFF083 \u79D2\u540E\uFF09</span>
<span class="token comment">// p4 executor\uFF084 \u79D2\u540E\uFF09</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6BCF\u4E2A\u540E\u7EED\u7684\u5904\u7406\u7A0B\u5E8F\u90FD\u4F1A\u7B49\u5F85\u524D\u4E00\u4E2A\u671F\u7EA6\u89E3\u51B3\uFF0C\u7136\u540E\u5B9E\u4F8B\u5316\u4E00\u4E2A\u65B0\u671F\u7EA6\u5E76\u8FD4\u56DE\u5B83\u3002\u8FD9\u79CD\u7ED3\u6784\u53EF\u4EE5\u7B80\u6D01\u5730\u5C06\u5F02\u6B65\u4EFB\u52A1\u4E32\u884C\u5316\uFF0C\u89E3\u51B3\u4E4B\u524D\u4F9D\u8D56\u56DE\u8C03\u7684\u96BE\u9898\u3002\u5047\u5982\u8FD9\u79CD\u60C5\u51B5\u4E0B\u4E0D\u4F7F\u7528\u671F\u7EA6\uFF0C\u90A3\u4E48\u524D\u9762\u7684\u4EE3\u7801\u53EF\u80FD\u5C31\u8981\u8FD9\u6837\u5199\u4E86\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">delayedExecute</span><span class="token punctuation">(</span><span class="token parameter">str<span class="token punctuation">,</span> callback <span class="token operator">=</span> <span class="token keyword">null</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
    callback <span class="token operator">&amp;&amp;</span> <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">delayedExecute</span><span class="token punctuation">(</span><span class="token string">&quot;p1 callback&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">delayedExecute</span><span class="token punctuation">(</span><span class="token string">&quot;p2 callback&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">delayedExecute</span><span class="token punctuation">(</span><span class="token string">&quot;p3 callback&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">delayedExecute</span><span class="token punctuation">(</span><span class="token string">&quot;p4 callback&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// p1 callback\uFF081 \u79D2\u540E\uFF09</span>
<span class="token comment">// p2 callback\uFF082 \u79D2\u540E\uFF09</span>
<span class="token comment">// p3 callback\uFF083 \u79D2\u540E\uFF09</span>
<span class="token comment">// p4 callback\uFF084 \u79D2\u540E\uFF09</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5FC3\u660E\u773C\u4EAE\u7684\u5F00\u53D1\u8005\u4F1A\u53D1\u73B0\uFF0C\u8FD9\u4E0D\u6B63\u662F\u671F\u7EA6\u6240\u8981\u89E3\u51B3\u7684\u56DE\u8C03\u5730\u72F1\u95EE\u9898\u5417\uFF1F</p><p>\u56E0\u4E3A then()\u3001catch()\u548C finally()\u90FD\u8FD4\u56DE\u671F\u7EA6\uFF0C\u6240\u4EE5\u4E32\u8054\u8FD9\u4E9B\u65B9\u6CD5\u4E5F\u5F88\u76F4\u89C2\u3002\u4E0B\u9762\u7684\u4F8B\u5B50\u540C\u65F6\u4F7F\u7528\u8FD9 3 \u4E2A\u5B9E\u4F8B\u65B9\u6CD5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;initial promise rejects&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
p<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;reject handler&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;resolve handler&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;finally handler&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// initial promise rejects</span>
<span class="token comment">// reject handler</span>
<span class="token comment">// resolve handler</span>
<span class="token comment">// finally handler</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2. \u671F\u7EA6\u56FE</strong><br> \u56E0\u4E3A\u4E00\u4E2A\u671F\u7EA6\u53EF\u4EE5\u6709\u4EFB\u610F\u591A\u4E2A\u5904\u7406\u7A0B\u5E8F\uFF0C\u6240\u4EE5\u671F\u7EA6\u8FDE\u9501\u53EF\u4EE5\u6784\u5EFA\u6709\u5411\u975E\u5FAA\u73AF\u56FE\u7684\u7ED3\u6784\u3002\u8FD9\u6837\uFF0C\u6BCF\u4E2A\u671F\u7EA6\u90FD\u662F\u56FE\u4E2D\u7684\u4E00\u4E2A\u8282\u70B9\uFF0C\u800C\u4F7F\u7528\u5B9E\u4F8B\u65B9\u6CD5\u6DFB\u52A0\u7684\u5904\u7406\u7A0B\u5E8F\u5219\u662F\u6709\u5411\u9876\u70B9\u3002\u56E0\u4E3A\u56FE\u4E2D\u7684\u6BCF\u4E2A\u8282\u70B9\u90FD\u4F1A\u7B49\u5F85\u524D\u4E00\u4E2A\u8282\u70B9\u843D\u5B9A\uFF0C\u6240\u4EE5\u56FE\u7684\u65B9\u5411\u5C31\u662F\u671F\u7EA6\u7684\u89E3\u51B3\u6216\u62D2\u7EDD\u987A\u5E8F\u3002</p><p>\u4E0B\u9762\u7684\u4F8B\u5B50\u5C55\u793A\u4E86\u4E00\u79CD\u671F\u7EA6\u6709\u5411\u56FE\uFF0C\u4E5F\u5C31\u662F\u4E8C\u53C9\u6811\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// A</span>
<span class="token comment">// / \\</span>
<span class="token comment">// B C</span>
<span class="token comment">// /\\ /\\</span>
<span class="token comment">// D E F G</span>
<span class="token keyword">let</span> <span class="token constant">A</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> <span class="token constant">B</span> <span class="token operator">=</span> <span class="token constant">A</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;B&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> <span class="token constant">C</span> <span class="token operator">=</span> <span class="token constant">A</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;C&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token constant">B</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;D&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token constant">B</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;E&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token constant">C</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;F&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token constant">C</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;G&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// A</span>
<span class="token comment">// B</span>
<span class="token comment">// C</span>
<span class="token comment">// D</span>
<span class="token comment">// E</span>
<span class="token comment">// F</span>
<span class="token comment">// G</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\uFF0C\u65E5\u5FD7\u7684\u8F93\u51FA\u8BED\u53E5\u662F\u5BF9\u4E8C\u53C9\u6811\u7684\u5C42\u5E8F\u904D\u5386\u3002\u5982\u524D\u6240\u8FF0\uFF0C\u671F\u7EA6\u7684\u5904\u7406\u7A0B\u5E8F\u662F\u6309\u7167\u5B83\u4EEC\u6DFB\u52A0\u7684\u987A\u5E8F\u6267\u884C\u7684\u3002\u7531\u4E8E\u671F\u7EA6\u7684\u5904\u7406\u7A0B\u5E8F\u662F\u5148\u6DFB\u52A0\u5230\u6D88\u606F\u961F\u5217\uFF0C\u7136\u540E\u624D\u9010\u4E2A\u6267\u884C\uFF0C\u56E0\u6B64\u6784\u6210\u4E86\u5C42\u5E8F\u904D\u5386\u3002</p><p>\u6811\u53EA\u662F\u671F\u7EA6\u56FE\u7684\u4E00\u79CD\u5F62\u5F0F\u3002\u8003\u8651\u5230\u6839\u8282\u70B9\u4E0D\u4E00\u5B9A\u552F\u4E00\uFF0C\u4E14\u591A\u4E2A\u671F\u7EA6\u4E5F\u53EF\u4EE5\u7EC4\u5408\u6210\u4E00\u4E2A\u671F\u7EA6\uFF08\u901A\u8FC7\u4E0B\u4E00\u8282\u4ECB\u7ECD\u7684 Promise.all()\u548C Promise.race()\uFF09\uFF0C\u6240\u4EE5\u6709\u5411\u975E\u5FAA\u73AF\u56FE\u662F\u4F53\u73B0\u671F\u7EA6\u8FDE\u9501\u53EF\u80FD\u6027\u7684\u6700\u51C6\u786E\u8868\u8FBE\u3002</p><p><strong>3. Promise.all()\u548C Promise.race()</strong><br> Promise \u7C7B\u63D0\u4F9B\u4E24\u4E2A\u5C06\u591A\u4E2A\u671F\u7EA6\u5B9E\u4F8B\u7EC4\u5408\u6210\u4E00\u4E2A\u671F\u7EA6\u7684\u9759\u6001\u65B9\u6CD5\uFF1APromise.all()\u548C Promise.race()\u3002\u800C\u5408\u6210\u540E\u671F\u7EA6\u7684\u884C\u4E3A\u53D6\u51B3\u4E8E\u5185\u90E8\u671F\u7EA6\u7684\u884C\u4E3A\u3002</p><ul><li>Promise.all()</li></ul><p>Promise.all()\u9759\u6001\u65B9\u6CD5\u521B\u5EFA\u7684\u671F\u7EA6\u4F1A\u5728\u4E00\u7EC4\u671F\u7EA6\u5168\u90E8\u89E3\u51B3\u4E4B\u540E\u518D\u89E3\u51B3\u3002\u8FD9\u4E2A\u9759\u6001\u65B9\u6CD5\u63A5\u6536\u4E00\u4E2A\u53EF\u8FED\u4EE3\u5BF9\u8C61\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u65B0\u671F\u7EA6\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> p1 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u53EF\u8FED\u4EE3\u5BF9\u8C61\u4E2D\u7684\u5143\u7D20\u4F1A\u901A\u8FC7 Promise.resolve()\u8F6C\u6362\u4E3A\u671F\u7EA6</span>
<span class="token keyword">let</span> p2 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u7A7A\u7684\u53EF\u8FED\u4EE3\u5BF9\u8C61\u7B49\u4EF7\u4E8E Promise.resolve()</span>
<span class="token keyword">let</span> p3 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u65E0\u6548\u7684\u8BED\u6CD5</span>
<span class="token keyword">let</span> p4 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// TypeError: cannot read Symbol.iterator of undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5408\u6210\u7684\u671F\u7EA6\u53EA\u4F1A\u5728\u6BCF\u4E2A\u5305\u542B\u7684\u671F\u7EA6\u90FD\u89E3\u51B3\u4E4B\u540E\u624D\u89E3\u51B3\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> p <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;pending&gt;</span>
p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;all() resolved!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// all() resolved!\uFF08\u5927\u7EA6 1 \u79D2\u540E\uFF09</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u81F3\u5C11\u6709\u4E00\u4E2A\u5305\u542B\u7684\u671F\u7EA6\u5F85\u5B9A\uFF0C\u5219\u5408\u6210\u7684\u671F\u7EA6\u4E5F\u4F1A\u5F85\u5B9A\u3002\u5982\u679C\u6709\u4E00\u4E2A\u5305\u542B\u7684\u671F\u7EA6\u62D2\u7EDD\uFF0C\u5219\u5408\u6210\u7684\u671F\u7EA6\u4E5F\u4F1A\u62D2\u7EDD\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u6C38\u8FDC\u5F85\u5B9A</span>
<span class="token keyword">let</span> p1 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;pending&gt;</span>
<span class="token comment">// \u4E00\u6B21\u62D2\u7EDD\u4F1A\u5BFC\u81F4\u6700\u7EC8\u671F\u7EA6\u62D2\u7EDD</span>
<span class="token keyword">let</span> p2 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;rejected&gt;</span>
<span class="token comment">// Uncaught (in promise) undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u6240\u6709\u671F\u7EA6\u90FD\u6210\u529F\u89E3\u51B3\uFF0C\u5219\u5408\u6210\u671F\u7EA6\u7684\u89E3\u51B3\u503C\u5C31\u662F\u6240\u6709\u5305\u542B\u671F\u7EA6\u89E3\u51B3\u503C\u7684\u6570\u7EC4\uFF0C\u6309\u7167\u8FED\u4EE3\u5668\u987A\u5E8F\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> p <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">values</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> values<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [3, undefined, 4]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u6709\u671F\u7EA6\u62D2\u7EDD\uFF0C\u5219\u7B2C\u4E00\u4E2A\u62D2\u7EDD\u7684\u671F\u7EA6\u4F1A\u5C06\u81EA\u5DF1\u7684\u7406\u7531\u4F5C\u4E3A\u5408\u6210\u671F\u7EA6\u7684\u62D2\u7EDD\u7406\u7531\u3002\u4E4B\u540E\u518D\u62D2\u7EDD\u7684\u671F\u7EA6\u4E0D\u4F1A\u5F71\u54CD\u6700\u7EC8\u671F\u7EA6\u7684\u62D2\u7EDD\u7406\u7531\u3002\u4E0D\u8FC7\uFF0C\u8FD9\u5E76\u4E0D\u5F71\u54CD\u6240\u6709\u5305\u542B\u671F\u7EA6\u6B63\u5E38\u7684\u62D2\u7EDD\u64CD\u4F5C\u3002\u5408\u6210\u7684\u671F\u7EA6\u4F1A\u9759\u9ED8\u5904\u7406\u6240\u6709\u5305\u542B\u671F\u7EA6\u7684\u62D2\u7EDD\u64CD\u4F5C\uFF0C\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u867D\u7136\u53EA\u6709\u7B2C\u4E00\u4E2A\u671F\u7EA6\u7684\u62D2\u7EDD\u7406\u7531\u4F1A\u8FDB\u5165</span>
<span class="token comment">// \u62D2\u7EDD\u5904\u7406\u7A0B\u5E8F\uFF0C\u7B2C\u4E8C\u4E2A\u671F\u7EA6\u7684\u62D2\u7EDD\u4E5F</span>
<span class="token comment">// \u4F1A\u88AB\u9759\u9ED8\u5904\u7406\uFF0C\u4E0D\u4F1A\u6709\u9519\u8BEF\u8DD1\u6389</span>
<span class="token keyword">let</span> p <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>reject<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
p<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> reason<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3</span>
<span class="token comment">// \u6CA1\u6709\u672A\u5904\u7406\u7684\u9519\u8BEF</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>Promise.race()</li></ul><p>Promise.race()\u9759\u6001\u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u5305\u88C5\u671F\u7EA6\uFF0C\u662F\u4E00\u7EC4\u96C6\u5408\u4E2D\u6700\u5148\u89E3\u51B3\u6216\u62D2\u7EDD\u7684\u671F\u7EA6\u7684\u955C\u50CF\u3002\u8FD9\u4E2A\u65B9\u6CD5\u63A5\u6536\u4E00\u4E2A\u53EF\u8FED\u4EE3\u5BF9\u8C61\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u65B0\u671F\u7EA6\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> p1 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span><span class="token punctuation">[</span>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u53EF\u8FED\u4EE3\u5BF9\u8C61\u4E2D\u7684\u5143\u7D20\u4F1A\u901A\u8FC7 Promise.resolve()\u8F6C\u6362\u4E3A\u671F\u7EA6</span>
<span class="token keyword">let</span> p2 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u7A7A\u7684\u53EF\u8FED\u4EE3\u5BF9\u8C61\u7B49\u4EF7\u4E8E new Promise(() =&gt; {})</span>
<span class="token keyword">let</span> p3 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u65E0\u6548\u7684\u8BED\u6CD5</span>
<span class="token keyword">let</span> p4 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// TypeError: cannot read Symbol.iterator of undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Promise.race()\u4E0D\u4F1A\u5BF9\u89E3\u51B3\u6216\u62D2\u7EDD\u7684\u671F\u7EA6\u533A\u522B\u5BF9\u5F85\u3002\u65E0\u8BBA\u662F\u89E3\u51B3\u8FD8\u662F\u62D2\u7EDD\uFF0C\u53EA\u8981\u662F\u7B2C\u4E00\u4E2A\u843D\u5B9A\u7684\u671F\u7EA6\uFF0CPromise.race()\u5C31\u4F1A\u5305\u88C5\u5176\u89E3\u51B3\u503C\u6216\u62D2\u7EDD\u7406\u7531\u5E76\u8FD4\u56DE\u65B0\u671F\u7EA6\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u89E3\u51B3\u5148\u53D1\u751F\uFF0C\u8D85\u65F6\u540E\u7684\u62D2\u7EDD\u88AB\u5FFD\u7565</span>
<span class="token keyword">let</span> p1 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>reject<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;resolved&gt;: 3</span>
<span class="token comment">// \u62D2\u7EDD\u5148\u53D1\u751F\uFF0C\u8D85\u65F6\u540E\u7684\u89E3\u51B3\u88AB\u5FFD\u7565</span>
<span class="token keyword">let</span> p2 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;rejected&gt;: 4</span>
<span class="token comment">// \u8FED\u4EE3\u987A\u5E8F\u51B3\u5B9A\u4E86\u843D\u5B9A\u987A\u5E8F</span>
<span class="token keyword">let</span> p3 <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> p3<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &lt;resolved&gt;: 5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u6709\u4E00\u4E2A\u671F\u7EA6\u62D2\u7EDD\uFF0C\u53EA\u8981\u5B83\u662F\u7B2C\u4E00\u4E2A\u843D\u5B9A\u7684\uFF0C\u5C31\u4F1A\u6210\u4E3A\u62D2\u7EDD\u5408\u6210\u671F\u7EA6\u7684\u7406\u7531\u3002\u4E4B\u540E\u518D\u62D2\u7EDD\u7684\u671F\u7EA6\u4E0D\u4F1A\u5F71\u54CD\u6700\u7EC8\u671F\u7EA6\u7684\u62D2\u7EDD\u7406\u7531\u3002\u4E0D\u8FC7\uFF0C\u8FD9\u5E76\u4E0D\u5F71\u54CD\u6240\u6709\u5305\u542B\u671F\u7EA6\u6B63\u5E38\u7684\u62D2\u7EDD\u64CD\u4F5C\u3002\u4E0E Promise.all()\u7C7B\u4F3C\uFF0C\u5408\u6210\u7684\u671F\u7EA6\u4F1A\u9759\u9ED8\u5904\u7406\u6240\u6709\u5305\u542B\u671F\u7EA6\u7684\u62D2\u7EDD\u64CD\u4F5C\uFF0C\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u867D\u7136\u53EA\u6709\u7B2C\u4E00\u4E2A\u671F\u7EA6\u7684\u62D2\u7EDD\u7406\u7531\u4F1A\u8FDB\u5165</span>
<span class="token comment">// \u62D2\u7EDD\u5904\u7406\u7A0B\u5E8F\uFF0C\u7B2C\u4E8C\u4E2A\u671F\u7EA6\u7684\u62D2\u7EDD\u4E5F</span>
<span class="token comment">// \u4F1A\u88AB\u9759\u9ED8\u5904\u7406\uFF0C\u4E0D\u4F1A\u6709\u9519\u8BEF\u8DD1\u6389</span>
<span class="token keyword">let</span> p <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>reject<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
p<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> reason<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3</span>
<span class="token comment">// \u6CA1\u6709\u672A\u5904\u7406\u7684\u9519\u8BEF</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>4. \u4E32\u884C\u671F\u7EA6\u5408\u6210</strong><br> \u5230\u76EE\u524D\u4E3A\u6B62\uFF0C\u6211\u4EEC\u8BA8\u8BBA\u671F\u7EA6\u8FDE\u9501\u4E00\u76F4\u56F4\u7ED5\u671F\u7EA6\u7684\u4E32\u884C\u6267\u884C\uFF0C\u5FFD\u7565\u4E86\u671F\u7EA6\u7684\u53E6\u4E00\u4E2A\u4E3B\u8981\u7279\u6027\uFF1A\u5F02\u6B65\u4EA7\u751F\u503C\u5E76\u5C06\u5176\u4F20\u7ED9\u5904\u7406\u7A0B\u5E8F\u3002\u57FA\u4E8E\u540E\u7EED\u671F\u7EA6\u4F7F\u7528\u4E4B\u524D\u671F\u7EA6\u7684\u8FD4\u56DE\u503C\u6765\u4E32\u8054\u671F\u7EA6\u662F\u671F\u7EA6\u7684\u57FA\u672C\u529F\u80FD\u3002\u8FD9\u5F88\u50CF\u51FD\u6570\u5408\u6210\uFF0C\u5373\u5C06\u591A\u4E2A\u51FD\u6570\u5408\u6210\u4E3A\u4E00\u4E2A\u51FD\u6570\uFF0C\u6BD4\u5982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">addTwo</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> x <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">addThree</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> x <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">addFive</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> x <span class="token operator">+</span> <span class="token number">5</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">addTen</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token function">addFive</span><span class="token punctuation">(</span><span class="token function">addTwo</span><span class="token punctuation">(</span><span class="token function">addThree</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">addTen</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 17</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u8FD9\u4E2A\u4F8B\u5B50\u4E2D\uFF0C\u6709 3 \u4E2A\u51FD\u6570\u57FA\u4E8E\u4E00\u4E2A\u503C\u5408\u6210\u4E3A\u4E00\u4E2A\u51FD\u6570\u3002\u7C7B\u4F3C\u5730\uFF0C\u671F\u7EA6\u4E5F\u53EF\u4EE5\u50CF\u8FD9\u6837\u5408\u6210\u8D77\u6765\uFF0C\u6E10\u8FDB\u5730\u6D88\u8D39\u4E00\u4E2A\u503C\uFF0C\u5E76\u8FD4\u56DE\u4E00\u4E2A\u7ED3\u679C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">addTwo</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> x <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">addThree</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> x <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">addFive</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> x <span class="token operator">+</span> <span class="token number">5</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">addTen</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>addTwo<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>addThree<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>addFive<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">addTen</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 18</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528 Array.prototype.reduce()\u53EF\u4EE5\u5199\u6210\u66F4\u7B80\u6D01\u7684\u5F62\u5F0F\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">addTwo</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> x <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">addThree</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> x <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">addFive</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> x <span class="token operator">+</span> <span class="token number">5</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">addTen</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span>addTwo<span class="token punctuation">,</span> addThree<span class="token punctuation">,</span> addFive<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token parameter">promise<span class="token punctuation">,</span> fn</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span><span class="token punctuation">,</span>
    Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">addTen</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 18</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u79CD\u6A21\u5F0F\u53EF\u4EE5\u63D0\u70BC\u51FA\u4E00\u4E2A\u901A\u7528\u51FD\u6570\uFF0C\u53EF\u4EE5\u628A\u4EFB\u610F\u591A\u4E2A\u51FD\u6570\u4F5C\u4E3A\u5904\u7406\u7A0B\u5E8F\u5408\u6210\u4E00\u4E2A\u8FDE\u7EED\u4F20\u503C\u7684\u671F\u7EA6\u8FDE\u9501\u3002\u8FD9\u4E2A\u901A\u7528\u7684\u5408\u6210\u51FD\u6570\u53EF\u4EE5\u8FD9\u6837\u5B9E\u73B0\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">addTwo</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> x <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">addThree</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> x <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">addFive</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> x <span class="token operator">+</span> <span class="token number">5</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">compose</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>fns</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    fns<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">promise<span class="token punctuation">,</span> fn</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span><span class="token punctuation">,</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> addTen <span class="token operator">=</span> <span class="token function">compose</span><span class="token punctuation">(</span>addTwo<span class="token punctuation">,</span> addThree<span class="token punctuation">,</span> addFive<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">addTen</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 18</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">\u6CE8\u610F</p><p>\u672C\u7AE0\u540E\u9762\u7684 11.3 \u8282\u5728\u8BA8\u8BBA\u5F02\u6B65\u51FD\u6570\u65F6\u8FD8\u4F1A\u6D89\u53CA\u8FD9\u4E2A\u6982\u5FF5\u3002</p></div><h3 id="_11-2-5-\u671F\u7EA6\u6269\u5C55" tabindex="-1"><a class="header-anchor" href="#_11-2-5-\u671F\u7EA6\u6269\u5C55" aria-hidden="true">#</a> 11.2.5 \u671F\u7EA6\u6269\u5C55</h3><p>ES6 \u671F\u7EA6\u5B9E\u73B0\u662F\u5F88\u53EF\u9760\u7684\uFF0C\u4F46\u5B83\u4E5F\u6709\u4E0D\u8DB3\u4E4B\u5904\u3002\u6BD4\u5982\uFF0C\u5F88\u591A\u7B2C\u4E09\u65B9\u671F\u7EA6\u5E93\u5B9E\u73B0\u4E2D\u5177\u5907\u800C ECMAScript \u89C4\u8303\u5374\u672A\u6D89\u53CA\u7684\u4E24\u4E2A\u7279\u6027\uFF1A\u671F\u7EA6\u53D6\u6D88\u548C\u8FDB\u5EA6\u8FFD\u8E2A\u3002</p><p><strong>1. \u671F\u7EA6\u53D6\u6D88</strong><br> \u6211\u4EEC\u7ECF\u5E38\u4F1A\u9047\u5230\u671F\u7EA6\u6B63\u5728\u5904\u7406\u8FC7\u7A0B\u4E2D\uFF0C\u7A0B\u5E8F\u5374\u4E0D\u518D\u9700\u8981\u5176\u7ED3\u679C\u7684\u60C5\u5F62\u3002\u8FD9\u65F6\u5019\u5982\u679C\u80FD\u591F\u53D6\u6D88\u671F\u7EA6\u5C31\u597D\u4E86\u3002\u67D0\u4E9B\u7B2C\u4E09\u65B9\u5E93\uFF0C\u6BD4\u5982 Bluebird\uFF0C\u5C31\u63D0\u4F9B\u4E86\u8FD9\u4E2A\u7279\u6027\u3002\u5B9E\u9645\u4E0A\uFF0CTC39 \u59D4\u5458\u4F1A\u4E5F\u66FE\u51C6\u5907\u589E\u52A0\u8FD9\u4E2A\u7279\u6027\uFF0C\u4F46\u76F8\u5173\u63D0\u6848\u6700\u7EC8\u88AB\u64A4\u56DE\u4E86\u3002\u7ED3\u679C\uFF0CES6 \u671F\u7EA6\u88AB\u8BA4\u4E3A\u662F\u201C\u6FC0\u8FDB\u7684\u201D\uFF1A\u53EA\u8981\u671F\u7EA6\u7684\u903B\u8F91\u5F00\u59CB\u6267\u884C\uFF0C\u5C31\u6CA1\u6709\u529E\u6CD5\u963B\u6B62\u5B83\u6267\u884C\u5230\u5B8C\u6210\u3002</p><p>\u5B9E\u9645\u4E0A\uFF0C\u53EF\u4EE5\u5728\u73B0\u6709\u5B9E\u73B0\u57FA\u7840\u4E0A\u63D0\u4F9B\u4E00\u79CD\u4E34\u65F6\u6027\u7684\u5C01\u88C5\uFF0C\u4EE5\u5B9E\u73B0\u53D6\u6D88\u671F\u7EA6\u7684\u529F\u80FD\u3002\u8FD9\u53EF\u4EE5\u7528\u5230 Kevin Smith \u63D0\u5230\u7684\u201C\u53D6\u6D88\u4EE4\u724C\u201D\uFF08cancel token\uFF09\u3002\u751F\u6210\u7684\u4EE4\u724C\u5B9E\u4F8B\u63D0\u4F9B\u4E86\u4E00\u4E2A\u63A5\u53E3\uFF0C\u5229\u7528\u8FD9\u4E2A\u63A5\u53E3\u53EF\u4EE5\u53D6\u6D88\u671F\u7EA6\uFF1B\u540C\u65F6\u4E5F\u63D0\u4F9B\u4E86\u4E00\u4E2A\u671F\u7EA6\u7684\u5B9E\u4F8B\uFF0C\u53EF\u4EE5\u7528\u6765\u89E6\u53D1\u53D6\u6D88\u540E\u7684\u64CD\u4F5C\u5E76\u6C42\u503C\u53D6\u6D88\u72B6\u6001\u3002\u4E0B\u9762\u662F CancelToken \u7C7B\u7684\u4E00\u4E2A\u57FA\u672C\u5B9E\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">CancelToken</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">cancelFn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">cancelFn</span><span class="token punctuation">(</span>resolve<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u7C7B\u5305\u88C5\u4E86\u4E00\u4E2A\u671F\u7EA6\uFF0C\u628A\u89E3\u51B3\u65B9\u6CD5\u66B4\u9732\u7ED9\u4E86 cancelFn \u53C2\u6570\u3002\u8FD9\u6837\uFF0C\u5916\u90E8\u4EE3\u7801\u5C31\u53EF\u4EE5\u5411\u6784\u9020\u51FD\u6570\u4E2D\u4F20\u5165\u4E00\u4E2A\u51FD\u6570\uFF0C\u4ECE\u800C\u63A7\u5236\u4EC0\u4E48\u60C5\u51B5\u4E0B\u53EF\u4EE5\u53D6\u6D88\u671F\u7EA6\u3002\u8FD9\u91CC\u671F\u7EA6\u662F\u4EE4\u724C\u7C7B\u7684\u516C\u5171\u6210\u5458\uFF0C\u56E0\u6B64\u53EF\u4EE5\u7ED9\u5B83\u6DFB\u52A0\u5904\u7406\u7A0B\u5E8F\u4EE5\u53D6\u6D88\u671F\u7EA6\u3002\u8FD9\u4E2A\u7C7B\u5927\u6982\u53EF\u4EE5\u8FD9\u6837\u4F7F\u7528\uFF1A</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>start<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Start<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cancel<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Cancel<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
  <span class="token keyword">class</span> <span class="token class-name">CancelToken</span> <span class="token punctuation">{</span>
    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">cancelFn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">cancelFn</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;delay cancelled&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> startButton <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;#start&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> cancelButton <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;#cancel&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">function</span> <span class="token function">cancellableDelayedResolve</span><span class="token punctuation">(</span><span class="token parameter">delay</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;set delay&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> id <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;delayed resolve&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> delay<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">const</span> cancelToken <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CancelToken</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">cancelCallback</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
        cancelButton<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span> cancelCallback<span class="token punctuation">)</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
      cancelToken<span class="token punctuation">.</span>promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">clearTimeout</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  startButton<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;click&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">cancellableDelayedResolve</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6BCF\u6B21\u5355\u51FB\u201CStart\u201D\u6309\u94AE\u90FD\u4F1A\u5F00\u59CB\u8BA1\u65F6\uFF0C\u5E76\u5B9E\u4F8B\u5316\u4E00\u4E2A\u65B0\u7684 CancelToken \u7684\u5B9E\u4F8B\u3002\u6B64\u65F6\uFF0C\u201CCancel\u201D\u6309\u94AE\u4E00\u65E6\u88AB\u70B9\u51FB\uFF0C\u5C31\u4F1A\u89E6\u53D1\u4EE4\u724C\u5B9E\u4F8B\u4E2D\u7684\u671F\u7EA6\u89E3\u51B3\u3002\u800C\u89E3\u51B3\u4E4B\u540E\uFF0C\u5355\u51FB\u201CStart\u201D\u6309\u94AE\u8BBE\u7F6E\u7684\u8D85\u65F6\u4E5F\u4F1A\u88AB\u53D6\u6D88\u3002</p><p><strong>2. \u671F\u7EA6\u8FDB\u5EA6\u901A\u77E5</strong><br> \u6267\u884C\u4E2D\u7684\u671F\u7EA6\u53EF\u80FD\u4F1A\u6709\u4E0D\u5C11\u79BB\u6563\u7684\u201C\u9636\u6BB5\u201D\uFF0C\u5728\u6700\u7EC8\u89E3\u51B3\u4E4B\u524D\u5FC5\u987B\u4F9D\u6B21\u7ECF\u8FC7\u3002\u67D0\u4E9B\u60C5\u51B5\u4E0B\uFF0C\u76D1\u63A7\u671F\u7EA6\u7684\u6267\u884C\u8FDB\u5EA6\u4F1A\u5F88\u6709\u7528\u3002ECMAScript 6 \u671F\u7EA6\u5E76\u4E0D\u652F\u6301\u8FDB\u5EA6\u8FFD\u8E2A\uFF0C\u4F46\u662F\u53EF\u4EE5\u901A\u8FC7\u6269\u5C55\u6765\u5B9E\u73B0\u3002\u4E00\u79CD\u5B9E\u73B0\u65B9\u5F0F\u662F\u6269\u5C55 Promise \u7C7B\uFF0C\u4E3A\u5B83\u6DFB\u52A0 notify()\u65B9\u6CD5\uFF0C\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">TrackablePromise</span> <span class="token keyword">extends</span> <span class="token class-name">Promise</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">executor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> notifyHandlers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">super</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">executor</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">status</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        notifyHandlers<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">handler</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">handler</span><span class="token punctuation">(</span>status<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>notifyHandlers <span class="token operator">=</span> notifyHandlers<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">notify</span><span class="token punctuation">(</span><span class="token parameter">notifyHandler</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>notifyHandlers<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>notifyHandler<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u6837\uFF0CTrackablePromise \u5C31\u53EF\u4EE5\u5728\u6267\u884C\u51FD\u6570\u4E2D\u4F7F\u7528 notify()\u51FD\u6570\u4E86\u3002\u53EF\u4EE5\u50CF\u4E0B\u9762\u8FD9\u6837\u4F7F\u7528\u8FD9\u4E2A\u51FD\u6570\u6765\u5B9E\u4F8B\u5316\u4E00\u4E2A\u671F\u7EA6\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TrackablePromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject<span class="token punctuation">,</span> notify</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">function</span> <span class="token function">countdown</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">notify</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token number">20</span> <span class="token operator">*</span> x<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">% remaining</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">countdown</span><span class="token punctuation">(</span>x <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token function">countdown</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u671F\u7EA6\u4F1A\u8FDE\u7EED 5 \u6B21\u9012\u5F52\u5730\u8BBE\u7F6E 1000 \u6BEB\u79D2\u7684\u8D85\u65F6\u3002\u6BCF\u4E2A\u8D85\u65F6\u56DE\u8C03\u90FD\u4F1A\u8C03\u7528 notify()\u5E76\u4F20\u5165\u72B6\u6001\u503C\u3002\u5047\u8BBE\u901A\u77E5\u5904\u7406\u7A0B\u5E8F\u7B80\u5355\u5730\u8FD9\u6837\u5199\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// ...</span>
<span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TrackablePromise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject<span class="token punctuation">,</span> notify</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">function</span> <span class="token function">countdown</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">notify</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token number">20</span> <span class="token operator">*</span> x<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">% remaining</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">countdown</span><span class="token punctuation">(</span>x <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token function">countdown</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
p<span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;progress:&quot;</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;completed&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \uFF08\u7EA6 1 \u79D2\u540E\uFF0980% remaining</span>
<span class="token comment">// \uFF08\u7EA6 2 \u79D2\u540E\uFF0960% remaining</span>
<span class="token comment">// \uFF08\u7EA6 3 \u79D2\u540E\uFF0940% remaining</span>
<span class="token comment">// \uFF08\u7EA6 4 \u79D2\u540E\uFF0920% remaining</span>
<span class="token comment">// \uFF08\u7EA6 5 \u79D2\u540E\uFF09completed</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>notify()\u51FD\u6570\u4F1A\u8FD4\u56DE\u671F\u7EA6\uFF0C\u6240\u4EE5\u53EF\u4EE5\u8FDE\u7F00\u8C03\u7528\uFF0C\u8FDE\u7EED\u6DFB\u52A0\u5904\u7406\u7A0B\u5E8F\u3002\u591A\u4E2A\u5904\u7406\u7A0B\u5E8F\u4F1A\u9488\u5BF9\u6536\u5230\u7684\u6BCF\u6761\u6D88\u606F\u5206\u522B\u6267\u884C\u4E00\u904D\uFF0C\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// ...</span>
p<span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;a:&quot;</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">notify</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;b:&quot;</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;completed&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \uFF08\u7EA6 1 \u79D2\u540E\uFF09 a: 80% remaining</span>
<span class="token comment">// \uFF08\u7EA6 1 \u79D2\u540E\uFF09 b: 80% remaining</span>
<span class="token comment">// \uFF08\u7EA6 2 \u79D2\u540E\uFF09 a: 60% remaining</span>
<span class="token comment">// \uFF08\u7EA6 2 \u79D2\u540E\uFF09 b: 60% remaining</span>
<span class="token comment">// \uFF08\u7EA6 3 \u79D2\u540E\uFF09 a: 40% remaining</span>
<span class="token comment">// \uFF08\u7EA6 3 \u79D2\u540E\uFF09 b: 40% remaining</span>
<span class="token comment">// \uFF08\u7EA6 4 \u79D2\u540E\uFF09 a: 20% remaining</span>
<span class="token comment">// \uFF08\u7EA6 4 \u79D2\u540E\uFF09 b: 20% remaining</span>
<span class="token comment">// \uFF08\u7EA6 5 \u79D2\u540E\uFF09 completed</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u603B\u4F53\u6765\u770B\uFF0C\u8FD9\u8FD8\u662F\u4E00\u4E2A\u6BD4\u8F83\u7C97\u7CD9\u7684\u5B9E\u73B0\uFF0C\u4F46\u5E94\u8BE5\u53EF\u4EE5\u6F14\u793A\u51FA\u5982\u4F55\u4F7F\u7528\u901A\u77E5\u62A5\u544A\u8FDB\u5EA6\u4E86\u3002</p><div class="custom-container tip"><p class="custom-container-title">\u6CE8\u610F</p><p>ES6 \u4E0D\u652F\u6301\u53D6\u6D88\u671F\u7EA6\u548C\u8FDB\u5EA6\u901A\u77E5\uFF0C\u4E00\u4E2A\u4E3B\u8981\u539F\u56E0\u5C31\u662F\u8FD9\u6837\u4F1A\u5BFC\u81F4\u671F\u7EA6\u8FDE\u9501\u548C\u671F\u7EA6\u5408\u6210\u8FC7\u5EA6\u590D\u6742\u5316\u3002\u6BD4\u5982\u5728\u4E00\u4E2A\u671F\u7EA6\u8FDE\u9501\u4E2D\uFF0C\u5982\u679C\u67D0\u4E2A\u88AB\u5176\u4ED6\u671F\u7EA6\u4F9D\u8D56\u7684\u671F\u7EA6\u88AB\u53D6\u6D88\u4E86\u6216\u8005\u53D1\u51FA\u4E86\u901A\u77E5\uFF0C\u90A3\u4E48\u63A5\u4E0B\u6765\u5E94\u8BE5\u53D1\u751F\u4EC0\u4E48\u5B8C\u5168\u8BF4\u4E0D\u6E05\u695A\u3002\u6BD5\u7ADF\uFF0C\u5982\u679C\u53D6\u6D88\u4E86 Promise.all()\u4E2D\u7684\u4E00\u4E2A\u671F\u7EA6\uFF0C\u6216\u8005\u671F\u7EA6\u8FDE\u9501\u4E2D\u524D\u9762\u7684\u671F\u7EA6\u53D1\u9001\u4E86\u4E00\u4E2A\u901A\u77E5\uFF0C\u90A3\u4E48\u63A5\u4E0B\u6765\u5E94\u8BE5\u600E\u4E48\u529E\u624D\u6BD4\u8F83\u5408\u7406\u5462\uFF1F</p></div><h2 id="_11-3-\u5F02\u6B65\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#_11-3-\u5F02\u6B65\u51FD\u6570" aria-hidden="true">#</a> 11.3 \u5F02\u6B65\u51FD\u6570</h2><p>\u5F02\u6B65\u51FD\u6570\uFF0C\u4E5F\u79F0\u4E3A\u201Casync/await\u201D\uFF08\u8BED\u6CD5\u5173\u952E\u5B57\uFF09\uFF0C\u662F ES6 \u671F\u7EA6\u6A21\u5F0F\u5728 ECMAScript \u51FD\u6570\u4E2D\u7684\u5E94\u7528\u3002async/await \u662F ES8 \u89C4\u8303\u65B0\u589E\u7684\u3002\u8FD9\u4E2A\u7279\u6027\u4ECE\u884C\u4E3A\u548C\u8BED\u6CD5\u4E0A\u90FD\u589E\u5F3A\u4E86 JavaScript\uFF0C\u8BA9\u4EE5\u540C\u6B65\u65B9\u5F0F\u5199\u7684\u4EE3\u7801\u80FD\u591F\u5F02\u6B65\u6267\u884C\u3002\u4E0B\u9762\u6765\u770B\u4E00\u4E2A\u6700\u7B80\u5355\u7684\u4F8B\u5B50\uFF0C\u8FD9\u4E2A\u671F\u7EA6\u5728\u8D85\u65F6\u4E4B\u540E\u4F1A\u89E3\u51B3\u4E3A\u4E00\u4E2A\u503C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u671F\u7EA6\u5728 1000 \u6BEB\u79D2\u4E4B\u540E\u89E3\u51B3\u4E3A\u6570\u503C 3\u3002\u5982\u679C\u7A0B\u5E8F\u4E2D\u7684\u5176\u4ED6\u4EE3\u7801\u8981\u5728\u8FD9\u4E2A\u503C\u53EF\u7528\u65F6\u8BBF\u95EE\u5B83\uFF0C\u5219\u9700\u8981\u5199\u4E00\u4E2A\u89E3\u51B3\u5904\u7406\u7A0B\u5E8F\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u5176\u5B9E\u662F\u5F88\u4E0D\u65B9\u4FBF\u7684\uFF0C\u56E0\u4E3A\u5176\u4ED6\u4EE3\u7801\u90FD\u5FC5\u987B\u585E\u5230\u671F\u7EA6\u5904\u7406\u7A0B\u5E8F\u4E2D\u3002\u4E0D\u8FC7\u53EF\u4EE5\u628A\u5904\u7406\u7A0B\u5E8F\u5B9A\u4E49\u4E3A\u4E00\u4E2A\u51FD\u6570\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">handler</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>handler<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u6539\u8FDB\u5176\u5B9E\u4E5F\u4E0D\u5927\u3002\u8FD9\u662F\u56E0\u4E3A\u4EFB\u4F55\u9700\u8981\u8BBF\u95EE\u8FD9\u4E2A\u671F\u7EA6\u6240\u4EA7\u751F\u503C\u7684\u4EE3\u7801\uFF0C\u90FD\u9700\u8981\u4EE5\u5904\u7406\u7A0B\u5E8F\u7684\u5F62\u5F0F\u6765\u63A5\u6536\u8FD9\u4E2A\u503C\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u4EE3\u7801\u7167\u6837\u8FD8\u662F\u8981\u653E\u5230\u5904\u7406\u7A0B\u5E8F\u91CC\u3002ES8 \u4E3A\u6B64\u63D0\u4F9B\u4E86 async/await \u5173\u952E\u5B57\u3002</p><h3 id="_11-3-1-\u5F02\u6B65\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#_11-3-1-\u5F02\u6B65\u51FD\u6570" aria-hidden="true">#</a> 11.3.1 \u5F02\u6B65\u51FD\u6570</h3><p>ES8 \u7684 async/await \u65E8\u5728\u89E3\u51B3\u5229\u7528\u5F02\u6B65\u7ED3\u6784\u7EC4\u7EC7\u4EE3\u7801\u7684\u95EE\u9898\u3002\u4E3A\u6B64\uFF0CECMAScript \u5BF9\u51FD\u6570\u8FDB\u884C\u4E86\u6269\u5C55\uFF0C\u4E3A\u5176\u589E\u52A0\u4E86\u4E24\u4E2A\u65B0\u5173\u952E\u5B57\uFF1Aasync \u548C await\u3002</p><p><strong>1. async</strong><br> async \u5173\u952E\u5B57\u7528\u4E8E\u58F0\u660E\u5F02\u6B65\u51FD\u6570\u3002\u8FD9\u4E2A\u5173\u952E\u5B57\u53EF\u4EE5\u7528\u5728\u51FD\u6570\u58F0\u660E\u3001\u51FD\u6570\u8868\u8FBE\u5F0F\u3001\u7BAD\u5934\u51FD\u6570\u548C\u65B9\u6CD5\u4E0A\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">let</span> <span class="token function-variable function">bar</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> <span class="token function-variable function">baz</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">class</span> <span class="token class-name">Qux</span> <span class="token punctuation">{</span>
  <span class="token keyword">async</span> <span class="token function">qux</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528 async \u5173\u952E\u5B57\u53EF\u4EE5\u8BA9\u51FD\u6570\u5177\u6709\u5F02\u6B65\u7279\u5F81\uFF0C\u4F46\u603B\u4F53\u4E0A\u5176\u4EE3\u7801\u4ECD\u7136\u662F\u540C\u6B65\u6C42\u503C\u7684\u3002\u800C\u5728\u53C2\u6570\u6216\u95ED\u5305\u65B9\u9762\uFF0C\u5F02\u6B65\u51FD\u6570\u4ECD\u7136\u5177\u6709\u666E\u901A JavaScript \u51FD\u6570\u7684\u6B63\u5E38\u884C\u4E3A\u3002\u6B63\u5982\u4E0B\u9762\u7684\u4F8B\u5B50\u6240\u793A\uFF0Cfoo()\u51FD\u6570\u4ECD\u7136\u4F1A\u5728\u540E\u9762\u7684\u6307\u4EE4\u4E4B\u524D\u88AB\u6C42\u503C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 1</span>
<span class="token comment">// 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0D\u8FC7\uFF0C\u5F02\u6B65\u51FD\u6570\u5982\u679C\u4F7F\u7528 return \u5173\u952E\u5B57\u8FD4\u56DE\u4E86\u503C\uFF08\u5982\u679C\u6CA1\u6709 return \u5219\u4F1A\u8FD4\u56DE undefined\uFF09\uFF0C\u8FD9\u4E2A\u503C\u4F1A\u88AB Promise.resolve()\u5305\u88C5\u6210\u4E00\u4E2A\u671F\u7EA6\u5BF9\u8C61\u3002\u5F02\u6B65\u51FD\u6570\u59CB\u7EC8\u8FD4\u56DE\u671F\u7EA6\u5BF9\u8C61\u3002\u5728\u51FD\u6570\u5916\u90E8\u8C03\u7528\u8FD9\u4E2A\u51FD\u6570\u53EF\u4EE5\u5F97\u5230\u5B83\u8FD4\u56DE\u7684\u671F\u7EA6\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u7ED9\u8FD4\u56DE\u7684\u671F\u7EA6\u6DFB\u52A0\u4E00\u4E2A\u89E3\u51B3\u5904\u7406\u7A0B\u5E8F</span>
<span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 1</span>
<span class="token comment">// 2</span>
<span class="token comment">// 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F53\u7136\uFF0C\u76F4\u63A5\u8FD4\u56DE\u4E00\u4E2A\u671F\u7EA6\u5BF9\u8C61\u4E5F\u662F\u4E00\u6837\u7684\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u7ED9\u8FD4\u56DE\u7684\u671F\u7EA6\u6DFB\u52A0\u4E00\u4E2A\u89E3\u51B3\u5904\u7406\u7A0B\u5E8F</span>
<span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 1</span>
<span class="token comment">// 2</span>
<span class="token comment">// 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5F02\u6B65\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u671F\u5F85\uFF08\u4F46\u5B9E\u9645\u4E0A\u5E76\u4E0D\u8981\u6C42\uFF09\u4E00\u4E2A\u5B9E\u73B0 thenable \u63A5\u53E3\u7684\u5BF9\u8C61\uFF0C\u4F46\u5E38\u89C4\u7684\u503C\u4E5F\u53EF\u4EE5\u3002\u5982\u679C\u8FD4\u56DE\u7684\u662F\u5B9E\u73B0 thenable \u63A5\u53E3\u7684\u5BF9\u8C61\uFF0C\u5219\u8FD9\u4E2A\u5BF9\u8C61\u53EF\u4EE5\u7531\u63D0\u4F9B\u7ED9 then()\u7684\u5904\u7406\u7A0B\u5E8F\u201C\u89E3\u5305\u201D\u3002\u5982\u679C\u4E0D\u662F\uFF0C\u5219\u8FD4\u56DE\u503C\u5C31\u88AB\u5F53\u4F5C\u5DF2\u7ECF\u89E3\u51B3\u7684\u671F\u7EA6\u3002\u4E0B\u9762\u7684\u4EE3\u7801\u6F14\u793A\u4E86\u8FD9\u4E9B\u60C5\u51B5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u8FD4\u56DE\u4E00\u4E2A\u539F\u59CB\u503C</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token string">&quot;foo&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// foo</span>
<span class="token comment">// \u8FD4\u56DE\u4E00\u4E2A\u6CA1\u6709\u5B9E\u73B0 thenable \u63A5\u53E3\u7684\u5BF9\u8C61</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token string">&quot;bar&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// [&#39;bar&#39;]</span>
<span class="token comment">// \u8FD4\u56DE\u4E00\u4E2A\u5B9E\u73B0\u4E86 thenable \u63A5\u53E3\u7684\u975E\u671F\u7EA6\u5BF9\u8C61</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">baz</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> thenable <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">callback</span><span class="token punctuation">(</span><span class="token string">&quot;baz&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> thenable<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">baz</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// baz</span>
<span class="token comment">// \u8FD4\u56DE\u4E00\u4E2A\u671F\u7EA6</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">qux</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;qux&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">qux</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// qux</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0E\u5728\u671F\u7EA6\u5904\u7406\u7A0B\u5E8F\u4E2D\u4E00\u6837\uFF0C\u5728\u5F02\u6B65\u51FD\u6570\u4E2D\u629B\u51FA\u9519\u8BEF\u4F1A\u8FD4\u56DE\u62D2\u7EDD\u7684\u671F\u7EA6\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">throw</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u7ED9\u8FD4\u56DE\u7684\u671F\u7EA6\u6DFB\u52A0\u4E00\u4E2A\u62D2\u7EDD\u5904\u7406\u7A0B\u5E8F</span>
<span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 1</span>
<span class="token comment">// 2</span>
<span class="token comment">// 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0D\u8FC7\uFF0C\u62D2\u7EDD\u671F\u7EA6\u7684\u9519\u8BEF\u4E0D\u4F1A\u88AB\u5F02\u6B65\u51FD\u6570\u6355\u83B7\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// Attach a rejected handler to the returned promise</span>
<span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 1</span>
<span class="token comment">// 2</span>
<span class="token comment">// Uncaught (in promise): 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2. await</strong><br> \u56E0\u4E3A\u5F02\u6B65\u51FD\u6570\u4E3B\u8981\u9488\u5BF9\u4E0D\u4F1A\u9A6C\u4E0A\u5B8C\u6210\u7684\u4EFB\u52A1\uFF0C\u6240\u4EE5\u81EA\u7136\u9700\u8981\u4E00\u79CD\u6682\u505C\u548C\u6062\u590D\u6267\u884C\u7684\u80FD\u529B\u3002\u4F7F\u7528 await \u5173\u952E\u5B57\u53EF\u4EE5\u6682\u505C\u5F02\u6B65\u51FD\u6570\u4EE3\u7801\u7684\u6267\u884C\uFF0C\u7B49\u5F85\u671F\u7EA6\u89E3\u51B3\u3002\u6765\u770B\u4E0B\u9762\u8FD9\u4E2A\u672C\u7AE0\u5F00\u59CB\u5C31\u51FA\u73B0\u8FC7\u7684\u4F8B\u5B50\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528 async/await \u53EF\u4EE5\u5199\u6210\u8FD9\u6837\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\uFF0Cawait \u5173\u952E\u5B57\u4F1A\u6682\u505C\u6267\u884C\u5F02\u6B65\u51FD\u6570\u540E\u9762\u7684\u4EE3\u7801\uFF0C\u8BA9\u51FA JavaScript \u8FD0\u884C\u65F6\u7684\u6267\u884C\u7EBF\u7A0B\u3002\u8FD9\u4E2A\u884C\u4E3A\u4E0E\u751F\u6210\u5668\u51FD\u6570\u4E2D\u7684 yield \u5173\u952E\u5B57\u662F\u4E00\u6837\u7684\u3002await \u5173\u952E\u5B57\u540C\u6837\u662F\u5C1D\u8BD5\u201C\u89E3\u5305\u201D\u5BF9\u8C61\u7684\u503C\uFF0C\u7136\u540E\u5C06\u8FD9\u4E2A\u503C\u4F20\u7ED9\u8868\u8FBE\u5F0F\uFF0C\u518D\u5F02\u6B65\u6062\u590D\u5F02\u6B65\u51FD\u6570\u7684\u6267\u884C\u3002</p><p>await \u5173\u952E\u5B57\u7684\u7528\u6CD5\u4E0E JavaScript \u7684\u4E00\u5143\u64CD\u4F5C\u4E00\u6837\u3002\u5B83\u53EF\u4EE5\u5355\u72EC\u4F7F\u7528\uFF0C\u4E5F\u53EF\u4EE5\u5728\u8868\u8FBE\u5F0F\u4E2D\u4F7F\u7528\uFF0C\u5982\u4E0B\u9762\u7684\u4F8B\u5B50\u6240\u793A\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5F02\u6B65\u6253\u5370&quot;foo&quot;</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// foo</span>
<span class="token comment">// \u5F02\u6B65\u6253\u5370&quot;bar&quot;</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;bar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// bar</span>
<span class="token comment">// 1000 \u6BEB\u79D2\u540E\u5F02\u6B65\u6253\u5370&quot;baz&quot;</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">baz</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;baz&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">baz</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// baz\uFF081000 \u6BEB\u79D2\u540E\uFF09</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>await \u5173\u952E\u5B57\u671F\u5F85\uFF08\u4F46\u5B9E\u9645\u4E0A\u5E76\u4E0D\u8981\u6C42\uFF09\u4E00\u4E2A\u5B9E\u73B0 thenable \u63A5\u53E3\u7684\u5BF9\u8C61\uFF0C\u4F46\u5E38\u89C4\u7684\u503C\u4E5F\u53EF\u4EE5\u3002\u5982\u679C\u662F\u5B9E\u73B0 thenable \u63A5\u53E3\u7684\u5BF9\u8C61\uFF0C\u5219\u8FD9\u4E2A\u5BF9\u8C61\u53EF\u4EE5\u7531 await \u6765\u201C\u89E3\u5305\u201D\u3002\u5982\u679C\u4E0D\u662F\uFF0C\u5219\u8FD9\u4E2A\u503C\u5C31\u88AB\u5F53\u4F5C\u5DF2\u7ECF\u89E3\u51B3\u7684\u671F\u7EA6\u3002\u4E0B\u9762\u7684\u4EE3\u7801\u6F14\u793A\u4E86\u8FD9\u4E9B\u60C5\u51B5\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u7B49\u5F85\u4E00\u4E2A\u539F\u59CB\u503C</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// foo</span>
<span class="token comment">// \u7B49\u5F85\u4E00\u4E2A\u6CA1\u6709\u5B9E\u73B0 thenable \u63A5\u53E3\u7684\u5BF9\u8C61</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token punctuation">[</span><span class="token string">&quot;bar&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// [&#39;bar&#39;]</span>
<span class="token comment">// \u7B49\u5F85\u4E00\u4E2A\u5B9E\u73B0\u4E86 thenable \u63A5\u53E3\u7684\u975E\u671F\u7EA6\u5BF9\u8C61</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">baz</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> thenable <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">callback</span><span class="token punctuation">(</span><span class="token string">&quot;baz&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> thenable<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">baz</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// baz</span>
<span class="token comment">// \u7B49\u5F85\u4E00\u4E2A\u671F\u7EA6</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">qux</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;qux&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">qux</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// qux</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7B49\u5F85\u4F1A\u629B\u51FA\u9519\u8BEF\u7684\u540C\u6B65\u64CD\u4F5C\uFF0C\u4F1A\u8FD4\u56DE\u62D2\u7EDD\u7684\u671F\u7EA6\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token number">3</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u7ED9\u8FD4\u56DE\u7684\u671F\u7EA6\u6DFB\u52A0\u4E00\u4E2A\u62D2\u7EDD\u5904\u7406\u7A0B\u5E8F</span>
<span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 1</span>
<span class="token comment">// 2</span>
<span class="token comment">// 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u524D\u9762\u7684\u4F8B\u5B50\u6240\u793A\uFF0C\u5355\u72EC\u7684 Promise.reject()\u4E0D\u4F1A\u88AB\u5F02\u6B65\u51FD\u6570\u6355\u83B7\uFF0C\u800C\u4F1A\u629B\u51FA\u672A\u6355\u83B7\u9519\u8BEF\u3002\u4E0D\u8FC7\uFF0C\u5BF9\u62D2\u7EDD\u7684\u671F\u7EA6\u4F7F\u7528 await \u5219\u4F1A\u91CA\u653E\uFF08unwrap\uFF09\u9519\u8BEF\u503C\uFF08\u5C06\u62D2\u7EDD\u671F\u7EA6\u8FD4\u56DE\uFF09\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8FD9\u884C\u4EE3\u7801\u4E0D\u4F1A\u6267\u884C</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u7ED9\u8FD4\u56DE\u7684\u671F\u7EA6\u6DFB\u52A0\u4E00\u4E2A\u62D2\u7EDD\u5904\u7406\u7A0B\u5E8F</span>
<span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 1</span>
<span class="token comment">// 2</span>
<span class="token comment">// 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>3. await \u7684\u9650\u5236</strong><br> await \u5173\u952E\u5B57\u5FC5\u987B\u5728\u5F02\u6B65\u51FD\u6570\u4E2D\u4F7F\u7528\uFF0C\u4E0D\u80FD\u5728\u9876\u7EA7\u4E0A\u4E0B\u6587\u5982<code>&lt;script&gt;</code>\u6807\u7B7E\u6216\u6A21\u5757\u4E2D\u4F7F\u7528\u3002\u4E0D\u8FC7\uFF0C\u5B9A\u4E49\u5E76\u7ACB\u5373\u8C03\u7528\u5F02\u6B65\u51FD\u6570\u662F\u6CA1\u95EE\u9898\u7684\u3002\u4E0B\u9762\u4E24\u6BB5\u4EE3\u7801\u5B9E\u9645\u662F\u76F8\u540C\u7684\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 3</span>
<span class="token comment">// \u7ACB\u5373\u8C03\u7528\u7684\u5F02\u6B65\u51FD\u6570\u8868\u8FBE\u5F0F</span>
<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6B64\u5916\uFF0C\u5F02\u6B65\u51FD\u6570\u7684\u7279\u8D28\u4E0D\u4F1A\u6269\u5C55\u5230\u5D4C\u5957\u51FD\u6570\u3002\u56E0\u6B64\uFF0Cawait \u5173\u952E\u5B57\u4E5F\u53EA\u80FD\u76F4\u63A5\u51FA\u73B0\u5728\u5F02\u6B65\u51FD\u6570\u7684\u5B9A\u4E49\u4E2D\u3002\u5728\u540C\u6B65\u51FD\u6570\u5185\u90E8\u4F7F\u7528 await \u4F1A\u629B\u51FA SyntaxError\u3002\u4E0B\u9762\u5C55\u793A\u4E86\u4E00\u4E9B\u4F1A\u51FA\u9519\u7684\u4F8B\u5B50\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u4E0D\u5141\u8BB8\uFF1Aawait \u51FA\u73B0\u5728\u4E86\u7BAD\u5934\u51FD\u6570\u4E2D</span>
<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token function-variable function">syncFn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">syncFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u4E0D\u5141\u8BB8\uFF1Aawait \u51FA\u73B0\u5728\u4E86\u540C\u6B65\u51FD\u6570\u58F0\u660E\u4E2D</span>
<span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">function</span> <span class="token function">syncFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;bar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">syncFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u4E0D\u5141\u8BB8\uFF1Aawait \u51FA\u73B0\u5728\u4E86\u540C\u6B65\u51FD\u6570\u8868\u8FBE\u5F0F\u4E2D</span>
<span class="token keyword">function</span> <span class="token function">baz</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token function-variable function">syncFn</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;baz&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">syncFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u4E0D\u5141\u8BB8\uFF1AIIFE \u4F7F\u7528\u540C\u6B65\u51FD\u6570\u8868\u8FBE\u5F0F\u6216\u7BAD\u5934\u51FD\u6570</span>
<span class="token keyword">function</span> <span class="token function">qux</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;qux&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;qux&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_11-3-2-\u505C\u6B62\u548C\u6062\u590D\u6267\u884C" tabindex="-1"><a class="header-anchor" href="#_11-3-2-\u505C\u6B62\u548C\u6062\u590D\u6267\u884C" aria-hidden="true">#</a> 11.3.2 \u505C\u6B62\u548C\u6062\u590D\u6267\u884C</h3><p>\u4F7F\u7528 await \u5173\u952E\u5B57\u4E4B\u540E\u7684\u533A\u522B\u5176\u5B9E\u6BD4\u770B\u4E0A\u53BB\u7684\u8FD8\u8981\u5FAE\u5999\u4E00\u4E9B\u3002\u6BD4\u5982\uFF0C\u4E0B\u9762\u7684\u4F8B\u5B50\u4E2D\u6309\u987A\u5E8F\u8C03\u7528\u4E86 3 \u4E2A\u51FD\u6570\uFF0C\u4F46\u5B83\u4EEC\u7684\u8F93\u51FA\u7ED3\u679C\u987A\u5E8F\u662F\u76F8\u53CD\u7684\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">baz</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;baz&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">baz</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// baz</span>
<span class="token comment">// bar</span>
<span class="token comment">// foo</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>async/await \u4E2D\u771F\u6B63\u8D77\u4F5C\u7528\u7684\u662F await\u3002async \u5173\u952E\u5B57\uFF0C\u65E0\u8BBA\u4ECE\u54EA\u65B9\u9762\u6765\u770B\uFF0C\u90FD\u4E0D\u8FC7\u662F\u4E00\u4E2A\u6807\u8BC6\u7B26\u3002\u6BD5\u7ADF\uFF0C\u5F02\u6B65\u51FD\u6570\u5982\u679C\u4E0D\u5305\u542B await \u5173\u952E\u5B57\uFF0C\u5176\u6267\u884C\u57FA\u672C\u4E0A\u8DDF\u666E\u901A\u51FD\u6570\u6CA1\u6709\u4EC0\u4E48\u533A\u522B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 1</span>
<span class="token comment">// 2</span>
<span class="token comment">// 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8981\u5B8C\u5168\u7406\u89E3 await \u5173\u952E\u5B57\uFF0C\u5FC5\u987B\u77E5\u9053\u5B83\u5E76\u975E\u53EA\u662F\u7B49\u5F85\u4E00\u4E2A\u503C\u53EF\u7528\u90A3\u4E48\u7B80\u5355\u3002JavaScript \u8FD0\u884C\u65F6\u5728\u78B0\u5230 await \u5173\u952E\u5B57\u65F6\uFF0C\u4F1A\u8BB0\u5F55\u5728\u54EA\u91CC\u6682\u505C\u6267\u884C\u3002\u7B49\u5230 await \u53F3\u8FB9\u7684\u503C\u53EF\u7528\u4E86\uFF0CJavaScript \u8FD0\u884C\u65F6\u4F1A\u5411\u6D88\u606F\u961F\u5217\u4E2D\u63A8\u9001\u4E00\u4E2A\u4EFB\u52A1\uFF0C\u8FD9\u4E2A\u4EFB\u52A1\u4F1A\u6062\u590D\u5F02\u6B65\u51FD\u6570\u7684\u6267\u884C\u3002</p><p>\u56E0\u6B64\uFF0C\u5373\u4F7F await \u540E\u9762\u8DDF\u7740\u4E00\u4E2A\u7ACB\u5373\u53EF\u7528\u7684\u503C\uFF0C\u51FD\u6570\u7684\u5176\u4F59\u90E8\u5206\u4E5F\u4F1A\u88AB\u5F02\u6B65\u6C42\u503C\u3002\u4E0B\u9762\u7684\u4F8B\u5B50\u6F14\u793A\u4E86\u8FD9\u4E00\u70B9\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 1</span>
<span class="token comment">// 2</span>
<span class="token comment">// 3</span>
<span class="token comment">// 4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u63A7\u5236\u53F0\u4E2D\u8F93\u51FA\u7ED3\u679C\u7684\u987A\u5E8F\u5F88\u597D\u5730\u89E3\u91CA\u4E86\u8FD0\u884C\u65F6\u7684\u5DE5\u4F5C\u8FC7\u7A0B\uFF1A</p><ol><li>\u6253\u5370 1\uFF1B</li><li>\u8C03\u7528\u5F02\u6B65\u51FD\u6570 foo()\uFF1B</li><li>\uFF08\u5728 foo()\u4E2D\uFF09\u6253\u5370 2\uFF1B</li><li>\uFF08\u5728 foo()\u4E2D\uFF09await \u5173\u952E\u5B57\u6682\u505C\u6267\u884C\uFF0C\u4E3A\u7ACB\u5373\u53EF\u7528\u7684\u503C null \u5411\u6D88\u606F\u961F\u5217\u4E2D\u6DFB\u52A0\u4E00\u4E2A\u4EFB\u52A1\uFF1B</li><li>foo()\u9000\u51FA\uFF1B</li><li>\u6253\u5370 3\uFF1B</li><li>\u540C\u6B65\u7EBF\u7A0B\u7684\u4EE3\u7801\u6267\u884C\u5B8C\u6BD5\uFF1B</li><li>JavaScript \u8FD0\u884C\u65F6\u4ECE\u6D88\u606F\u961F\u5217\u4E2D\u53D6\u51FA\u4EFB\u52A1\uFF0C\u6062\u590D\u5F02\u6B65\u51FD\u6570\u6267\u884C\uFF1B</li><li>\uFF08\u5728 foo()\u4E2D\uFF09\u6062\u590D\u6267\u884C\uFF0Cawait \u53D6\u5F97 null \u503C\uFF08\u8FD9\u91CC\u5E76\u6CA1\u6709\u4F7F\u7528\uFF09\uFF1B</li><li>\uFF08\u5728 foo()\u4E2D\uFF09\u6253\u5370 4\uFF1B</li><li>foo()\u8FD4\u56DE\u3002</li></ol><p>\u5982\u679C await \u540E\u9762\u662F\u4E00\u4E2A\u671F\u7EA6\uFF0C\u5219\u95EE\u9898\u4F1A\u7A0D\u5FAE\u590D\u6742\u4E00\u4E9B\u3002\u6B64\u65F6\uFF0C\u4E3A\u4E86\u6267\u884C\u5F02\u6B65\u51FD\u6570\uFF0C\u5B9E\u9645\u4E0A\u4F1A\u6709\u4E24\u4E2A\u4EFB\u52A1\u88AB\u6DFB\u52A0\u5230\u6D88\u606F\u961F\u5217\u5E76\u88AB\u5F02\u6B65\u6C42\u503C\u3002\u4E0B\u9762\u7684\u4F8B\u5B50\u867D\u7136\u770B\u8D77\u6765\u5F88\u53CD\u76F4\u89C9\uFF0C\u4F46\u5B83\u6F14\u793A\u4E86\u771F\u6B63\u7684\u6267\u884C\u987A\u5E8F\uFF1A\u2460<br> \u2460 TC39 \u5BF9 await \u540E\u9762\u662F\u671F\u7EA6\u7684\u60C5\u51B5\u5982\u4F55\u5904\u7406\u505A\u8FC7\u4E00\u6B21\u4FEE\u6539\u3002\u4FEE\u6539\u540E\uFF0C\u672C\u4F8B\u4E2D\u7684 Promise.resolve(8)\u53EA\u4F1A\u751F\u6210\u4E00\u4E2A\u5F02\u6B65\u4EFB\u52A1\u3002\u56E0\u6B64\u5728\u65B0\u7248\u6D4F\u89C8\u5668\u4E2D\uFF0C\u8FD9\u4E2A\u793A\u4F8B\u7684\u8F93\u51FA\u7ED3\u679C\u4E3A 123458967\u3002\u5B9E\u9645\u5F00\u53D1\u4E2D\uFF0C\u5BF9\u4E8E\u5E76\u884C\u7684\u5F02\u6B65\u64CD\u4F5C\u6211\u4EEC\u901A\u5E38\u66F4\u5173\u6CE8\u7ED3\u679C\uFF0C\u800C\u4E0D\u4F9D\u8D56\u6267\u884C\u987A\u5E8F\u3002\u2014\u2014\u8BD1\u8005\u6CE8</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">bar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 1</span>
<span class="token comment">// 2</span>
<span class="token comment">// 3</span>
<span class="token comment">// 4</span>
<span class="token comment">// 5</span>
<span class="token comment">// 6</span>
<span class="token comment">// 7</span>
<span class="token comment">// 8</span>
<span class="token comment">// 9</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD0\u884C\u65F6\u4F1A\u50CF\u8FD9\u6837\u6267\u884C\u4E0A\u9762\u7684\u4F8B\u5B50\uFF1A</p><ol><li>\u6253\u5370 1\uFF1B</li><li>\u8C03\u7528\u5F02\u6B65\u51FD\u6570 foo()\uFF1B</li><li>\uFF08\u5728 foo()\u4E2D\uFF09\u6253\u5370 2\uFF1B</li><li>\uFF08\u5728 foo()\u4E2D\uFF09await \u5173\u952E\u5B57\u6682\u505C\u6267\u884C\uFF0C\u5411\u6D88\u606F\u961F\u5217\u4E2D\u6DFB\u52A0\u4E00\u4E2A\u671F\u7EA6\u5728\u843D\u5B9A\u4E4B\u540E\u6267\u884C\u7684\u4EFB\u52A1\uFF1B</li><li>\u671F\u7EA6\u7ACB\u5373\u843D\u5B9A\uFF0C\u628A\u7ED9 await \u63D0\u4F9B\u503C\u7684\u4EFB\u52A1\u6DFB\u52A0\u5230\u6D88\u606F\u961F\u5217\uFF1B</li><li>foo()\u9000\u51FA\uFF1B</li><li>\u6253\u5370 3\uFF1B</li><li>\u8C03\u7528\u5F02\u6B65\u51FD\u6570 bar()\uFF1B</li><li>\uFF08\u5728 bar()\u4E2D\uFF09\u6253\u5370 4\uFF1B</li><li>\uFF08\u5728 bar()\u4E2D\uFF09await \u5173\u952E\u5B57\u6682\u505C\u6267\u884C\uFF0C\u4E3A\u7ACB\u5373\u53EF\u7528\u7684\u503C 6 \u5411\u6D88\u606F\u961F\u5217\u4E2D\u6DFB\u52A0\u4E00\u4E2A\u4EFB\u52A1\uFF1B</li><li>bar()\u9000\u51FA\uFF1B</li><li>\u6253\u5370 5\uFF1B</li><li>\u9876\u7EA7\u7EBF\u7A0B\u6267\u884C\u5B8C\u6BD5\uFF1B</li><li>JavaScript \u8FD0\u884C\u65F6\u4ECE\u6D88\u606F\u961F\u5217\u4E2D\u53D6\u51FA\u89E3\u51B3 await \u671F\u7EA6\u7684\u5904\u7406\u7A0B\u5E8F\uFF0C\u5E76\u5C06\u89E3\u51B3\u7684\u503C 8 \u63D0\u4F9B\u7ED9\u5B83\uFF1B</li><li>JavaScript \u8FD0\u884C\u65F6\u5411\u6D88\u606F\u961F\u5217\u4E2D\u6DFB\u52A0\u4E00\u4E2A\u6062\u590D\u6267\u884C foo()\u51FD\u6570\u7684\u4EFB\u52A1\uFF1B</li><li>JavaScript \u8FD0\u884C\u65F6\u4ECE\u6D88\u606F\u961F\u5217\u4E2D\u53D6\u51FA\u6062\u590D\u6267\u884C bar()\u7684\u4EFB\u52A1\u53CA\u503C 6\uFF1B</li><li>\uFF08\u5728 bar()\u4E2D\uFF09\u6062\u590D\u6267\u884C\uFF0Cawait \u53D6\u5F97\u503C 6\uFF1B</li><li>\uFF08\u5728 bar()\u4E2D\uFF09\u6253\u5370 6\uFF1B</li><li>\uFF08\u5728 bar()\u4E2D\uFF09\u6253\u5370 7\uFF1B</li><li>bar()\u8FD4\u56DE\uFF1B</li><li>\u5F02\u6B65\u4EFB\u52A1\u5B8C\u6210\uFF0CJavaScript \u4ECE\u6D88\u606F\u961F\u5217\u4E2D\u53D6\u51FA\u6062\u590D\u6267\u884C foo()\u7684\u4EFB\u52A1\u53CA\u503C 8\uFF1B</li><li>\uFF08\u5728 foo()\u4E2D\uFF09\u6253\u5370 8\uFF1B</li><li>\uFF08\u5728 foo()\u4E2D\uFF09\u6253\u5370 9\uFF1B</li><li>foo()\u8FD4\u56DE\u3002</li></ol><h3 id="_11-3-3-\u5F02\u6B65\u51FD\u6570\u7B56\u7565" tabindex="-1"><a class="header-anchor" href="#_11-3-3-\u5F02\u6B65\u51FD\u6570\u7B56\u7565" aria-hidden="true">#</a> 11.3.3 \u5F02\u6B65\u51FD\u6570\u7B56\u7565</h3><p>\u56E0\u4E3A\u7B80\u5355\u5B9E\u7528\uFF0C\u6240\u4EE5\u5F02\u6B65\u51FD\u6570\u5F88\u5FEB\u6210\u4E3A JavaScript \u9879\u76EE\u4F7F\u7528\u6700\u5E7F\u6CDB\u7684\u7279\u6027\u4E4B\u4E00\u3002\u4E0D\u8FC7\uFF0C\u5728\u4F7F\u7528\u5F02\u6B65\u51FD\u6570\u65F6\uFF0C\u8FD8\u662F\u6709\u4E9B\u95EE\u9898\u8981\u6CE8\u610F\u3002</p><p><strong>1. \u5B9E\u73B0 sleep()</strong><br> \u5F88\u591A\u4EBA\u5728\u521A\u5F00\u59CB\u5B66\u4E60 JavaScript \u65F6\uFF0C\u60F3\u627E\u5230\u4E00\u4E2A\u7C7B\u4F3C Java \u4E2D Thread.sleep()\u4E4B\u7C7B\u7684\u51FD\u6570\uFF0C\u597D\u5728\u7A0B\u5E8F\u4E2D\u52A0\u5165\u975E\u963B\u585E\u7684\u6682\u505C\u3002\u4EE5\u524D\uFF0C\u8FD9\u4E2A\u9700\u6C42\u57FA\u672C\u4E0A\u90FD\u901A\u8FC7 setTimeout()\u5229\u7528 JavaScript \u8FD0\u884C\u65F6\u7684\u884C\u4E3A\u6765\u5B9E\u73B0\u7684\u3002\u6709\u4E86\u5F02\u6B65\u51FD\u6570\u4E4B\u540E\uFF0C\u5C31\u4E0D\u4E00\u6837\u4E86\u3002\u4E00\u4E2A\u7B80\u5355\u7684\u7BAD\u5934\u51FD\u6570\u5C31\u53EF\u4EE5\u5B9E\u73B0 sleep()\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token parameter">delay</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> delay<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> t0 <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">1500</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u6682\u505C\u7EA6 1500 \u6BEB\u79D2</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> t0<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 1502</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2. \u5229\u7528\u5E73\u884C\u6267\u884C</strong><br> \u5982\u679C\u4F7F\u7528 await \u65F6\u4E0D\u7559\u5FC3\uFF0C\u5219\u5F88\u53EF\u80FD\u9519\u8FC7\u5E73\u884C\u52A0\u901F\u7684\u673A\u4F1A\u3002\u6765\u770B\u4E0B\u9762\u7684\u4F8B\u5B50\uFF0C\u5176\u4E2D\u987A\u5E8F\u7B49\u5F85\u4E86 5 \u4E2A\u968F\u673A\u7684\u8D85\u65F6\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">randomDelay</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5EF6\u8FDF 0~1000 \u6BEB\u79D2</span>
  <span class="token keyword">const</span> delay <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> finished</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> delay<span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> t0 <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> <span class="token function">randomDelay</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> <span class="token function">randomDelay</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> <span class="token function">randomDelay</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> <span class="token function">randomDelay</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> <span class="token function">randomDelay</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> t0<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">ms elapsed</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 0 finished</span>
<span class="token comment">// 1 finished</span>
<span class="token comment">// 2 finished</span>
<span class="token comment">// 3 finished</span>
<span class="token comment">// 4 finished</span>
<span class="token comment">// 877ms elapsed</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7528\u4E00\u4E2A for \u5FAA\u73AF\u91CD\u5199\uFF0C\u5C31\u662F\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">randomDelay</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5EF6\u8FDF 0~1000 \u6BEB\u79D2</span>
  <span class="token keyword">const</span> delay <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> finished</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> delay<span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> t0 <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> <span class="token function">randomDelay</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> t0<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">ms elapsed</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 0 finished</span>
<span class="token comment">// 1 finished</span>
<span class="token comment">// 2 finished</span>
<span class="token comment">// 3 finished</span>
<span class="token comment">// 4 finished</span>
<span class="token comment">// 877ms elapsed</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5C31\u7B97\u8FD9\u4E9B\u671F\u7EA6\u4E4B\u95F4\u6CA1\u6709\u4F9D\u8D56\uFF0C\u5F02\u6B65\u51FD\u6570\u4E5F\u4F1A\u4F9D\u6B21\u6682\u505C\uFF0C\u7B49\u5F85\u6BCF\u4E2A\u8D85\u65F6\u5B8C\u6210\u3002\u8FD9\u6837\u53EF\u4EE5\u4FDD\u8BC1\u6267\u884C\u987A\u5E8F\uFF0C\u4F46\u603B\u6267\u884C\u65F6\u95F4\u4F1A\u53D8\u957F\u3002</p><p>\u5982\u679C\u987A\u5E8F\u4E0D\u662F\u5FC5\u9700\u4FDD\u8BC1\u7684\uFF0C\u90A3\u4E48\u53EF\u4EE5\u5148\u4E00\u6B21\u6027\u521D\u59CB\u5316\u6240\u6709\u671F\u7EA6\uFF0C\u7136\u540E\u518D\u5206\u522B\u7B49\u5F85\u5B83\u4EEC\u7684\u7ED3\u679C\u3002\u6BD4\u5982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">randomDelay</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5EF6\u8FDF 0~1000 \u6BEB\u79D2</span>
  <span class="token keyword">const</span> delay <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> finished</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> delay<span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> t0 <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> p0 <span class="token operator">=</span> <span class="token function">randomDelay</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> p1 <span class="token operator">=</span> <span class="token function">randomDelay</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> p2 <span class="token operator">=</span> <span class="token function">randomDelay</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> p3 <span class="token operator">=</span> <span class="token function">randomDelay</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> p4 <span class="token operator">=</span> <span class="token function">randomDelay</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> p0<span class="token punctuation">;</span>
  <span class="token keyword">await</span> p1<span class="token punctuation">;</span>
  <span class="token keyword">await</span> p2<span class="token punctuation">;</span>
  <span class="token keyword">await</span> p3<span class="token punctuation">;</span>
  <span class="token keyword">await</span> p4<span class="token punctuation">;</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> t0<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">ms elapsed</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 1 finished</span>
<span class="token comment">// 4 finished</span>
<span class="token comment">// 3 finished</span>
<span class="token comment">// 0 finished</span>
<span class="token comment">// 2 finished</span>
<span class="token comment">// 877ms elapsed</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7528\u6570\u7EC4\u548C for \u5FAA\u73AF\u518D\u5305\u88C5\u4E00\u4E0B\u5C31\u662F\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">randomDelay</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5EF6\u8FDF 0~1000 \u6BEB\u79D2</span>
  <span class="token keyword">const</span> delay <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> finished</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> delay<span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> t0 <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> promises <span class="token operator">=</span> <span class="token function">Array</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">_<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">randomDelay</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> p <span class="token keyword">of</span> promises<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">await</span> p<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> t0<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">ms elapsed</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 4 finished</span>
<span class="token comment">// 2 finished</span>
<span class="token comment">// 1 finished</span>
<span class="token comment">// 0 finished</span>
<span class="token comment">// 3 finished</span>
<span class="token comment">// 877ms elapsed</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\uFF0C\u867D\u7136\u671F\u7EA6\u6CA1\u6709\u6309\u7167\u987A\u5E8F\u6267\u884C\uFF0C\u4F46 await \u6309\u987A\u5E8F\u6536\u5230\u4E86\u6BCF\u4E2A\u671F\u7EA6\u7684\u503C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">randomDelay</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5EF6\u8FDF 0~1000 \u6BEB\u79D2</span>
  <span class="token keyword">const</span> delay <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> finished</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> delay<span class="token punctuation">)</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> t0 <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> promises <span class="token operator">=</span> <span class="token function">Array</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">fill</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">_<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">randomDelay</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> p <span class="token keyword">of</span> promises<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">awaited </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">await</span> p<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> t0<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">ms elapsed</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 1 finished</span>
<span class="token comment">// 2 finished</span>
<span class="token comment">// 4 finished</span>
<span class="token comment">// 3 finished</span>
<span class="token comment">// 0 finished</span>
<span class="token comment">// awaited 0</span>
<span class="token comment">// awaited 1</span>
<span class="token comment">// awaited 2</span>
<span class="token comment">// awaited 3</span>
<span class="token comment">// awaited 4</span>
<span class="token comment">// 645ms elapsed</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>3. \u4E32\u884C\u6267\u884C\u671F\u7EA6</strong><br> \u5728 11.2 \u8282\uFF0C\u6211\u4EEC\u8BA8\u8BBA\u8FC7\u5982\u4F55\u4E32\u884C\u6267\u884C\u671F\u7EA6\u5E76\u628A\u503C\u4F20\u7ED9\u540E\u7EED\u7684\u671F\u7EA6\u3002\u4F7F\u7528 async/await\uFF0C\u671F\u7EA6\u8FDE\u9501\u4F1A\u53D8\u5F97\u5F88\u7B80\u5355\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">addTwo</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> x <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">addThree</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> x <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">addFive</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> x <span class="token operator">+</span> <span class="token number">5</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">addTen</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> fn <span class="token keyword">of</span> <span class="token punctuation">[</span>addTwo<span class="token punctuation">,</span> addThree<span class="token punctuation">,</span> addFive<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    x <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fn</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> x<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">addTen</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 19</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\uFF0Cawait \u76F4\u63A5\u4F20\u9012\u4E86\u6BCF\u4E2A\u51FD\u6570\u7684\u8FD4\u56DE\u503C\uFF0C\u7ED3\u679C\u901A\u8FC7\u8FED\u4EE3\u4EA7\u751F\u3002\u5F53\u7136\uFF0C\u8FD9\u4E2A\u4F8B\u5B50\u5E76\u6CA1\u6709\u4F7F\u7528\u671F\u7EA6\uFF0C\u5982\u679C\u8981\u4F7F\u7528\u671F\u7EA6\uFF0C\u5219\u53EF\u4EE5\u628A\u6240\u6709\u51FD\u6570\u90FD\u6539\u6210\u5F02\u6B65\u51FD\u6570\u3002\u8FD9\u6837\u5B83\u4EEC\u5C31\u90FD\u8FD4\u56DE\u671F\u7EA6\u4E86\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">addTwo</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> x <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">addThree</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> x <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">addFive</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> x <span class="token operator">+</span> <span class="token number">5</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">addTen</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> fn <span class="token keyword">of</span> <span class="token punctuation">[</span>addTwo<span class="token punctuation">,</span> addThree<span class="token punctuation">,</span> addFive<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    x <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fn</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> x<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">addTen</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 19</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>4. \u6808\u8FFD\u8E2A\u4E0E\u5185\u5B58\u7BA1\u7406</strong><br> \u671F\u7EA6\u4E0E\u5F02\u6B65\u51FD\u6570\u7684\u529F\u80FD\u6709\u76F8\u5F53\u7A0B\u5EA6\u7684\u91CD\u53E0\uFF0C\u4F46\u5B83\u4EEC\u5728\u5185\u5B58\u4E2D\u7684\u8868\u793A\u5219\u5DEE\u522B\u5F88\u5927\u3002\u770B\u770B\u4E0B\u9762\u7684\u4F8B\u5B50\uFF0C\u5B83\u5C55\u793A\u4E86\u62D2\u7EDD\u671F\u7EA6\u7684\u6808\u8FFD\u8E2A\u4FE1\u606F\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">fooPromiseExecutor</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span>reject<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span>fooPromiseExecutor<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Uncaught (in promise) bar</span>
<span class="token comment">// setTimeout</span>
<span class="token comment">// setTimeout (async)</span>
<span class="token comment">// fooPromiseExecutor</span>
<span class="token comment">// foo</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6839\u636E\u5BF9\u671F\u7EA6\u7684\u4E0D\u540C\u7406\u89E3\u7A0B\u5EA6\uFF0C\u4EE5\u4E0A\u6808\u8FFD\u8E2A\u4FE1\u606F\u53EF\u80FD\u4F1A\u8BA9\u67D0\u4E9B\u8BFB\u8005\u4E0D\u89E3\u3002\u6808\u8FFD\u8E2A\u4FE1\u606F\u5E94\u8BE5\u76F8\u5F53\u76F4\u63A5\u5730\u8868\u73B0 JavaScript \u5F15\u64CE\u5F53\u524D\u6808\u5185\u5B58\u4E2D\u51FD\u6570\u8C03\u7528\u4E4B\u95F4\u7684\u5D4C\u5957\u5173\u7CFB\u3002\u5728\u8D85\u65F6\u5904\u7406\u7A0B\u5E8F\u6267\u884C\u65F6\u548C\u62D2\u7EDD\u671F\u7EA6\u65F6\uFF0C\u6211\u4EEC\u770B\u5230\u7684\u9519\u8BEF\u4FE1\u606F\u5305\u542B\u5D4C\u5957\u51FD\u6570\u7684\u6807\u8BC6\u7B26\uFF0C\u90A3\u662F\u88AB\u8C03\u7528\u4EE5\u521B\u5EFA\u6700\u521D\u671F\u7EA6\u5B9E\u4F8B\u7684\u51FD\u6570\u3002\u53EF\u662F\uFF0C\u6211\u4EEC\u77E5\u9053\u8FD9\u4E9B\u51FD\u6570\u5DF2\u7ECF\u8FD4\u56DE\u4E86\uFF0C\u56E0\u6B64\u6808\u8FFD\u8E2A\u4FE1\u606F\u4E2D\u4E0D\u5E94\u8BE5\u770B\u5230\u5B83\u4EEC\u3002</p><p>\u7B54\u6848\u5F88\u7B80\u5355\uFF0C\u8FD9\u662F\u56E0\u4E3A JavaScript \u5F15\u64CE\u4F1A\u5728\u521B\u5EFA\u671F\u7EA6\u65F6\u5C3D\u53EF\u80FD\u4FDD\u7559\u5B8C\u6574\u7684\u8C03\u7528\u6808\u3002\u5728\u629B\u51FA\u9519\u8BEF\u65F6\uFF0C\u8C03\u7528\u6808\u53EF\u4EE5\u7531\u8FD0\u884C\u65F6\u7684\u9519\u8BEF\u5904\u7406\u903B\u8F91\u83B7\u53D6\uFF0C\u56E0\u800C\u5C31\u4F1A\u51FA\u73B0\u5728\u6808\u8FFD\u8E2A\u4FE1\u606F\u4E2D\u3002\u5F53\u7136\uFF0C\u8FD9\u610F\u5473\u7740\u6808\u8FFD\u8E2A\u4FE1\u606F\u4F1A\u5360\u7528\u5185\u5B58\uFF0C\u4ECE\u800C\u5E26\u6765\u4E00\u4E9B\u8BA1\u7B97\u548C\u5B58\u50A8\u6210\u672C\u3002\u5982\u679C\u5728\u524D\u9762\u7684\u4F8B\u5B50\u4E2D\u4F7F\u7528\u7684\u662F\u5F02\u6B65\u51FD\u6570\uFF0C\u90A3\u53C8\u4F1A\u600E\u6837\u5462\uFF1F\u6BD4\u5982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">fooPromiseExecutor</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span>reject<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span>fooPromiseExecutor<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Uncaught (in promise) bar</span>
<span class="token comment">// foo</span>
<span class="token comment">// async function (async)</span>
<span class="token comment">// foo</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u6837\u4E00\u6539\uFF0C\u6808\u8FFD\u8E2A\u4FE1\u606F\u5C31\u51C6\u786E\u5730\u53CD\u6620\u4E86\u5F53\u524D\u7684\u8C03\u7528\u6808\u3002fooPromiseExecutor()\u5DF2\u7ECF\u8FD4\u56DE\uFF0C\u6240\u4EE5\u5B83\u4E0D\u5728\u9519\u8BEF\u4FE1\u606F\u4E2D\u3002\u4F46 foo()\u6B64\u65F6\u88AB\u6302\u8D77\u4E86\uFF0C\u5E76\u6CA1\u6709\u9000\u51FA\u3002JavaScript \u8FD0\u884C\u65F6\u53EF\u4EE5\u7B80\u5355\u5730\u5728\u5D4C\u5957\u51FD\u6570\u4E2D\u5B58\u50A8\u6307\u5411\u5305\u542B\u51FD\u6570\u7684\u6307\u9488\uFF0C\u5C31\u8DDF\u5BF9\u5F85\u540C\u6B65\u51FD\u6570\u8C03\u7528\u6808\u4E00\u6837\u3002\u8FD9\u4E2A\u6307\u9488\u5B9E\u9645\u4E0A\u5B58\u50A8\u5728\u5185\u5B58\u4E2D\uFF0C\u53EF\u7528\u4E8E\u5728\u51FA\u9519\u65F6\u751F\u6210\u6808\u8FFD\u8E2A\u4FE1\u606F\u3002\u8FD9\u6837\u5C31\u4E0D\u4F1A\u50CF\u4E4B\u524D\u7684\u4F8B\u5B50\u90A3\u6837\u5E26\u6765\u989D\u5916\u7684\u6D88\u8017\uFF0C\u56E0\u6B64\u5728\u91CD\u89C6\u6027\u80FD\u7684\u5E94\u7528\u4E2D\u662F\u53EF\u4EE5\u4F18\u5148\u8003\u8651\u7684\u3002</p><h2 id="_11-4-\u5C0F\u7ED3" tabindex="-1"><a class="header-anchor" href="#_11-4-\u5C0F\u7ED3" aria-hidden="true">#</a> 11.4 \u5C0F\u7ED3</h2><p>\u957F\u671F\u4EE5\u6765\uFF0C\u638C\u63E1\u5355\u7EBF\u7A0B JavaScript \u8FD0\u884C\u65F6\u7684\u5F02\u6B65\u884C\u4E3A\u4E00\u76F4\u90FD\u662F\u4E2A\u8270\u5DE8\u7684\u4EFB\u52A1\u3002\u968F\u7740 ES6 \u65B0\u589E\u4E86\u671F\u7EA6\u548C ES8 \u65B0\u589E\u4E86\u5F02\u6B65\u51FD\u6570\uFF0CECMAScript \u7684\u5F02\u6B65\u7F16\u7A0B\u7279\u6027\u6709\u4E86\u957F\u8DB3\u7684\u8FDB\u6B65\u3002\u901A\u8FC7\u671F\u7EA6\u548C async/await\uFF0C\u4E0D\u4EC5\u53EF\u4EE5\u5B9E\u73B0\u4E4B\u524D\u96BE\u4EE5\u5B9E\u73B0\u6216\u4E0D\u53EF\u80FD\u5B9E\u73B0\u7684\u4EFB\u52A1\uFF0C\u800C\u4E14\u4E5F\u80FD\u5199\u51FA\u66F4\u6E05\u6670\u3001\u7B80\u6D01\uFF0C\u5E76\u4E14\u5BB9\u6613\u7406\u89E3\u3001\u8C03\u8BD5\u7684\u4EE3\u7801\u3002</p><p>\u671F\u7EA6\u7684\u4E3B\u8981\u529F\u80FD\u662F\u4E3A\u5F02\u6B65\u4EE3\u7801\u63D0\u4F9B\u4E86\u6E05\u6670\u7684\u62BD\u8C61\u3002\u53EF\u4EE5\u7528\u671F\u7EA6\u8868\u793A\u5F02\u6B65\u6267\u884C\u7684\u4EE3\u7801\u5757\uFF0C\u4E5F\u53EF\u4EE5\u7528\u671F\u7EA6\u8868\u793A\u5F02\u6B65\u8BA1\u7B97\u7684\u503C\u3002\u5728\u9700\u8981\u4E32\u884C\u5F02\u6B65\u4EE3\u7801\u65F6\uFF0C\u671F\u7EA6\u7684\u4EF7\u503C\u6700\u4E3A\u7A81\u51FA\u3002\u4F5C\u4E3A\u53EF\u5851\u6027\u6781\u5F3A\u7684\u4E00\u79CD\u7ED3\u6784\uFF0C\u671F\u7EA6\u53EF\u4EE5\u88AB\u5E8F\u5217\u5316\u3001\u8FDE\u9501\u4F7F\u7528\u3001\u590D\u5408\u3001\u6269\u5C55\u548C\u91CD\u7EC4\u3002</p><p>\u5F02\u6B65\u51FD\u6570\u662F\u5C06\u671F\u7EA6\u5E94\u7528\u4E8E JavaScript \u51FD\u6570\u7684\u7ED3\u679C\u3002\u5F02\u6B65\u51FD\u6570\u53EF\u4EE5\u6682\u505C\u6267\u884C\uFF0C\u800C\u4E0D\u963B\u585E\u4E3B\u7EBF\u7A0B\u3002\u65E0\u8BBA\u662F\u7F16\u5199\u57FA\u4E8E\u671F\u7EA6\u7684\u4EE3\u7801\uFF0C\u8FD8\u662F\u7EC4\u7EC7\u4E32\u884C\u6216\u5E73\u884C\u6267\u884C\u7684\u5F02\u6B65\u4EE3\u7801\uFF0C\u4F7F\u7528\u5F02\u6B65\u51FD\u6570\u90FD\u975E\u5E38\u5F97\u5FC3\u5E94\u624B\u3002\u5F02\u6B65\u51FD\u6570\u53EF\u4EE5\u8BF4\u662F\u73B0\u4EE3 JavaScript \u5DE5\u5177\u7BB1\u4E2D\u6700\u91CD\u8981\u7684\u5DE5\u5177\u4E4B\u4E00\u3002</p>`,293),e=[o];function c(u,l){return s(),a("div",null,e)}var k=n(p,[["render",c],["__file","\u7B2C11\u7AE0_\u671F\u7EA6\u4E0E\u5F02\u6B65\u51FD\u6570.html.vue"]]);export{k as default};
