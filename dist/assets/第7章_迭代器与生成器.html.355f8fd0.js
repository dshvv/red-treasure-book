import{_ as n,o as s,c as a,d as t}from"./app.c7f752d7.js";const p={},o=t(`<p>\u672C\u7AE0\u5185\u5BB9\uFF1A\u7406\u89E3\u8FED\u4EE3\uFF0C\u8FED\u4EE3\u5668\u6A21\u5F0F\uFF0C\u751F\u6210\u5668</p><p>\u8FED\u4EE3\u7684\u82F1\u6587\u201Citeration\u201D\u6E90\u81EA\u62C9\u4E01\u6587 itero\uFF0C\u610F\u601D\u662F\u201C\u91CD\u590D\u201D\u6216\u201C\u518D\u6765\u201D\u3002\u5728\u8F6F\u4EF6\u5F00\u53D1\u9886\u57DF\uFF0C\u201C\u8FED\u4EE3\u201D\u7684\u610F\u601D\u662F\u6309\u7167\u987A\u5E8F\u53CD\u590D\u591A\u6B21\u6267\u884C\u4E00\u6BB5\u7A0B\u5E8F\uFF0C\u901A\u5E38\u4F1A\u6709\u660E\u786E\u7684\u7EC8\u6B62\u6761\u4EF6\u3002 ECMAScript 6 \u89C4\u8303\u65B0\u589E\u4E86\u4E24\u4E2A\u9AD8\u7EA7\u7279\u6027\uFF1A\u8FED\u4EE3\u5668\u548C\u751F\u6210\u5668\u3002\u4F7F\u7528\u8FD9\u4E24\u4E2A\u7279\u6027\uFF0C\u80FD\u591F\u66F4\u6E05\u6670\u3001\u9AD8\u6548\u3001\u65B9\u4FBF\u5730\u5B9E\u73B0\u8FED\u4EE3\u3002</p><h2 id="_7-1-\u7406\u89E3\u8FED\u4EE3" tabindex="-1"><a class="header-anchor" href="#_7-1-\u7406\u89E3\u8FED\u4EE3" aria-hidden="true">#</a> 7.1 \u7406\u89E3\u8FED\u4EE3</h2><p>\u5728 JavaScript \u4E2D\uFF0C\u8BA1\u6570\u5FAA\u73AF\u5C31\u662F\u4E00\u79CD\u6700\u7B80\u5355\u7684\u8FED\u4EE3\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5FAA\u73AF\u662F\u8FED\u4EE3\u673A\u5236\u7684\u57FA\u7840\uFF0C\u8FD9\u662F\u56E0\u4E3A\u5B83\u53EF\u4EE5\u6307\u5B9A\u8FED\u4EE3\u7684\u6B21\u6570\uFF0C\u4EE5\u53CA\u6BCF\u6B21\u8FED\u4EE3\u8981\u6267\u884C\u4EC0\u4E48\u64CD\u4F5C\u3002\u6BCF\u6B21\u5FAA\u73AF\u90FD\u4F1A\u5728\u4E0B\u4E00\u6B21\u8FED\u4EE3\u5F00\u59CB\u4E4B\u524D\u5B8C\u6210\uFF0C\u800C\u6BCF\u6B21\u8FED\u4EE3\u7684\u987A\u5E8F\u90FD\u662F\u4E8B\u5148\u5B9A\u4E49\u597D\u7684\u3002</p><p>\u8FED\u4EE3\u4F1A\u5728\u4E00\u4E2A\u6709\u5E8F\u96C6\u5408\u4E0A\u8FDB\u884C\u3002\uFF08\u201C\u6709\u5E8F\u201D\u53EF\u4EE5\u7406\u89E3\u4E3A\u96C6\u5408\u4E2D\u6240\u6709\u9879\u90FD\u53EF\u4EE5\u6309\u7167\u65E2\u5B9A\u7684\u987A\u5E8F\u88AB\u904D\u5386\u5230\uFF0C\u7279\u522B\u662F\u5F00\u59CB\u548C\u7ED3\u675F\u9879\u6709\u660E\u786E\u7684\u5B9A\u4E49\u3002\uFF09\u6570\u7EC4\u662F JavaScript \u4E2D\u6709\u5E8F\u96C6\u5408\u7684\u6700\u5178\u578B\u4F8B\u5B50\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> collection <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;baz&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> index <span class="token operator">&lt;</span> collection<span class="token punctuation">.</span>length<span class="token punctuation">;</span> <span class="token operator">++</span>index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>collection<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56E0\u4E3A\u6570\u7EC4\u6709\u5DF2\u77E5\u7684\u957F\u5EA6\uFF0C\u4E14\u6570\u7EC4\u6BCF\u4E00\u9879\u90FD\u53EF\u4EE5\u901A\u8FC7\u7D22\u5F15\u83B7\u53D6\uFF0C\u6240\u4EE5\u6574\u4E2A\u6570\u7EC4\u53EF\u4EE5\u901A\u8FC7\u9012\u589E\u7D22\u5F15\u6765\u904D\u5386\u3002<br> \u7531\u4E8E\u5982\u4E0B\u539F\u56E0\uFF0C\u901A\u8FC7\u8FD9\u79CD\u5FAA\u73AF\u6765\u6267\u884C\u4F8B\u7A0B\u5E76\u4E0D\u7406\u60F3\u3002</p><ul><li>\u8FED\u4EE3\u4E4B\u524D\u9700\u8981\u4E8B\u5148\u77E5\u9053\u5982\u4F55\u4F7F\u7528\u6570\u636E\u7ED3\u6784\u3002\u6570\u7EC4\u4E2D\u7684\u6BCF\u4E00\u9879\u90FD\u53EA\u80FD\u5148\u901A\u8FC7\u5F15\u7528\u53D6\u5F97\u6570\u7EC4\u5BF9\u8C61\uFF0C\u7136\u540E\u518D\u901A\u8FC7[]\u64CD\u4F5C\u7B26\u53D6\u5F97\u7279\u5B9A\u7D22\u5F15\u4F4D\u7F6E\u4E0A\u7684\u9879\u3002\u8FD9\u79CD\u60C5\u51B5\u5E76\u4E0D\u9002\u7528\u4E8E\u6240\u6709\u6570\u636E\u7ED3\u6784\u3002</li><li>\u904D\u5386\u987A\u5E8F\u5E76\u4E0D\u662F\u6570\u636E\u7ED3\u6784\u56FA\u6709\u7684\u3002\u901A\u8FC7\u9012\u589E\u7D22\u5F15\u6765\u8BBF\u95EE\u6570\u636E\u662F\u7279\u5B9A\u4E8E\u6570\u7EC4\u7C7B\u578B\u7684\u65B9\u5F0F\uFF0C\u5E76\u4E0D\u9002\u7528\u4E8E\u5176\u4ED6\u5177\u6709\u9690\u5F0F\u987A\u5E8F\u7684\u6570\u636E\u7ED3\u6784\u3002</li></ul><p>ES5 \u65B0\u589E\u4E86 Array.prototype.forEach()\u65B9\u6CD5\uFF0C\u5411\u901A\u7528\u8FED\u4EE3\u9700\u6C42\u8FC8\u8FDB\u4E86\u4E00\u6B65\uFF08\u4F46\u4ECD\u7136\u4E0D\u591F\u7406\u60F3\uFF09\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> collection <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;baz&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
collection<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// foo</span>
<span class="token comment">// bar</span>
<span class="token comment">// baz</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u65B9\u6CD5\u89E3\u51B3\u4E86\u5355\u72EC\u8BB0\u5F55\u7D22\u5F15\u548C\u901A\u8FC7\u6570\u7EC4\u5BF9\u8C61\u53D6\u5F97\u503C\u7684\u95EE\u9898\u3002\u4E0D\u8FC7\uFF0C\u6CA1\u6709\u529E\u6CD5\u6807\u8BC6\u8FED\u4EE3\u4F55\u65F6\u7EC8\u6B62\u3002\u56E0\u6B64\u8FD9\u4E2A\u65B9\u6CD5\u53EA\u9002\u7528\u4E8E\u6570\u7EC4\uFF0C\u800C\u4E14\u56DE\u8C03\u7ED3\u6784\u4E5F\u6BD4\u8F83\u7B28\u62D9\u3002</p><p>\u5728 ECMAScript \u8F83\u65E9\u7684\u7248\u672C\u4E2D\uFF0C\u6267\u884C\u8FED\u4EE3\u5FC5\u987B\u4F7F\u7528\u5FAA\u73AF\u6216\u5176\u4ED6\u8F85\u52A9\u7ED3\u6784\u3002\u968F\u7740\u4EE3\u7801\u91CF\u589E\u52A0\uFF0C\u4EE3\u7801\u4F1A\u53D8\u5F97\u8D8A\u53D1\u6DF7\u4E71\u3002\u5F88\u591A\u8BED\u8A00\u90FD\u901A\u8FC7\u539F\u751F\u8BED\u8A00\u7ED3\u6784\u89E3\u51B3\u4E86\u8FD9\u4E2A\u95EE\u9898\uFF0C\u5F00\u53D1\u8005\u65E0\u987B\u4E8B\u5148\u77E5\u9053\u5982\u4F55\u8FED\u4EE3\u5C31\u80FD\u5B9E\u73B0 \u8FED\u4EE3\u64CD\u4F5C\u3002\u8FD9\u4E2A\u89E3\u51B3\u65B9\u6848\u5C31\u662F\u8FED\u4EE3\u5668\u6A21\u5F0F\u3002Python\u3001Java\u3001C++\uFF0C\u8FD8\u6709\u5176\u4ED6\u5F88\u591A\u8BED\u8A00\u90FD\u5BF9\u8FD9\u4E2A\u6A21\u5F0F\u63D0\u4F9B\u4E86\u5B8C\u5907\u7684\u652F\u6301\u3002JavaScript \u5728 ECMAScript 6 \u4EE5\u540E\u4E5F\u652F\u6301\u4E86\u8FED\u4EE3\u5668\u6A21\u5F0F\u3002</p><h2 id="_7-2-\u8FED\u4EE3\u5668\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#_7-2-\u8FED\u4EE3\u5668\u6A21\u5F0F" aria-hidden="true">#</a> 7.2 \u8FED\u4EE3\u5668\u6A21\u5F0F</h2><p>\u8FED\u4EE3\u5668\u6A21\u5F0F\uFF08\u7279\u522B\u662F\u5728 ECMAScript \u8FD9\u4E2A\u8BED\u5883\u4E0B\uFF09\u63CF\u8FF0\u4E86\u4E00\u4E2A\u65B9\u6848\uFF0C\u5373\u53EF\u4EE5\u628A\u6709\u4E9B\u7ED3\u6784\u79F0\u4E3A\u201C\u53EF\u8FED\u4EE3\u5BF9\u8C61\u201D\uFF08iterable\uFF09\uFF0C\u56E0\u4E3A\u5B83\u4EEC\u5B9E\u73B0\u4E86\u6B63\u5F0F\u7684 Iterable \u63A5\u53E3\uFF0C\u800C\u4E14\u53EF\u4EE5\u901A\u8FC7\u8FED\u4EE3\u5668 Iterator \u6D88\u8D39\u3002</p><p>\u53EF\u8FED\u4EE3\u5BF9\u8C61\u662F\u4E00\u79CD\u62BD\u8C61\u7684\u8BF4\u6CD5\u3002\u57FA\u672C\u4E0A\uFF0C\u53EF\u4EE5\u628A\u53EF\u8FED\u4EE3\u5BF9\u8C61\u7406\u89E3\u6210\u6570\u7EC4\u6216\u96C6\u5408\u8FD9\u6837\u7684\u96C6\u5408\u7C7B\u578B\u7684\u5BF9\u8C61\u3002\u5B83\u4EEC\u5305\u542B\u7684\u5143\u7D20\u90FD\u662F\u6709\u9650\u7684\uFF0C\u800C\u4E14\u90FD\u5177\u6709\u65E0\u6B67\u4E49\u7684\u904D\u5386\u987A\u5E8F\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u6570\u7EC4\u7684\u5143\u7D20\u662F\u6709\u9650\u7684</span>
<span class="token comment">// \u9012\u589E\u7D22\u5F15\u53EF\u4EE5\u6309\u5E8F\u8BBF\u95EE\u6BCF\u4E2A\u5143\u7D20</span>
<span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// \u96C6\u5408\u7684\u5143\u7D20\u662F\u6709\u9650\u7684</span>
<span class="token comment">// \u53EF\u4EE5\u6309\u63D2\u5165\u987A\u5E8F\u8BBF\u95EE\u6BCF\u4E2A\u5143\u7D20</span>
<span class="token keyword">let</span> set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0D\u8FC7\uFF0C\u53EF\u8FED\u4EE3\u5BF9\u8C61\u4E0D\u4E00\u5B9A\u662F\u96C6\u5408\u5BF9\u8C61\uFF0C\u4E5F\u53EF\u4EE5\u662F\u4EC5\u4EC5\u5177\u6709\u7C7B\u4F3C\u6570\u7EC4\u884C\u4E3A\u7684\u5176\u4ED6\u6570\u636E\u7ED3\u6784\uFF0C\u6BD4\u5982\u672C\u7AE0\u5F00\u5934\u63D0\u5230\u7684\u8BA1\u6570\u5FAA\u73AF\u3002\u8BE5\u5FAA\u73AF\u4E2D\u751F\u6210\u7684\u503C\u662F\u6682\u65F6\u6027\u7684\uFF0C\u4F46\u5FAA\u73AF\u672C\u8EAB\u662F\u5728\u6267\u884C\u8FED\u4EE3\u3002\u8BA1\u6570\u5FAA\u73AF\u548C\u6570\u7EC4\u90FD\u5177\u6709\u53EF\u8FED\u4EE3\u5BF9\u8C61\u7684\u884C\u4E3A\u3002</p><div class="custom-container tip"><p class="custom-container-title">\u6CE8\u610F</p><p>\u4E34\u65F6\u6027\u53EF\u8FED\u4EE3\u5BF9\u8C61\u53EF\u4EE5\u5B9E\u73B0\u4E3A\u751F\u6210\u5668\uFF0C\u672C\u7AE0\u540E\u9762\u4F1A\u8BA8\u8BBA\u3002</p></div><p>\u4EFB\u4F55\u5B9E\u73B0 Iterable \u63A5\u53E3\u7684\u6570\u636E\u7ED3\u6784\u90FD\u53EF\u4EE5\u88AB\u5B9E\u73B0 Iterator \u63A5\u53E3\u7684\u7ED3\u6784\u201C\u6D88\u8D39\u201D\uFF08consume\uFF09\u3002\u8FED\u4EE3\u5668\uFF08iterator\uFF09\u662F\u6309\u9700\u521B\u5EFA\u7684\u4E00\u6B21\u6027\u5BF9\u8C61\u3002\u6BCF\u4E2A\u8FED\u4EE3\u5668\u90FD\u4F1A\u5173\u8054\u4E00\u4E2A\u53EF\u8FED\u4EE3\u5BF9\u8C61\uFF0C\u800C\u8FED\u4EE3\u5668\u4F1A\u66B4\u9732\u8FED\u4EE3\u5176\u5173\u8054\u53EF\u8FED\u4EE3\u5BF9\u8C61\u7684 API\u3002\u8FED\u4EE3\u5668\u65E0\u987B\u4E86\u89E3\u4E0E\u5176\u5173\u8054\u7684\u53EF\u8FED\u4EE3\u5BF9\u8C61\u7684\u7ED3\u6784\uFF0C\u53EA\u9700\u8981\u77E5\u9053\u5982\u4F55\u53D6\u5F97\u8FDE\u7EED\u7684\u503C\u3002\u8FD9\u79CD\u6982\u5FF5\u4E0A\u7684\u5206\u79BB\u6B63\u662F Iterable \u548C Iterator \u7684\u5F3A\u5927\u4E4B\u5904</p><h3 id="_7-2-1-\u53EF\u8FED\u4EE3\u534F\u8BAE" tabindex="-1"><a class="header-anchor" href="#_7-2-1-\u53EF\u8FED\u4EE3\u534F\u8BAE" aria-hidden="true">#</a> 7.2.1 \u53EF\u8FED\u4EE3\u534F\u8BAE</h3><p>\u5B9E\u73B0 Iterable \u63A5\u53E3\uFF08\u53EF\u8FED\u4EE3\u534F\u8BAE\uFF09\u8981\u6C42\u540C\u65F6\u5177\u5907\u4E24\u79CD\u80FD\u529B\uFF1A\u652F\u6301\u8FED\u4EE3\u7684\u81EA\u6211\u8BC6\u522B\u80FD\u529B\u548C\u521B\u5EFA\u5B9E\u73B0 Iterator \u63A5\u53E3\u7684\u5BF9\u8C61\u7684\u80FD\u529B\u3002\u5728 ECMAScript \u4E2D\uFF0C\u8FD9\u610F\u5473\u7740\u5FC5\u987B\u66B4\u9732\u4E00\u4E2A\u5C5E\u6027\u4F5C\u4E3A\u201C\u9ED8\u8BA4\u8FED\u4EE3\u5668\u201D\uFF0C\u800C\u4E14\u8FD9\u4E2A\u5C5E\u6027\u5FC5\u987B\u4F7F\u7528\u7279\u6B8A\u7684 Symbol.iterator \u4F5C\u4E3A\u952E\u3002\u8FD9\u4E2A\u9ED8\u8BA4\u8FED\u4EE3\u5668\u5C5E\u6027\u5FC5\u987B\u5F15\u7528\u4E00\u4E2A\u8FED\u4EE3\u5668\u5DE5\u5382\u51FD\u6570\uFF0C\u8C03\u7528\u8FD9\u4E2A\u5DE5\u5382\u51FD\u6570\u5FC5\u987B\u8FD4\u56DE\u4E00\u4E2A\u65B0\u8FED\u4EE3\u5668\u3002</p><p>\u5F88\u591A\u5185\u7F6E\u7C7B\u578B\u90FD\u5B9E\u73B0\u4E86 Iterable \u63A5\u53E3\uFF1A</p><ul><li>\u5B57\u7B26\u4E32</li><li>\u6570\u7EC4</li><li>\u6620\u5C04</li><li>\u96C6\u5408</li><li>arguments \u5BF9\u8C61</li><li>NodeList \u7B49 DOM \u96C6\u5408\u7C7B\u578B</li></ul><p>\u68C0\u67E5\u662F\u5426\u5B58\u5728\u9ED8\u8BA4\u8FED\u4EE3\u5668\u5C5E\u6027\u53EF\u4EE5\u66B4\u9732\u8FD9\u4E2A\u5DE5\u5382\u51FD\u6570\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// \u8FD9\u4E24\u79CD\u7C7B\u578B\u6CA1\u6709\u5B9E\u73B0\u8FED\u4EE3\u5668\u5DE5\u5382\u51FD\u6570</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// undefined</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// undefined</span>
<span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&quot;abc&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;c&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> els <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u8FD9\u4E9B\u7C7B\u578B\u90FD\u5B9E\u73B0\u4E86\u8FED\u4EE3\u5668\u5DE5\u5382\u51FD\u6570</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// f values() { [native code] }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// f values() { [native code] }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>map<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// f values() { [native code] }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">set</span><span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// f values() { [native code] }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>els<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// f values() { [native code] }</span>
<span class="token comment">// \u8C03\u7528\u8FD9\u4E2A\u5DE5\u5382\u51FD\u6570\u4F1A\u751F\u6210\u4E00\u4E2A\u8FED\u4EE3\u5668</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// StringIterator {}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ArrayIterator {}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>map<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// MapIterator {}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">set</span><span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// SetIterator {}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>els<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ArrayIterator {}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B9E\u9645\u5199\u4EE3\u7801\u8FC7\u7A0B\u4E2D\uFF0C\u4E0D\u9700\u8981\u663E\u5F0F\u8C03\u7528\u8FD9\u4E2A\u5DE5\u5382\u51FD\u6570\u6765\u751F\u6210\u8FED\u4EE3\u5668\u3002\u5B9E\u73B0\u53EF\u8FED\u4EE3\u534F\u8BAE\u7684\u6240\u6709\u7C7B\u578B\u90FD\u4F1A\u81EA\u52A8\u517C\u5BB9\u63A5\u6536\u53EF\u8FED\u4EE3\u5BF9\u8C61\u7684\u4EFB\u4F55\u8BED\u8A00\u7279\u6027\u3002\u63A5\u6536\u53EF\u8FED\u4EE3\u5BF9\u8C61\u7684\u539F\u751F\u8BED\u8A00\u7279\u6027\u5305\u62EC\uFF1A</p><ul><li>for-of \u5FAA\u73AF</li><li>\u6570\u7EC4\u89E3\u6784</li><li>\u6269\u5C55\u64CD\u4F5C\u7B26</li><li>Array.from()</li><li>\u521B\u5EFA\u96C6\u5408</li><li>\u521B\u5EFA\u6620\u5C04</li><li>Promise.all()\u63A5\u6536\u7531\u671F\u7EA6\u7EC4\u6210\u7684\u53EF\u8FED\u4EE3\u5BF9\u8C61</li><li>Promise.race()\u63A5\u6536\u7531\u671F\u7EA6\u7EC4\u6210\u7684\u53EF\u8FED\u4EE3\u5BF9\u8C61</li><li>yield*\u64CD\u4F5C\u7B26\uFF0C\u5728\u751F\u6210\u5668\u4E2D\u4F7F\u7528</li></ul><p>\u8FD9\u4E9B\u539F\u751F\u8BED\u8A00\u7ED3\u6784\u4F1A\u5728\u540E\u53F0\u8C03\u7528\u63D0\u4F9B\u7684\u53EF\u8FED\u4EE3\u5BF9\u8C61\u7684\u8FD9\u4E2A\u5DE5\u5382\u51FD\u6570\uFF0C\u4ECE\u800C\u521B\u5EFA\u4E00\u4E2A\u8FED\u4EE3\u5668\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;bar&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;baz&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// for-of \u5FAA\u73AF</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> el <span class="token keyword">of</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// bar</span>
<span class="token comment">// baz</span>
<span class="token comment">// \u6570\u7EC4\u89E3\u6784</span>
<span class="token keyword">let</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// foo, bar, baz</span>
<span class="token comment">// \u6269\u5C55\u64CD\u4F5C\u7B26</span>
<span class="token keyword">let</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>arr<span class="token punctuation">]</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&#39;foo&#39;, &#39;bar&#39;, &#39;baz&#39;]</span>
<span class="token comment">// Array.from()</span>
<span class="token keyword">let</span> arr3 <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr3<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [&#39;foo&#39;, &#39;bar&#39;, &#39;baz&#39;]</span>
<span class="token comment">// Set \u6784\u9020\u51FD\u6570</span>
<span class="token keyword">let</span> set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>set<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Set(3) {&#39;foo&#39;, &#39;bar&#39;, &#39;baz&#39;}</span>
<span class="token comment">// Map \u6784\u9020\u51FD\u6570</span>
<span class="token keyword">let</span> pairs <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>x<span class="token punctuation">,</span> i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>pairs<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [[&#39;foo&#39;, 0], [&#39;bar&#39;, 1], [&#39;baz&#39;, 2]]</span>
<span class="token keyword">let</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span>pairs<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Map(3) { &#39;foo&#39;=&gt;0, &#39;bar&#39;=&gt;1, &#39;baz&#39;=&gt;2 }</span>
\u5982\u679C\u5BF9\u8C61\u539F\u578B\u94FE\u4E0A\u7684\u7236\u7C7B\u5B9E\u73B0\u4E86 Iterable \u63A5\u53E3\uFF0C\u90A3\u8FD9\u4E2A\u5BF9\u8C61\u4E5F\u5C31\u5B9E\u73B0\u4E86\u8FD9\u4E2A\u63A5\u53E3\uFF1A
<span class="token keyword">class</span> <span class="token class-name">FooArray</span> <span class="token keyword">extends</span> <span class="token class-name">Array</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">let</span> fooArr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FooArray</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;bar&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;baz&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> el <span class="token keyword">of</span> fooArr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// foo</span>
<span class="token comment">// bar</span>
<span class="token comment">// baz</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-2-2-\u8FED\u4EE3\u5668\u534F\u8BAE" tabindex="-1"><a class="header-anchor" href="#_7-2-2-\u8FED\u4EE3\u5668\u534F\u8BAE" aria-hidden="true">#</a> 7.2.2 \u8FED\u4EE3\u5668\u534F\u8BAE</h3><p>\u8FED\u4EE3\u5668\u662F\u4E00\u79CD\u4E00\u6B21\u6027\u4F7F\u7528\u7684\u5BF9\u8C61\uFF0C\u7528\u4E8E\u8FED\u4EE3\u4E0E\u5176\u5173\u8054\u7684\u53EF\u8FED\u4EE3\u5BF9\u8C61\u3002\u8FED\u4EE3\u5668 API \u4F7F\u7528 next()\u65B9\u6CD5\u5728\u53EF\u8FED\u4EE3\u5BF9\u8C61\u4E2D\u904D\u5386\u6570\u636E\u3002\u6BCF\u6B21\u6210\u529F\u8C03\u7528 next()\uFF0C\u90FD\u4F1A\u8FD4\u56DE\u4E00\u4E2A IteratorResult \u5BF9\u8C61\uFF0C\u5176\u4E2D\u5305\u542B\u8FED\u4EE3\u5668\u8FD4\u56DE\u7684\u4E0B\u4E00\u4E2A\u503C\u3002\u82E5\u4E0D\u8C03\u7528 next()\uFF0C\u5219\u65E0\u6CD5\u77E5\u9053\u8FED\u4EE3\u5668\u7684\u5F53\u524D\u4F4D\u7F6E\u3002</p><p>next()\u65B9\u6CD5\u8FD4\u56DE\u7684\u8FED\u4EE3\u5668\u5BF9\u8C61 IteratorResult \u5305\u542B\u4E24\u4E2A\u5C5E\u6027\uFF1Adone \u548C value\u3002done \u662F\u4E00\u4E2A\u5E03\u5C14\u503C\uFF0C\u8868\u793A\u662F\u5426\u8FD8\u53EF\u4EE5\u518D\u6B21\u8C03\u7528 next()\u53D6\u5F97\u4E0B\u4E00\u4E2A\u503C\uFF1Bvalue \u5305\u542B\u53EF\u8FED\u4EE3\u5BF9\u8C61\u7684\u4E0B\u4E00\u4E2A\u503C\uFF08done \u4E3A false\uFF09\uFF0C\u6216\u8005 undefined\uFF08done \u4E3A true\uFF09\u3002done: true \u72B6\u6001\u79F0\u4E3A\u201C\u8017\u5C3D\u201D\u3002\u53EF\u4EE5\u901A\u8FC7\u4EE5\u4E0B\u7B80\u5355\u7684\u6570\u7EC4\u6765\u6F14\u793A\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u53EF\u8FED\u4EE3\u5BF9\u8C61</span>
<span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">// \u8FED\u4EE3\u5668\u5DE5\u5382\u51FD\u6570</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// f values() { [native code] }</span>
<span class="token comment">// \u8FED\u4EE3\u5668</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ArrayIterator {}</span>
<span class="token comment">// \u6267\u884C\u8FED\u4EE3</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { done: false, value: &#39;foo&#39; }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { done: false, value: &#39;bar&#39; }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { done: true, value: undefined }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u901A\u8FC7\u521B\u5EFA\u8FED\u4EE3\u5668\u5E76\u8C03\u7528 next()\u65B9\u6CD5\u6309\u987A\u5E8F\u8FED\u4EE3\u4E86\u6570\u7EC4\uFF0C\u76F4\u81F3\u4E0D\u518D\u4EA7\u751F\u65B0\u503C\u3002\u8FED\u4EE3\u5668\u5E76\u4E0D\u77E5\u9053\u600E\u4E48\u4ECE\u53EF\u8FED\u4EE3\u5BF9\u8C61\u4E2D\u53D6\u5F97\u4E0B\u4E00\u4E2A\u503C\uFF0C\u4E5F\u4E0D\u77E5\u9053\u53EF\u8FED\u4EE3\u5BF9\u8C61\u6709\u591A\u5927\u3002\u53EA\u8981\u8FED\u4EE3\u5668\u5230\u8FBE done: true \u72B6\u6001\uFF0C\u540E\u7EED\u8C03\u7528 next()\u5C31\u4E00\u76F4\u8FD4\u56DE\u540C\u6837\u7684\u503C\u4E86\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> iter <span class="token operator">=</span> arr<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { done: false, value: &#39;foo&#39; }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { done: true, value: undefined }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { done: true, value: undefined }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { done: true, value: undefined }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6BCF\u4E2A\u8FED\u4EE3\u5668\u90FD\u8868\u793A\u5BF9\u53EF\u8FED\u4EE3\u5BF9\u8C61\u7684\u4E00\u6B21\u6027\u6709\u5E8F\u904D\u5386\u3002\u4E0D\u540C\u8FED\u4EE3\u5668\u7684\u5B9E\u4F8B\u76F8\u4E92\u4E4B\u95F4\u6CA1\u6709\u8054\u7CFB\uFF0C\u53EA\u4F1A\u72EC\u7ACB\u5730\u904D\u5386\u53EF\u8FED\u4EE3\u5BF9\u8C61\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> iter1 <span class="token operator">=</span> arr<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> iter2 <span class="token operator">=</span> arr<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter1<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { done: false, value: &#39;foo&#39; }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter2<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { done: false, value: &#39;foo&#39; }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter2<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { done: false, value: &#39;bar&#39; }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter1<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { done: false, value: &#39;bar&#39; }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FED\u4EE3\u5668\u5E76\u4E0D\u4E0E\u53EF\u8FED\u4EE3\u5BF9\u8C61\u67D0\u4E2A\u65F6\u523B\u7684\u5FEB\u7167\u7ED1\u5B9A\uFF0C\u800C\u4EC5\u4EC5\u662F\u4F7F\u7528\u6E38\u6807\u6765\u8BB0\u5F55\u904D\u5386\u53EF\u8FED\u4EE3\u5BF9\u8C61\u7684\u5386\u7A0B\u3002\u5982\u679C\u53EF\u8FED\u4EE3\u5BF9\u8C61\u5728\u8FED\u4EE3\u671F\u95F4\u88AB\u4FEE\u6539\u4E86\uFF0C\u90A3\u4E48\u8FED\u4EE3\u5668\u4E5F\u4F1A\u53CD\u6620\u76F8\u5E94\u7684\u53D8\u5316\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;baz&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> iter <span class="token operator">=</span> arr<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { done: false, value: &#39;foo&#39; }</span>
<span class="token comment">// \u5728\u6570\u7EC4\u4E2D\u95F4\u63D2\u5165\u503C</span>
arr<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { done: false, value: &#39;bar&#39; }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { done: false, value: &#39;baz&#39; }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { done: true, value: undefined }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">\u6CE8\u610F</p><p>\u8FED\u4EE3\u5668\u7EF4\u62A4\u7740\u4E00\u4E2A\u6307\u5411\u53EF\u8FED\u4EE3\u5BF9\u8C61\u7684\u5F15\u7528\uFF0C\u56E0\u6B64\u8FED\u4EE3\u5668\u4F1A\u963B\u6B62\u5783\u573E\u56DE\u6536\u7A0B\u5E8F\u56DE\u6536\u53EF\u8FED\u4EE3\u5BF9\u8C61\u3002</p></div><p>\u201C\u8FED\u4EE3\u5668\u201D\u7684\u6982\u5FF5\u6709\u65F6\u5019\u5BB9\u6613\u6A21\u7CCA\uFF0C\u56E0\u4E3A\u5B83\u53EF\u4EE5\u6307\u901A\u7528\u7684\u8FED\u4EE3\uFF0C\u4E5F\u53EF\u4EE5\u6307\u63A5\u53E3\uFF0C\u8FD8\u53EF\u4EE5\u6307\u6B63\u5F0F\u7684\u8FED\u4EE3\u5668\u7C7B\u578B\u3002\u4E0B\u9762\u7684\u4F8B\u5B50\u6BD4\u8F83\u4E86\u4E00\u4E2A\u663E\u5F0F\u7684\u8FED\u4EE3\u5668\u5B9E\u73B0\u548C\u4E00\u4E2A\u539F\u751F\u7684\u8FED\u4EE3\u5668\u5B9E\u73B0\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u8FD9\u4E2A\u7C7B\u5B9E\u73B0\u4E86\u53EF\u8FED\u4EE3\u63A5\u53E3\uFF08Iterable\uFF09</span>
<span class="token comment">// \u8C03\u7528\u9ED8\u8BA4\u7684\u8FED\u4EE3\u5668\u5DE5\u5382\u51FD\u6570\u4F1A\u8FD4\u56DE</span>
<span class="token comment">// \u4E00\u4E2A\u5B9E\u73B0\u8FED\u4EE3\u5668\u63A5\u53E3\uFF08Iterator\uFF09\u7684\u8FED\u4EE3\u5668\u5BF9\u8C61</span>
<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&quot;foo&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> f <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u6253\u5370\u51FA\u5B9E\u73B0\u4E86\u8FED\u4EE3\u5668\u63A5\u53E3\u7684\u5BF9\u8C61</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { next: f() {} }</span>
<span class="token comment">// Array \u7C7B\u578B\u5B9E\u73B0\u4E86\u53EF\u8FED\u4EE3\u63A5\u53E3\uFF08Iterable\uFF09</span>
<span class="token comment">// \u8C03\u7528 Array \u7C7B\u578B\u7684\u9ED8\u8BA4\u8FED\u4EE3\u5668\u5DE5\u5382\u51FD\u6570</span>
<span class="token comment">// \u4F1A\u521B\u5EFA\u4E00\u4E2A ArrayIterator \u7684\u5B9E\u4F8B</span>
<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u6253\u5370\u51FA ArrayIterator \u7684\u5B9E\u4F8B</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Array Iterator {}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-2-3-\u81EA\u5B9A\u4E49\u8FED\u4EE3\u5668" tabindex="-1"><a class="header-anchor" href="#_7-2-3-\u81EA\u5B9A\u4E49\u8FED\u4EE3\u5668" aria-hidden="true">#</a> 7.2.3 \u81EA\u5B9A\u4E49\u8FED\u4EE3\u5668</h3><p>\u4E0E Iterable \u63A5\u53E3\u7C7B\u4F3C\uFF0C\u4EFB\u4F55\u5B9E\u73B0 Iterator \u63A5\u53E3\u7684\u5BF9\u8C61\u90FD\u53EF\u4EE5\u4F5C\u4E3A\u8FED\u4EE3\u5668\u4F7F\u7528\u3002\u4E0B\u9762\u8FD9\u4E2A\u4F8B\u5B50\u4E2D\u7684 Counter \u7C7B\u53EA\u80FD\u88AB\u8FED\u4EE3\u4E00\u5B9A\u7684\u6B21\u6570\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Counter</span> <span class="token punctuation">{</span>
  <span class="token comment">// Counter \u7684\u5B9E\u4F8B\u5E94\u8BE5\u8FED\u4EE3 limit \u6B21</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">limit</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>limit <span class="token operator">=</span> limit<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>count <span class="token operator">&lt;=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>limit<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>count<span class="token operator">++</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> counter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Counter</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">of</span> counter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 1</span>
<span class="token comment">// 2</span>
<span class="token comment">// 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u4E2A\u7C7B\u5B9E\u73B0\u4E86 Iterator \u63A5\u53E3\uFF0C\u4F46\u4E0D\u7406\u60F3\u3002\u8FD9\u662F\u56E0\u4E3A\u5B83\u7684\u6BCF\u4E2A\u5B9E\u4F8B\u53EA\u80FD\u88AB\u8FED\u4EE3\u4E00\u6B21\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">of</span> counter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 1</span>
<span class="token comment">// 3</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">of</span> counter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// (nothing logged)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E3A\u4E86\u8BA9\u4E00\u4E2A\u53EF\u8FED\u4EE3\u5BF9\u8C61\u80FD\u591F\u521B\u5EFA\u591A\u4E2A\u8FED\u4EE3\u5668\uFF0C\u5FC5\u987B\u6BCF\u521B\u5EFA\u4E00\u4E2A\u8FED\u4EE3\u5668\u5C31\u5BF9\u5E94\u4E00\u4E2A\u65B0\u8BA1\u6570\u5668\u3002\u4E3A\u6B64\uFF0C\u53EF\u4EE5\u628A\u8BA1\u6570\u5668\u53D8\u91CF\u653E\u5230\u95ED\u5305\u91CC\uFF0C\u7136\u540E\u901A\u8FC7\u95ED\u5305\u8FD4\u56DE\u8FED\u4EE3\u5668\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Counter</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">limit</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>limit <span class="token operator">=</span> limit<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>
      limit <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>limit<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">&lt;=</span> limit<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> count<span class="token operator">++</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token keyword">undefined</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> counter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Counter</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">of</span> counter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 1</span>
<span class="token comment">// 2</span>
<span class="token comment">// 3</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">of</span> counter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 1</span>
<span class="token comment">// 2</span>
<span class="token comment">// 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6BCF\u4E2A\u4EE5\u8FD9\u79CD\u65B9\u5F0F\u521B\u5EFA\u7684\u8FED\u4EE3\u5668\u4E5F\u5B9E\u73B0\u4E86 Iterable \u63A5\u53E3\u3002Symbol.iterator \u5C5E\u6027\u5F15\u7528\u7684\u5DE5\u5382\u51FD\u6570\u4F1A\u8FD4\u56DE\u76F8\u540C\u7684\u8FED\u4EE3\u5668\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;baz&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> iter1 <span class="token operator">=</span> arr<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter1<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// f values() { [native code] }</span>
<span class="token keyword">let</span> iter2 <span class="token operator">=</span> iter1<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>iter1 <span class="token operator">===</span> iter2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56E0\u4E3A\u6BCF\u4E2A\u8FED\u4EE3\u5668\u4E5F\u5B9E\u73B0\u4E86 Iterable \u63A5\u53E3\uFF0C\u6240\u4EE5\u5B83\u4EEC\u53EF\u4EE5\u7528\u5728\u4EFB\u4F55\u671F\u5F85\u53EF\u8FED\u4EE3\u5BF9\u8C61\u7684\u5730\u65B9\uFF0C\u6BD4\u5982 for-of \u5FAA\u73AF\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> iter <span class="token operator">=</span> arr<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> item <span class="token keyword">of</span> arr<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 3</span>
<span class="token comment">// 1</span>
<span class="token comment">// 4</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> item <span class="token keyword">of</span> iter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 3</span>
<span class="token comment">// 1</span>
<span class="token comment">// 4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-2-4-\u63D0\u524D\u7EC8\u6B62\u8FED\u4EE3\u5668" tabindex="-1"><a class="header-anchor" href="#_7-2-4-\u63D0\u524D\u7EC8\u6B62\u8FED\u4EE3\u5668" aria-hidden="true">#</a> 7.2.4 \u63D0\u524D\u7EC8\u6B62\u8FED\u4EE3\u5668</h3><p>\u53EF\u9009\u7684 return()\u65B9\u6CD5\u7528\u4E8E\u6307\u5B9A\u5728\u8FED\u4EE3\u5668\u63D0\u524D\u5173\u95ED\u65F6\u6267\u884C\u7684\u903B\u8F91\u3002\u6267\u884C\u8FED\u4EE3\u7684\u7ED3\u6784\u5728\u60F3\u8BA9\u8FED\u4EE3\u5668\u77E5\u9053\u5B83\u4E0D\u60F3\u904D\u5386\u5230\u53EF\u8FED\u4EE3\u5BF9\u8C61\u8017\u5C3D\u65F6\uFF0C\u5C31\u53EF\u4EE5\u201C\u5173\u95ED\u201D\u8FED\u4EE3\u5668\u3002\u53EF\u80FD\u7684\u60C5\u51B5\u5305\u62EC\uFF1A</p><ul><li>for-of \u5FAA\u73AF\u901A\u8FC7 break\u3001continue\u3001return \u6216 throw \u63D0\u524D\u9000\u51FA\uFF1B</li><li>\u89E3\u6784\u64CD\u4F5C\u5E76\u672A\u6D88\u8D39\u6240\u6709\u503C\u3002</li></ul><p>return()\u65B9\u6CD5\u5FC5\u987B\u8FD4\u56DE\u4E00\u4E2A\u6709\u6548\u7684 IteratorResult \u5BF9\u8C61\u3002\u7B80\u5355\u60C5\u51B5\u4E0B\uFF0C\u53EF\u4EE5\u53EA\u8FD4\u56DE{ done: true }\u3002\u56E0\u4E3A\u8FD9\u4E2A\u8FD4\u56DE\u503C\u53EA\u4F1A\u7528\u5728\u751F\u6210\u5668\u7684\u4E0A\u4E0B\u6587\u4E2D\uFF0C\u6240\u4EE5\u672C\u7AE0\u540E\u9762\u518D\u8BA8\u8BBA\u8FD9\u79CD\u60C5\u51B5\u3002</p><p>\u5982\u4E0B\u9762\u7684\u4EE3\u7801\u6240\u793A\uFF0C\u5185\u7F6E\u8BED\u8A00\u7ED3\u6784\u5728\u53D1\u73B0\u8FD8\u6709\u66F4\u591A\u503C\u53EF\u4EE5\u8FED\u4EE3\uFF0C\u4F46\u4E0D\u4F1A\u6D88\u8D39\u8FD9\u4E9B\u503C\u65F6\uFF0C\u4F1A\u81EA\u52A8\u8C03\u7528 return()\u65B9\u6CD5\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Counter</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">limit</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>limit <span class="token operator">=</span> limit<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> count <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>
      limit <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>limit<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">&lt;=</span> limit<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> count<span class="token operator">++</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token keyword">return</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Exiting early&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> counter1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Counter</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">of</span> counter1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 1</span>
<span class="token comment">// 2</span>
<span class="token comment">// Exiting early</span>
<span class="token keyword">let</span> counter2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Counter</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">try</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">of</span> counter2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token string">&quot;err&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token comment">// 1</span>
<span class="token comment">// 2</span>
<span class="token comment">// Exiting early</span>
<span class="token keyword">let</span> counter3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Counter</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">]</span> <span class="token operator">=</span> counter3<span class="token punctuation">;</span>
<span class="token comment">// Exiting early</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u8FED\u4EE3\u5668\u6CA1\u6709\u5173\u95ED\uFF0C\u5219\u8FD8\u53EF\u4EE5\u7EE7\u7EED\u4ECE\u4E0A\u6B21\u79BB\u5F00\u7684\u5730\u65B9\u7EE7\u7EED\u8FED\u4EE3\u3002\u6BD4\u5982\uFF0C\u6570\u7EC4\u7684\u8FED\u4EE3\u5668\u5C31\u662F\u4E0D\u80FD\u5173\u95ED\u7684\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> iter <span class="token operator">=</span> a<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">of</span> iter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// 1</span>
<span class="token comment">// 2</span>
<span class="token comment">// 3</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">of</span> iter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 4</span>
<span class="token comment">// 5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56E0\u4E3A return()\u65B9\u6CD5\u662F\u53EF\u9009\u7684\uFF0C\u6240\u4EE5\u5E76\u975E\u6240\u6709\u8FED\u4EE3\u5668\u90FD\u662F\u53EF\u5173\u95ED\u7684\u3002\u8981\u77E5\u9053\u67D0\u4E2A\u8FED\u4EE3\u5668\u662F\u5426\u53EF\u5173\u95ED\uFF0C\u53EF\u4EE5\u6D4B\u8BD5\u8FD9\u4E2A\u8FED\u4EE3\u5668\u5B9E\u4F8B\u7684 return \u5C5E\u6027\u662F\u4E0D\u662F\u51FD\u6570\u5BF9\u8C61\u3002\u4E0D\u8FC7\uFF0C\u4EC5\u4EC5\u7ED9\u4E00\u4E2A\u4E0D\u53EF\u5173\u95ED\u7684\u8FED\u4EE3\u5668\u589E\u52A0\u8FD9\u4E2A\u65B9\u6CD5\u5E76\u4E0D\u80FD\u8BA9\u5B83\u53D8\u6210\u53EF\u5173\u95ED\u7684\u3002\u8FD9\u662F\u56E0\u4E3A\u8C03\u7528 return()\u4E0D\u4F1A\u5F3A\u5236\u8FED\u4EE3\u5668\u8FDB\u5165\u5173\u95ED\u72B6\u6001\u3002\u5373\u4FBF\u5982\u6B64\uFF0Creturn()\u65B9\u6CD5\u8FD8\u662F\u4F1A\u88AB\u8C03\u7528\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> iter <span class="token operator">=</span> a<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
iter<span class="token punctuation">.</span><span class="token function-variable function">return</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;Exiting early&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">done</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">of</span> iter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// 1</span>
<span class="token comment">// 2</span>
<span class="token comment">// 3</span>
<span class="token comment">// \u63D0\u524D\u9000\u51FA</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">of</span> iter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 4</span>
<span class="token comment">// 5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-3-\u751F\u6210\u5668" tabindex="-1"><a class="header-anchor" href="#_7-3-\u751F\u6210\u5668" aria-hidden="true">#</a> 7.3 \u751F\u6210\u5668</h2><p>\u751F\u6210\u5668\u662F ECMAScript 6 \u65B0\u589E\u7684\u4E00\u4E2A\u6781\u4E3A\u7075\u6D3B\u7684\u7ED3\u6784\uFF0C\u62E5\u6709\u5728\u4E00\u4E2A\u51FD\u6570\u5757\u5185\u6682\u505C\u548C\u6062\u590D\u4EE3\u7801\u6267\u884C\u7684\u80FD\u529B\u3002\u8FD9\u79CD\u65B0\u80FD\u529B\u5177\u6709\u6DF1\u8FDC\u7684\u5F71\u54CD\uFF0C\u6BD4\u5982\uFF0C\u4F7F\u7528\u751F\u6210\u5668\u53EF\u4EE5\u81EA\u5B9A\u4E49\u8FED\u4EE3\u5668\u548C\u5B9E\u73B0\u534F\u7A0B\u3002</p><h3 id="_7-3-1-\u751F\u6210\u5668\u57FA\u7840" tabindex="-1"><a class="header-anchor" href="#_7-3-1-\u751F\u6210\u5668\u57FA\u7840" aria-hidden="true">#</a> 7.3.1 \u751F\u6210\u5668\u57FA\u7840</h3><p>\u751F\u6210\u5668\u7684\u5F62\u5F0F\u662F\u4E00\u4E2A\u51FD\u6570\uFF0C\u51FD\u6570\u540D\u79F0\u524D\u9762\u52A0\u4E00\u4E2A\u661F\u53F7\uFF08*\uFF09\u8868\u793A\u5B83\u662F\u4E00\u4E2A\u751F\u6210\u5668\u3002\u53EA\u8981\u662F\u53EF\u4EE5\u5B9A\u4E49\u51FD\u6570\u7684\u5730\u65B9\uFF0C\u5C31\u53EF\u4EE5\u5B9A\u4E49\u751F\u6210\u5668\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u751F\u6210\u5668\u51FD\u6570\u58F0\u660E</span>
<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token comment">// \u751F\u6210\u5668\u51FD\u6570\u8868\u8FBE\u5F0F</span>
<span class="token keyword">let</span> <span class="token function-variable function">generatorFn</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// \u4F5C\u4E3A\u5BF9\u8C61\u5B57\u9762\u91CF\u65B9\u6CD5\u7684\u751F\u6210\u5668\u51FD\u6570</span>
<span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token operator">*</span><span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// \u4F5C\u4E3A\u7C7B\u5B9E\u4F8B\u65B9\u6CD5\u7684\u751F\u6210\u5668\u51FD\u6570</span>
<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
  <span class="token operator">*</span><span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u4F5C\u4E3A\u7C7B\u9759\u6001\u65B9\u6CD5\u7684\u751F\u6210\u5668\u51FD\u6570</span>
<span class="token keyword">class</span> <span class="token class-name">Bar</span> <span class="token punctuation">{</span>
  <span class="token keyword">static</span> <span class="token operator">*</span><span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">\u6CE8\u610F</p><p>\u7BAD\u5934\u51FD\u6570\u4E0D\u80FD\u7528\u6765\u5B9A\u4E49\u751F\u6210\u5668\u51FD\u6570\u3002</p></div><p>\u6807\u8BC6\u751F\u6210\u5668\u51FD\u6570\u7684\u661F\u53F7\u4E0D\u53D7\u4E24\u4FA7\u7A7A\u683C\u7684\u5F71\u54CD\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u7B49\u4EF7\u7684\u751F\u6210\u5668\u51FD\u6570\uFF1A</span>
<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFnA</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFnB</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFnC</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token comment">// \u7B49\u4EF7\u7684\u751F\u6210\u5668\u65B9\u6CD5\uFF1A</span>
<span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
  <span class="token operator">*</span><span class="token function">generatorFnD</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token operator">*</span><span class="token function">generatorFnE</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8C03\u7528\u751F\u6210\u5668\u51FD\u6570\u4F1A\u4EA7\u751F\u4E00\u4E2A\u751F\u6210\u5668\u5BF9\u8C61\u3002\u751F\u6210\u5668\u5BF9\u8C61\u4E00\u5F00\u59CB\u5904\u4E8E\u6682\u505C\u6267\u884C\uFF08suspended\uFF09\u7684\u72B6\u6001\u3002\u4E0E\u8FED\u4EE3\u5668\u76F8\u4F3C\uFF0C\u751F\u6210\u5668\u5BF9\u8C61\u4E5F\u5B9E\u73B0\u4E86 Iterator \u63A5\u53E3\uFF0C\u56E0\u6B64\u5177\u6709 next()\u65B9\u6CD5\u3002\u8C03\u7528\u8FD9\u4E2A\u65B9\u6CD5\u4F1A\u8BA9\u751F\u6210\u5668 \u5F00\u59CB\u6216\u6062\u590D\u6267\u884C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">const</span> g <span class="token operator">=</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// generatorFn {&lt;suspended&gt;}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span>next<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// f next() { [native code] }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>next()\u65B9\u6CD5\u7684\u8FD4\u56DE\u503C\u7C7B\u4F3C\u4E8E\u8FED\u4EE3\u5668\uFF0C\u6709\u4E00\u4E2A done \u5C5E\u6027\u548C\u4E00\u4E2A value \u5C5E\u6027\u3002\u51FD\u6570\u4F53\u4E3A\u7A7A\u7684\u751F\u6210\u5668\u51FD\u6570\u4E2D\u95F4\u4E0D\u4F1A\u505C\u7559\uFF0C\u8C03\u7528\u4E00\u6B21 next()\u5C31\u4F1A\u8BA9\u751F\u6210\u5668\u5230\u8FBE done: true \u72B6\u6001\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">let</span> generatorObject <span class="token operator">=</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>generatorObject<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// generatorFn {&lt;suspended&gt;}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>generatorObject<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { done: true, value: undefined }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>value \u5C5E\u6027\u662F\u751F\u6210\u5668\u51FD\u6570\u7684\u8FD4\u56DE\u503C\uFF0C\u9ED8\u8BA4\u503C\u4E3A undefined\uFF0C\u53EF\u4EE5\u901A\u8FC7\u751F\u6210\u5668\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u6307\u5B9A\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token string">&quot;foo&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> generatorObject <span class="token operator">=</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>generatorObject<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// generatorFn {&lt;suspended&gt;}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>generatorObject<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { done: true, value: &#39;foo&#39; }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u751F\u6210\u5668\u51FD\u6570\u53EA\u4F1A\u5728\u521D\u6B21\u8C03\u7528 next()\u65B9\u6CD5\u540E\u5F00\u59CB\u6267\u884C\uFF0C\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;foobar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u521D\u6B21\u8C03\u7528\u751F\u6210\u5668\u51FD\u6570\u5E76\u4E0D\u4F1A\u6253\u5370\u65E5\u5FD7</span>
<span class="token keyword">let</span> generatorObject <span class="token operator">=</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
generatorObject<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// foobar</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u751F\u6210\u5668\u5BF9\u8C61\u5B9E\u73B0\u4E86 Iterable \u63A5\u53E3\uFF0C\u5B83\u4EEC\u9ED8\u8BA4\u7684\u8FED\u4EE3\u5668\u662F\u81EA\u5F15\u7528\u7684\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>generatorFn<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// f* generatorFn() {}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// f [Symbol.iterator]() {native code}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// generatorFn {&lt;suspended&gt;}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// generatorFn {&lt;suspended&gt;}</span>
<span class="token keyword">const</span> g <span class="token operator">=</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g <span class="token operator">===</span> g<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-3-2-\u901A\u8FC7-yield-\u4E2D\u65AD\u6267\u884C" tabindex="-1"><a class="header-anchor" href="#_7-3-2-\u901A\u8FC7-yield-\u4E2D\u65AD\u6267\u884C" aria-hidden="true">#</a> 7.3.2 \u901A\u8FC7 yield \u4E2D\u65AD\u6267\u884C</h3><p>yield \u5173\u952E\u5B57\u53EF\u4EE5\u8BA9\u751F\u6210\u5668\u505C\u6B62\u548C\u5F00\u59CB\u6267\u884C\uFF0C\u4E5F\u662F\u751F\u6210\u5668\u6700\u6709\u7528\u7684\u5730\u65B9\u3002\u751F\u6210\u5668\u51FD\u6570\u5728\u9047\u5230 yield \u5173\u952E\u5B57\u4E4B\u524D\u4F1A\u6B63\u5E38\u6267\u884C\u3002\u9047\u5230\u8FD9\u4E2A\u5173\u952E\u5B57\u540E\uFF0C\u6267\u884C\u4F1A\u505C\u6B62\uFF0C\u51FD\u6570\u4F5C\u7528\u57DF\u7684\u72B6\u6001\u4F1A\u88AB\u4FDD\u7559\u3002\u505C\u6B62\u6267\u884C\u7684\u751F\u6210\u5668\u51FD\u6570\u53EA\u80FD\u901A\u8FC7\u5728\u751F\u6210\u5668\u5BF9\u8C61\u4E0A\u8C03\u7528 next()\u65B9\u6CD5\u6765\u6062\u590D\u6267\u884C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> generatorObject <span class="token operator">=</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>generatorObject<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { done: false, value: undefined }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>generatorObject<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { done: true, value: undefined }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6B64\u65F6\u7684 yield \u5173\u952E\u5B57\u6709\u70B9\u50CF\u51FD\u6570\u7684\u4E2D\u95F4\u8FD4\u56DE\u8BED\u53E5\uFF0C\u5B83\u751F\u6210\u7684\u503C\u4F1A\u51FA\u73B0\u5728 next()\u65B9\u6CD5\u8FD4\u56DE\u7684\u5BF9\u8C61\u91CC\u3002\u901A\u8FC7 yield \u5173\u952E\u5B57\u9000\u51FA\u7684\u751F\u6210\u5668\u51FD\u6570\u4F1A\u5904\u5728 done: false \u72B6\u6001\uFF1B\u901A\u8FC7 return \u5173\u952E\u5B57\u9000\u51FA\u7684\u751F\u6210\u5668\u51FD\u6570\u4F1A\u5904\u4E8E done: true \u72B6\u6001\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token string">&quot;foo&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token string">&quot;baz&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> generatorObject <span class="token operator">=</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>generatorObject<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { done: false, value: &#39;foo&#39; }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>generatorObject<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { done: false, value: &#39;bar&#39; }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>generatorObject<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { done: true, value: &#39;baz&#39; }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u751F\u6210\u5668\u51FD\u6570\u5185\u90E8\u7684\u6267\u884C\u6D41\u7A0B\u4F1A\u9488\u5BF9\u6BCF\u4E2A\u751F\u6210\u5668\u5BF9\u8C61\u533A\u5206\u4F5C\u7528\u57DF\u3002\u5728\u4E00\u4E2A\u751F\u6210\u5668\u5BF9\u8C61\u4E0A\u8C03\u7528 next()\u4E0D\u4F1A\u5F71\u54CD\u5176\u4ED6\u751F\u6210\u5668\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token string">&quot;foo&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token string">&quot;baz&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> generatorObject1 <span class="token operator">=</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> generatorObject2 <span class="token operator">=</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>generatorObject1<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { done: false, value: &#39;foo&#39; }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>generatorObject2<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { done: false, value: &#39;foo&#39; }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>generatorObject2<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { done: false, value: &#39;bar&#39; }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>generatorObject1<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { done: false, value: &#39;bar&#39; }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>yield \u5173\u952E\u5B57\u53EA\u80FD\u5728\u751F\u6210\u5668\u51FD\u6570\u5185\u90E8\u4F7F\u7528\uFF0C\u7528\u5728\u5176\u4ED6\u5730\u65B9\u4F1A\u629B\u51FA\u9519\u8BEF\u3002\u7C7B\u4F3C\u51FD\u6570\u7684 return \u5173\u952E\u5B57\uFF0Cyield \u5173\u952E\u5B57\u5FC5\u987B\u76F4\u63A5\u4F4D\u4E8E\u751F\u6210\u5668\u51FD\u6570\u5B9A\u4E49\u4E2D\uFF0C\u51FA\u73B0\u5728\u5D4C\u5957\u7684\u975E\u751F\u6210\u5668\u51FD\u6570\u4E2D\u4F1A\u629B\u51FA\u8BED\u6CD5\u9519\u8BEF\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u6709\u6548</span>
<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">validGeneratorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u65E0\u6548</span>
<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">invalidGeneratorFnA</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">function</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u65E0\u6548</span>
<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">invalidGeneratorFnB</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token function-variable function">b</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u65E0\u6548</span>
<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">invalidGeneratorFnC</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>1. \u751F\u6210\u5668\u5BF9\u8C61\u4F5C\u4E3A\u53EF\u8FED\u4EE3\u5BF9\u8C61</strong><br> \u5728\u751F\u6210\u5668\u5BF9\u8C61\u4E0A\u663E\u5F0F\u8C03\u7528 next()\u65B9\u6CD5\u7684\u7528\u5904\u5E76\u4E0D\u5927\u3002\u5176\u5B9E\uFF0C\u5982\u679C\u628A\u751F\u6210\u5668\u5BF9\u8C61\u5F53\u6210\u53EF\u8FED\u4EE3\u5BF9\u8C61\uFF0C\u90A3\u4E48\u4F7F\u7528\u8D77\u6765\u4F1A\u66F4\u65B9\u4FBF\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token number">2</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span> <span class="token number">3</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> x <span class="token keyword">of</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 1</span>
<span class="token comment">// 2</span>
<span class="token comment">// 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u9700\u8981\u81EA\u5B9A\u4E49\u8FED\u4EE3\u5BF9\u8C61\u65F6\uFF0C\u8FD9\u6837\u4F7F\u7528\u751F\u6210\u5668\u5BF9\u8C61\u4F1A\u7279\u522B\u6709\u7528\u3002\u6BD4\u5982\uFF0C\u6211\u4EEC\u9700\u8981\u5B9A\u4E49\u4E00\u4E2A\u53EF\u8FED\u4EE3\u5BF9\u8C61\uFF0C\u800C\u5B83\u4F1A\u4EA7\u751F\u4E00\u4E2A\u8FED\u4EE3\u5668\uFF0C\u8FD9\u4E2A\u8FED\u4EE3\u5668\u4F1A\u6267\u884C\u6307\u5B9A\u7684\u6B21\u6570\u3002\u4F7F\u7528\u751F\u6210\u5668\uFF0C\u53EF\u4EE5\u901A\u8FC7\u4E00\u4E2A\u7B80\u5355\u7684\u5FAA\u73AF\u6765\u5B9E\u73B0\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">nTimes</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>n<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> _ <span class="token keyword">of</span> <span class="token function">nTimes</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// foo</span>
<span class="token comment">// foo</span>
<span class="token comment">// foo</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F20\u7ED9\u751F\u6210\u5668\u7684\u51FD\u6570\u53EF\u4EE5\u63A7\u5236\u8FED\u4EE3\u5FAA\u73AF\u7684\u6B21\u6570\u3002\u5728 n \u4E3A 0 \u65F6\uFF0Cwhile \u6761\u4EF6\u4E3A\u5047\uFF0C\u5FAA\u73AF\u9000\u51FA\uFF0C\u751F\u6210\u5668\u51FD\u6570\u8FD4\u56DE\u3002</p><p><strong>2. \u4F7F\u7528 yield \u5B9E\u73B0\u8F93\u5165\u548C\u8F93\u51FA</strong><br> \u9664\u4E86\u53EF\u4EE5\u4F5C\u4E3A\u51FD\u6570\u7684\u4E2D\u95F4\u8FD4\u56DE\u8BED\u53E5\u4F7F\u7528\uFF0Cyield \u5173\u952E\u5B57\u8FD8\u53EF\u4EE5\u4F5C\u4E3A\u51FD\u6570\u7684\u4E2D\u95F4\u53C2\u6570\u4F7F\u7528\u3002\u4E0A\u4E00\u6B21\u8BA9\u751F\u6210\u5668\u51FD\u6570\u6682\u505C\u7684 yield \u5173\u952E\u5B57\u4F1A\u63A5\u6536\u5230\u4F20\u7ED9 next()\u65B9\u6CD5\u7684\u7B2C\u4E00\u4E2A\u503C\u3002\u8FD9\u91CC\u6709\u4E2A\u5730\u65B9\u4E0D\u592A\u597D\u7406\u89E3\u2014\u2014\u7B2C\u4E00\u6B21\u8C03\u7528 next()\u4F20\u5165\u7684\u503C\u4E0D\u4F1A\u88AB\u4F7F\u7528\uFF0C\u56E0\u4E3A\u8FD9\u4E00\u6B21\u8C03\u7528\u662F\u4E3A\u4E86\u5F00\u59CB\u6267\u884C\u751F\u6210\u5668\u51FD\u6570\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token parameter">initial</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>initial<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">yield</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">yield</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> generatorObject <span class="token operator">=</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
generatorObject<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token string">&quot;bar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// foo</span>
generatorObject<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token string">&quot;baz&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// baz</span>
generatorObject<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token string">&quot;qux&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// qux</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>yield \u5173\u952E\u5B57\u53EF\u4EE5\u540C\u65F6\u7528\u4E8E\u8F93\u5165\u548C\u8F93\u51FA\uFF0C\u5982\u4E0B\u4F8B\u6240\u793A\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">yield</span> <span class="token string">&quot;foo&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> generatorObject <span class="token operator">=</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>generatorObject<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { done: false, value: &#39;foo&#39; }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>generatorObject<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token string">&quot;bar&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { done: true, value: &#39;bar&#39; }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56E0\u4E3A\u51FD\u6570\u5FC5\u987B\u5BF9\u6574\u4E2A\u8868\u8FBE\u5F0F\u6C42\u503C\u624D\u80FD\u786E\u5B9A\u8981\u8FD4\u56DE\u7684\u503C\uFF0C\u6240\u4EE5\u5B83\u5728\u9047\u5230 yield \u5173\u952E\u5B57\u65F6\u6682\u505C\u6267\u884C\u5E76\u8BA1\u7B97\u51FA\u8981\u4EA7\u751F\u7684\u503C\uFF1A&quot;foo&quot;\u3002\u4E0B\u4E00\u6B21\u8C03\u7528 next()\u4F20\u5165\u4E86&quot;bar&quot;\uFF0C\u4F5C\u4E3A\u4EA4\u7ED9\u540C\u4E00\u4E2A yield \u7684\u503C\u3002\u7136\u540E\u8FD9\u4E2A\u503C\u88AB\u786E\u5B9A\u4E3A\u672C\u6B21\u751F\u6210\u5668\u51FD\u6570\u8981\u8FD4\u56DE\u7684\u503C\u3002yield \u5173\u952E\u5B57\u5E76\u975E\u53EA\u80FD\u4F7F\u7528\u4E00\u6B21\u3002\u6BD4\u5982\uFF0C\u4EE5\u4E0B\u4EE3\u7801\u5C31\u5B9A\u4E49\u4E86\u4E00\u4E2A\u65E0\u7A77\u8BA1\u6570\u751F\u6210\u5668\u51FD\u6570\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> i<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> generatorObject <span class="token operator">=</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>generatorObject<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>generatorObject<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>generatorObject<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>generatorObject<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>generatorObject<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 4</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>generatorObject<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5047\u8BBE\u6211\u4EEC\u60F3\u5B9A\u4E49\u4E00\u4E2A\u751F\u6210\u5668\u51FD\u6570\uFF0C\u5B83\u4F1A\u6839\u636E\u914D\u7F6E\u7684\u503C\u8FED\u4EE3\u76F8\u5E94\u6B21\u6570\u5E76\u4EA7\u751F\u8FED\u4EE3\u7684\u7D22\u5F15\u3002\u521D\u59CB\u5316\u4E00\u4E2A\u65B0\u6570\u7EC4\u53EF\u4EE5\u5B9E\u73B0\u8FD9\u4E2A\u9700\u6C42\uFF0C\u4F46\u4E0D\u7528\u6570\u7EC4\u4E5F\u53EF\u4EE5\u5B9E\u73B0\u540C\u6837\u7684\u884C\u4E3A\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">nTimes</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> i<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> x <span class="token keyword">of</span> <span class="token function">nTimes</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 0</span>
<span class="token comment">// 1</span>
<span class="token comment">// 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53E6\u5916\uFF0C\u4F7F\u7528 while \u5FAA\u73AF\u4E5F\u53EF\u4EE5\uFF0C\u800C\u4E14\u4EE3\u7801\u7A0D\u5FAE\u7B80\u6D01\u4E00\u70B9\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">nTimes</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>n<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> i<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> x <span class="token keyword">of</span> <span class="token function">nTimes</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 0</span>
<span class="token comment">// 1</span>
<span class="token comment">// 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u6837\u4F7F\u7528\u751F\u6210\u5668\u4E5F\u53EF\u4EE5\u5B9E\u73B0\u8303\u56F4\u548C\u586B\u5145\u6570\u7EC4\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">range</span><span class="token punctuation">(</span><span class="token parameter">start<span class="token punctuation">,</span> end</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>end <span class="token operator">&gt;</span> start<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> start<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> x <span class="token keyword">of</span> <span class="token function">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 4</span>
<span class="token comment">// 5</span>
<span class="token comment">// 6</span>
<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">zeroes</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>n<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token function">zeroes</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [0, 0, 0, 0, 0, 0, 0, 0]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>3. \u4EA7\u751F\u53EF\u8FED\u4EE3\u5BF9\u8C61</strong><br> \u53EF\u4EE5\u4F7F\u7528\u661F\u53F7\u589E\u5F3A yield \u7684\u884C\u4E3A\uFF0C\u8BA9\u5B83\u80FD\u591F\u8FED\u4EE3\u4E00\u4E2A\u53EF\u8FED\u4EE3\u5BF9\u8C61\uFF0C\u4ECE\u800C\u4E00\u6B21\u4EA7\u51FA\u4E00\u4E2A\u503C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u7B49\u4EF7\u7684 generatorFn\uFF1A</span>
<span class="token comment">// function* generatorFn() {</span>
<span class="token comment">// for (const x of [1, 2, 3]) {</span>
<span class="token comment">// yield x;</span>
<span class="token comment">// }</span>
<span class="token comment">// }</span>
<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span><span class="token operator">*</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> generatorObject <span class="token operator">=</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> x <span class="token keyword">of</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 1</span>
<span class="token comment">// 2</span>
<span class="token comment">// 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0E\u751F\u6210\u5668\u51FD\u6570\u7684\u661F\u53F7\u7C7B\u4F3C\uFF0Cyield \u661F\u53F7\u4E24\u4FA7\u7684\u7A7A\u683C\u4E0D\u5F71\u54CD\u5176\u884C\u4E3A\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span><span class="token operator">*</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span><span class="token operator">*</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">yield</span><span class="token operator">*</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> x <span class="token keyword">of</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 1</span>
<span class="token comment">// 2</span>
<span class="token comment">// 3</span>
<span class="token comment">// 4</span>
<span class="token comment">// 5</span>
<span class="token comment">// 6</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56E0\u4E3A yield*\u5B9E\u9645\u4E0A\u53EA\u662F\u5C06\u4E00\u4E2A\u53EF\u8FED\u4EE3\u5BF9\u8C61\u5E8F\u5217\u5316\u4E3A\u4E00\u8FDE\u4E32\u53EF\u4EE5\u5355\u72EC\u4EA7\u51FA\u7684\u503C\uFF0C\u6240\u4EE5\u8FD9\u8DDF\u628A yield \u653E\u5230\u4E00\u4E2A\u5FAA\u73AF\u91CC\u6CA1\u4EC0\u4E48\u4E0D\u540C\u3002\u4E0B\u9762\u4E24\u4E2A\u751F\u6210\u5668\u51FD\u6570\u7684\u884C\u4E3A\u662F\u7B49\u4EF7\u7684\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFnA</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> x <span class="token keyword">of</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> x<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> x <span class="token keyword">of</span> <span class="token function">generatorFnA</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 1</span>
<span class="token comment">// 2</span>
<span class="token comment">// 3</span>
<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFnB</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span><span class="token operator">*</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> x <span class="token keyword">of</span> <span class="token function">generatorFnB</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 1</span>
<span class="token comment">// 2</span>
<span class="token comment">// 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>yield*\u7684\u503C\u662F\u5173\u8054\u8FED\u4EE3\u5668\u8FD4\u56DE done: true \u65F6\u7684 value \u5C5E\u6027\u3002\u5BF9\u4E8E\u666E\u901A\u8FED\u4EE3\u5668\u6765\u8BF4\uFF0C\u8FD9\u4E2A\u503C\u662F undefined\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;iter value:&quot;</span><span class="token punctuation">,</span> <span class="token keyword">yield</span><span class="token operator">*</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> x <span class="token keyword">of</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;value:&quot;</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// value: 1</span>
<span class="token comment">// value: 2</span>
<span class="token comment">// value: 3</span>
<span class="token comment">// iter value: undefined</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BF9\u4E8E\u751F\u6210\u5668\u51FD\u6570\u4EA7\u751F\u7684\u8FED\u4EE3\u5668\u6765\u8BF4\uFF0C\u8FD9\u4E2A\u503C\u5C31\u662F\u751F\u6210\u5668\u51FD\u6570\u8FD4\u56DE\u7684\u503C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">innerGeneratorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token string">&quot;foo&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token string">&quot;bar&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">outerGeneratorFn</span><span class="token punctuation">(</span><span class="token parameter">genObj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;iter value:&quot;</span><span class="token punctuation">,</span> <span class="token keyword">yield</span><span class="token operator">*</span> <span class="token function">innerGeneratorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> x <span class="token keyword">of</span> <span class="token function">outerGeneratorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;value:&quot;</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// value: foo</span>
<span class="token comment">// iter value: bar</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>4. \u4F7F\u7528 yield*\u5B9E\u73B0\u9012\u5F52\u7B97\u6CD5</strong><br> yield*\u6700\u6709\u7528\u7684\u5730\u65B9\u662F\u5B9E\u73B0\u9012\u5F52\u64CD\u4F5C\uFF0C\u6B64\u65F6\u751F\u6210\u5668\u53EF\u4EE5\u4EA7\u751F\u81EA\u8EAB\u3002\u770B\u4E0B\u9762\u7684\u4F8B\u5B50\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">nTimes</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span><span class="token operator">*</span> <span class="token function">nTimes</span><span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">yield</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> x <span class="token keyword">of</span> <span class="token function">nTimes</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 0</span>
<span class="token comment">// 1</span>
<span class="token comment">// 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u8FD9\u4E2A\u4F8B\u5B50\u4E2D\uFF0C\u6BCF\u4E2A\u751F\u6210\u5668\u9996\u5148\u90FD\u4F1A\u4ECE\u65B0\u521B\u5EFA\u7684\u751F\u6210\u5668\u5BF9\u8C61\u4EA7\u51FA\u6BCF\u4E2A\u503C\uFF0C\u7136\u540E\u518D\u4EA7\u51FA\u4E00\u4E2A\u6574\u6570\u3002\u7ED3\u679C\u5C31\u662F\u751F\u6210\u5668\u51FD\u6570\u4F1A\u9012\u5F52\u5730\u51CF\u5C11\u8BA1\u6570\u5668\u503C\uFF0C\u5E76\u5B9E\u4F8B\u5316\u53E6\u4E00\u4E2A\u751F\u6210\u5668\u5BF9\u8C61\u3002\u4ECE\u6700\u9876\u5C42\u6765\u770B\uFF0C\u8FD9\u5C31\u76F8\u5F53\u4E8E\u521B\u5EFA\u4E00\u4E2A\u53EF\u8FED\u4EE3\u5BF9\u8C61\u5E76\u8FD4\u56DE\u9012\u589E\u7684\u6574\u6570\u3002</p><p>\u4F7F\u7528\u9012\u5F52\u751F\u6210\u5668\u7ED3\u6784\u548C yield*\u53EF\u4EE5\u4F18\u96C5\u5730\u8868\u8FBE\u9012\u5F52\u7B97\u6CD5\u3002\u4E0B\u9762\u662F\u4E00\u4E2A\u56FE\u7684\u5B9E\u73B0\uFF0C\u7528\u4E8E\u751F\u6210\u4E00\u4E2A\u968F\u673A\u7684\u53CC\u5411\u56FE\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Node</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>neighbors <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token function">connect</span><span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>node <span class="token operator">!==</span> <span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>neighbors<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
      node<span class="token punctuation">.</span>neighbors<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">RandomGraph</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">size</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>nodes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u521B\u5EFA\u8282\u70B9</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>nodes<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Node</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u968F\u673A\u8FDE\u63A5\u8282\u70B9</span>
    <span class="token keyword">const</span> threshold <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> size<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> x <span class="token keyword">of</span> <span class="token keyword">this</span><span class="token punctuation">.</span>nodes<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> y <span class="token keyword">of</span> <span class="token keyword">this</span><span class="token punctuation">.</span>nodes<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> threshold<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          x<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u8FD9\u4E2A\u65B9\u6CD5\u4EC5\u7528\u4E8E\u8C03\u8BD5</span>
  <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> node <span class="token keyword">of</span> <span class="token keyword">this</span><span class="token punctuation">.</span>nodes<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> ids <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>node<span class="token punctuation">.</span>neighbors<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> n<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>node<span class="token punctuation">.</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>ids<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> g <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RandomGraph</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
g<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u793A\u4F8B\u8F93\u51FA\uFF1A</span>
<span class="token comment">// 0: 2,3,5</span>
<span class="token comment">// 1: 2,3,4,5</span>
<span class="token comment">// 2: 1,3</span>
<span class="token comment">// 3: 0,1,2,4</span>
<span class="token comment">// 4: 2,3</span>
<span class="token comment">// 5: 0,4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u56FE\u6570\u636E\u7ED3\u6784\u975E\u5E38\u9002\u5408\u9012\u5F52\u904D\u5386\uFF0C\u800C\u9012\u5F52\u751F\u6210\u5668\u6070\u597D\u975E\u5E38\u5408\u7528\u3002\u4E3A\u6B64\uFF0C\u751F\u6210\u5668\u51FD\u6570\u5FC5\u987B\u63A5\u6536\u4E00\u4E2A\u53EF\u8FED\u4EE3\u5BF9\u8C61\uFF0C\u4EA7\u51FA\u8BE5\u5BF9\u8C61\u4E2D\u7684\u6BCF\u4E00\u4E2A\u503C\uFF0C\u5E76\u4E14\u5BF9\u6BCF\u4E2A\u503C\u8FDB\u884C\u9012\u5F52\u3002\u8FD9\u4E2A\u5B9E\u73B0\u53EF\u4EE5\u7528\u6765\u6D4B\u8BD5\u67D0\u4E2A\u56FE\u662F\u5426\u8FDE\u901A\uFF0C\u5373\u662F\u5426\u6CA1\u6709\u4E0D\u53EF\u5230\u8FBE\u7684\u8282\u70B9\u3002\u53EA\u8981\u4ECE\u4E00\u4E2A\u8282\u70B9\u5F00\u59CB\uFF0C\u7136\u540E\u5C3D\u529B\u8BBF\u95EE\u6BCF\u4E2A\u8282\u70B9\u5C31\u53EF\u4EE5\u4E86\u3002\u7ED3\u679C\u5C31\u5F97\u5230\u4E86\u4E00\u4E2A\u975E\u5E38\u7B80\u6D01\u7684\u6DF1\u5EA6\u4F18\u5148\u904D\u5386\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Node</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">id</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">///todo...</span>
  <span class="token punctuation">}</span>
  <span class="token function">connect</span><span class="token punctuation">(</span><span class="token parameter">node</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">///todo...</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name">RandomGraph</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">size</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">///todo...</span>
  <span class="token punctuation">}</span>
  <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">///todo...</span>
  <span class="token punctuation">}</span>
  <span class="token function">isConnected</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> visitedNodes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">traverse</span><span class="token punctuation">(</span><span class="token parameter">nodes</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> node <span class="token keyword">of</span> nodes<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>visitedNodes<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">yield</span> node<span class="token punctuation">;</span>
          <span class="token keyword">yield</span><span class="token operator">*</span> <span class="token function">traverse</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>neighbors<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u53D6\u5F97\u96C6\u5408\u4E2D\u7684\u7B2C\u4E00\u4E2A\u8282\u70B9</span>
    <span class="token keyword">const</span> firstNode <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>nodes<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>
    <span class="token comment">// \u4F7F\u7528\u9012\u5F52\u751F\u6210\u5668\u8FED\u4EE3\u6BCF\u4E2A\u8282\u70B9</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> node <span class="token keyword">of</span> <span class="token function">traverse</span><span class="token punctuation">(</span><span class="token punctuation">[</span>firstNode<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      visitedNodes<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> visitedNodes<span class="token punctuation">.</span>size <span class="token operator">===</span> <span class="token keyword">this</span><span class="token punctuation">.</span>nodes<span class="token punctuation">.</span>size<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-3-3-\u751F\u6210\u5668\u4F5C\u4E3A\u9ED8\u8BA4\u8FED\u4EE3\u5668" tabindex="-1"><a class="header-anchor" href="#_7-3-3-\u751F\u6210\u5668\u4F5C\u4E3A\u9ED8\u8BA4\u8FED\u4EE3\u5668" aria-hidden="true">#</a> 7.3.3 \u751F\u6210\u5668\u4F5C\u4E3A\u9ED8\u8BA4\u8FED\u4EE3\u5668</h2><p>\u56E0\u4E3A\u751F\u6210\u5668\u5BF9\u8C61\u5B9E\u73B0\u4E86 Iterable \u63A5\u53E3\uFF0C\u800C\u4E14\u751F\u6210\u5668\u51FD\u6570\u548C\u9ED8\u8BA4\u8FED\u4EE3\u5668\u88AB\u8C03\u7528\u4E4B\u540E\u90FD\u4EA7\u751F\u8FED\u4EE3\u5668\uFF0C\u6240\u4EE5\u751F\u6210\u5668\u683C\u5916\u9002\u5408\u4F5C\u4E3A\u9ED8\u8BA4\u8FED\u4EE3\u5668\u3002\u4E0B\u9762\u662F\u4E00\u4E2A\u7B80\u5355\u7684\u4F8B\u5B50\uFF0C\u8FD9\u4E2A\u7C7B\u7684\u9ED8\u8BA4\u8FED\u4EE3\u5668\u53EF\u4EE5\u7528\u4E00\u884C\u4EE3\u7801\u4EA7\u51FA\u7C7B\u7684\u5185\u5BB9\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">class</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>values <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token operator">*</span><span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span><span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>values<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> f <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> x <span class="token keyword">of</span> f<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 1</span>
<span class="token comment">// 2</span>
<span class="token comment">// 3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\uFF0Cfor-of \u5FAA\u73AF\u8C03\u7528\u4E86\u9ED8\u8BA4\u8FED\u4EE3\u5668\uFF08\u5B83\u6070\u597D\u53C8\u662F\u4E00\u4E2A\u751F\u6210\u5668\u51FD\u6570\uFF09\u5E76\u4EA7\u751F\u4E86\u4E00\u4E2A\u751F\u6210\u5668\u5BF9\u8C61\u3002\u8FD9\u4E2A\u751F\u6210\u5668\u5BF9\u8C61\u662F\u53EF\u8FED\u4EE3\u7684\uFF0C\u6240\u4EE5\u5B8C\u5168\u53EF\u4EE5\u5728\u8FED\u4EE3\u4E2D\u4F7F\u7528\u3002</p><h3 id="_7-3-4-\u63D0\u524D\u7EC8\u6B62\u751F\u6210\u5668" tabindex="-1"><a class="header-anchor" href="#_7-3-4-\u63D0\u524D\u7EC8\u6B62\u751F\u6210\u5668" aria-hidden="true">#</a> 7.3.4 \u63D0\u524D\u7EC8\u6B62\u751F\u6210\u5668</h3><p>\u4E0E\u8FED\u4EE3\u5668\u7C7B\u4F3C\uFF0C\u751F\u6210\u5668\u4E5F\u652F\u6301\u201C\u53EF\u5173\u95ED\u201D\u7684\u6982\u5FF5\u3002\u4E00\u4E2A\u5B9E\u73B0 Iterator \u63A5\u53E3\u7684\u5BF9\u8C61\u4E00\u5B9A\u6709 next()\u65B9\u6CD5\uFF0C\u8FD8\u6709\u4E00\u4E2A\u53EF\u9009\u7684 return()\u65B9\u6CD5\u7528\u4E8E\u63D0\u524D\u7EC8\u6B62\u8FED\u4EE3\u5668\u3002\u751F\u6210\u5668\u5BF9\u8C61\u9664\u4E86\u6709\u8FD9\u4E24\u4E2A\u65B9\u6CD5\uFF0C\u8FD8\u6709\u7B2C\u4E09\u4E2A\u65B9\u6CD5\uFF1Athrow()\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">const</span> g <span class="token operator">=</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// generatorFn {&lt;suspended&gt;}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span>next<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// f next() { [native code] }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span>return<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// f return() { [native code] }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span>throw<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// f throw() { [native code] }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>return()\u548C throw()\u65B9\u6CD5\u90FD\u53EF\u4EE5\u7528\u4E8E\u5F3A\u5236\u751F\u6210\u5668\u8FDB\u5165\u5173\u95ED\u72B6\u6001\u3002</p><p><strong>1. return()</strong><br> return()\u65B9\u6CD5\u4F1A\u5F3A\u5236\u751F\u6210\u5668\u8FDB\u5165\u5173\u95ED\u72B6\u6001\u3002\u63D0\u4F9B\u7ED9 return()\u65B9\u6CD5\u7684\u503C\uFF0C\u5C31\u662F\u7EC8\u6B62\u8FED\u4EE3\u5668\u5BF9\u8C61\u7684\u503C\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> x <span class="token keyword">of</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> x<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> g <span class="token operator">=</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// generatorFn {&lt;suspended&gt;}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">return</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { done: true, value: 4 }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// generatorFn {&lt;closed&gt;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0E\u8FED\u4EE3\u5668\u4E0D\u540C\uFF0C\u6240\u6709\u751F\u6210\u5668\u5BF9\u8C61\u90FD\u6709 return()\u65B9\u6CD5\uFF0C\u53EA\u8981\u901A\u8FC7\u5B83\u8FDB\u5165\u5173\u95ED\u72B6\u6001\uFF0C\u5C31\u65E0\u6CD5\u6062\u590D\u4E86\u3002\u540E\u7EED\u8C03\u7528 next()\u4F1A\u663E\u793A done: true \u72B6\u6001\uFF0C\u800C\u63D0\u4F9B\u7684\u4EFB\u4F55\u8FD4\u56DE\u503C\u90FD\u4E0D\u4F1A\u88AB\u5B58\u50A8\u6216\u4F20\u64AD\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> x <span class="token keyword">of</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> x<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> g <span class="token operator">=</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { done: false, value: 1 }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">return</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { done: true, value: 4 }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { done: true, value: undefined }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { done: true, value: undefined }</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { done: true, value: undefined }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>for-of \u5FAA\u73AF\u7B49\u5185\u7F6E\u8BED\u8A00\u7ED3\u6784\u4F1A\u5FFD\u7565\u72B6\u6001\u4E3A done: true \u7684 IteratorObject \u5185\u90E8\u8FD4\u56DE\u7684\u503C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> x <span class="token keyword">of</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> x<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> g <span class="token operator">=</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> x <span class="token keyword">of</span> g<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    g<span class="token punctuation">.</span><span class="token function">return</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">// 1</span>
<span class="token comment">// 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2. throw()</strong><br> throw()\u65B9\u6CD5\u4F1A\u5728\u6682\u505C\u7684\u65F6\u5019\u5C06\u4E00\u4E2A\u63D0\u4F9B\u7684\u9519\u8BEF\u6CE8\u5165\u5230\u751F\u6210\u5668\u5BF9\u8C61\u4E2D\u3002\u5982\u679C\u9519\u8BEF\u672A\u88AB\u5904\u7406\uFF0C\u751F\u6210\u5668\u5C31\u4F1A\u5173\u95ED\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> x <span class="token keyword">of</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> x<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> g <span class="token operator">=</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// generatorFn {&lt;suspended&gt;}</span>
<span class="token keyword">try</span> <span class="token punctuation">{</span>
  g<span class="token punctuation">.</span><span class="token function">throw</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// foo</span>
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// generatorFn {&lt;closed&gt;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0D\u8FC7\uFF0C\u5047\u5982\u751F\u6210\u5668\u51FD\u6570\u5185\u90E8\u5904\u7406\u4E86\u8FD9\u4E2A\u9519\u8BEF\uFF0C\u90A3\u4E48\u751F\u6210\u5668\u5C31\u4E0D\u4F1A\u5173\u95ED\uFF0C\u800C\u4E14\u8FD8\u53EF\u4EE5\u6062\u590D\u6267\u884C\u3002\u9519\u8BEF\u5904\u7406\u4F1A\u8DF3\u8FC7\u5BF9\u5E94\u7684 yield\uFF0C\u56E0\u6B64\u5728\u8FD9\u4E2A\u4F8B\u5B50\u4E2D\u4F1A\u8DF3\u8FC7\u4E00\u4E2A\u503C\u3002\u6BD4\u5982\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> x <span class="token keyword">of</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token keyword">yield</span> x<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> g <span class="token operator">=</span> <span class="token function">generatorFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { done: false, value: 1}</span>
g<span class="token punctuation">.</span><span class="token function">throw</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>g<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// { done: false, value: 3}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u8FD9\u4E2A\u4F8B\u5B50\u4E2D\uFF0C\u751F\u6210\u5668\u5728 try/catch \u5757\u4E2D\u7684 yield \u5173\u952E\u5B57\u5904\u6682\u505C\u6267\u884C\u3002\u5728\u6682\u505C\u671F\u95F4\uFF0Cthrow()\u65B9\u6CD5\u5411\u751F\u6210\u5668\u5BF9\u8C61\u5185\u90E8\u6CE8\u5165\u4E86\u4E00\u4E2A\u9519\u8BEF\uFF1A\u5B57\u7B26\u4E32&quot;foo&quot;\u3002\u8FD9\u4E2A\u9519\u8BEF\u4F1A\u88AB yield \u5173\u952E\u5B57\u629B\u51FA\u3002\u56E0\u4E3A\u9519\u8BEF\u662F\u5728\u751F\u6210\u5668\u7684 try/catch \u5757\u4E2D\u629B\u51FA\u7684\uFF0C\u6240\u4EE5\u4ECD\u7136\u5728\u751F\u6210\u5668\u5185\u90E8\u88AB\u6355\u83B7\u3002\u53EF\u662F\uFF0C\u7531\u4E8E yield \u629B\u51FA\u4E86\u90A3\u4E2A\u9519\u8BEF\uFF0C\u751F\u6210\u5668\u5C31\u4E0D\u4F1A\u518D\u4EA7\u51FA\u503C 2\u3002\u6B64\u65F6\uFF0C\u751F\u6210\u5668\u51FD\u6570\u7EE7\u7EED\u6267\u884C\uFF0C\u5728\u4E0B\u4E00\u6B21\u8FED\u4EE3\u518D\u6B21\u9047\u5230 yield \u5173\u952E\u5B57\u65F6\u4EA7\u51FA\u4E86\u503C 3\u3002</p><div class="custom-container tip"><p class="custom-container-title">\u6CE8\u610F</p><p>\u5982\u679C\u751F\u6210\u5668\u5BF9\u8C61\u8FD8\u6CA1\u6709\u5F00\u59CB\u6267\u884C\uFF0C\u90A3\u4E48\u8C03\u7528 throw()\u629B\u51FA\u7684\u9519\u8BEF\u4E0D\u4F1A\u5728\u51FD\u6570\u5185\u90E8\u88AB\u6355\u83B7\uFF0C\u56E0\u4E3A\u8FD9\u76F8\u5F53\u4E8E\u5728\u51FD\u6570\u5757\u5916\u90E8\u629B\u51FA\u4E86\u9519\u8BEF\u3002</p></div><h2 id="_7-4-\u5C0F\u7ED3" tabindex="-1"><a class="header-anchor" href="#_7-4-\u5C0F\u7ED3" aria-hidden="true">#</a> 7.4 \u5C0F\u7ED3</h2><p>\u8FED\u4EE3\u662F\u4E00\u79CD\u6240\u6709\u7F16\u7A0B\u8BED\u8A00\u4E2D\u90FD\u53EF\u4EE5\u770B\u5230\u7684\u6A21\u5F0F\u3002ECMAScript 6 \u6B63\u5F0F\u652F\u6301\u8FED\u4EE3\u6A21\u5F0F\u5E76\u5F15\u5165\u4E86\u4E24\u4E2A\u65B0\u7684\u8BED\u8A00\u7279\u6027\uFF1A\u8FED\u4EE3\u5668\u548C\u751F\u6210\u5668\u3002</p><p>\u8FED\u4EE3\u5668\u662F\u4E00\u4E2A\u53EF\u4EE5\u7531\u4EFB\u610F\u5BF9\u8C61\u5B9E\u73B0\u7684\u63A5\u53E3\uFF0C\u652F\u6301\u8FDE\u7EED\u83B7\u53D6\u5BF9\u8C61\u4EA7\u51FA\u7684\u6BCF\u4E00\u4E2A\u503C\u3002\u4EFB\u4F55\u5B9E\u73B0 Iterable \u63A5\u53E3\u7684\u5BF9\u8C61\u90FD\u6709\u4E00\u4E2A Symbol.iterator \u5C5E\u6027\uFF0C\u8FD9\u4E2A\u5C5E\u6027\u5F15\u7528\u9ED8\u8BA4\u8FED\u4EE3\u5668\u3002\u9ED8\u8BA4\u8FED\u4EE3\u5668\u5C31\u50CF\u4E00\u4E2A\u8FED\u4EE3\u5668\u5DE5\u5382\uFF0C\u4E5F\u5C31\u662F\u4E00\u4E2A\u51FD\u6570\uFF0C\u8C03\u7528\u4E4B\u540E\u4F1A\u4EA7\u751F\u4E00\u4E2A\u5B9E\u73B0 Iterator \u63A5\u53E3\u7684\u5BF9\u8C61\u3002</p><p>\u8FED\u4EE3\u5668\u5FC5\u987B\u901A\u8FC7\u8FDE\u7EED\u8C03\u7528 next()\u65B9\u6CD5\u624D\u80FD\u8FDE\u7EED\u53D6\u5F97\u503C\uFF0C\u8FD9\u4E2A\u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A IteratorObject\u3002\u8FD9\u4E2A\u5BF9\u8C61\u5305\u542B\u4E00\u4E2A done \u5C5E\u6027\u548C\u4E00\u4E2A value \u5C5E\u6027\u3002\u524D\u8005\u662F\u4E00\u4E2A\u5E03\u5C14\u503C\uFF0C\u8868\u793A\u662F\u5426\u8FD8\u6709\u66F4\u591A\u503C\u53EF\u4EE5\u8BBF\u95EE\uFF1B\u540E\u8005\u5305\u542B\u8FED\u4EE3\u5668\u8FD4\u56DE\u7684\u5F53\u524D\u503C\u3002\u8FD9\u4E2A\u63A5\u53E3\u53EF\u4EE5\u901A\u8FC7\u624B\u52A8\u53CD\u590D\u8C03\u7528 next()\u65B9\u6CD5\u6765\u6D88\u8D39\uFF0C\u4E5F\u53EF\u4EE5\u901A\u8FC7\u539F\u751F\u6D88\u8D39\u8005\uFF0C\u6BD4\u5982 for-of \u5FAA\u73AF\u6765\u81EA\u52A8\u6D88\u8D39\u3002</p><p>\u751F\u6210\u5668\u662F\u4E00\u79CD\u7279\u6B8A\u7684\u51FD\u6570\uFF0C\u8C03\u7528\u4E4B\u540E\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u751F\u6210\u5668\u5BF9\u8C61\u3002\u751F\u6210\u5668\u5BF9\u8C61\u5B9E\u73B0\u4E86 Iterable \u63A5\u53E3\uFF0C\u56E0\u6B64\u53EF\u7528\u5728\u4EFB\u4F55\u6D88\u8D39\u53EF\u8FED\u4EE3\u5BF9\u8C61\u7684\u5730\u65B9\u3002\u751F\u6210\u5668\u7684\u72EC\u7279\u4E4B\u5904\u5728\u4E8E\u652F\u6301 yield \u5173\u952E\u5B57\uFF0C\u8FD9\u4E2A\u5173\u952E\u5B57\u80FD\u591F\u6682\u505C\u6267\u884C\u751F\u6210\u5668\u51FD\u6570\u3002\u4F7F\u7528 yield \u5173\u952E\u5B57\u8FD8\u53EF\u4EE5\u901A\u8FC7 next()\u65B9\u6CD5\u63A5\u6536\u8F93\u5165\u548C\u4EA7\u751F\u8F93\u51FA\u3002\u5728\u52A0\u4E0A\u661F\u53F7\u4E4B\u540E\uFF0Cyield \u5173\u952E\u5B57\u53EF\u4EE5\u5C06\u8DDF\u5728\u5B83\u540E\u9762\u7684\u53EF\u8FED\u4EE3\u5BF9\u8C61\u5E8F\u5217\u5316\u4E3A\u4E00\u8FDE\u4E32\u503C\u3002</p>`,151),e=[o];function c(l,u){return s(),a("div",null,e)}var k=n(p,[["render",c],["__file","\u7B2C7\u7AE0_\u8FED\u4EE3\u5668\u4E0E\u751F\u6210\u5668.html.vue"]]);export{k as default};
